{
    "pipes": [],
    "interfaces": [
        {
            "name": "Coordinates",
            "id": "interface-Coordinates-1843874871f79d057d1b08601f71f4b41ef9227ce7cc53d87b64f60d0f00bb9e9bfbacfe3fcf5bbe6ae384815673c0bbd940138e944136d011779b1398c78b54",
            "file": "src/diagrams/edge/edge.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\nimport { buildStraightPathString } from \"@carbon/charts/components/diagrams/buildPaths\";\n\nconst { prefix } = settings;\ninterface Coordinates {\n\tx: number;\n\ty: number;\n}\n@Component({\n\tselector: \"[ibm-graph-edge]\",\n\ttemplate: `\n\t<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t\t<svg:path\n\t\t\t[ngClass]=\"namespace + '__container'\"\n\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t/>\n\t\t<svg:path\n\t\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t/>\n\t\t<svg:path\n\t\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t\t[ngStyle]=\"{'stroke': color}\"\n\t\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\"\n\t\t/>\n\t</svg:g>\n\t`\n})\n\nexport class EdgeComponent {\n\t@Input() color: string;\n\t@Input() markerEnd: string;\n\t@Input() markerStart: string;\n\t@Input() source: Coordinates;\n\t@Input() target: Coordinates;\n\t@Input() variant: \"dash-sm\" | \"dash-md\" |  \"dash-lg\" |  \"dash-xl\" |  \"double\" |  \"tunnel\";\n\t@Input() path: string;\n\n\tpathClasses;\n\tnamespace = `${prefix}--cc--edge`;\n\tstraight = buildStraightPathString;\n}\n",
            "properties": [
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlluvialChartComponent",
            "id": "component-AlluvialChartComponent-59532470335463e331269b01e24b45d6112be0a6a20ce7a25befcb7fd9650bd4be41d3bba67b1f94c9645e5eafffcb40f4a309ac7b6325be996251633e40b588",
            "file": "src/alluvial-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-alluvial-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Alluvial</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Alluvial` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { AlluvialChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `Alluvial` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-alluvial-chart\",\n\ttemplate: ``\n})\nexport class AlluvialChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new AlluvialChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "AreaChartComponent",
            "id": "component-AreaChartComponent-cc16f377a0bb749c40425cfe5222ebc8e5575ff62a50104511e0ed865e3ef9ec117ed217a904afa35efa2065f3140ec9b2180edac1fdb1ae32e729424854b3d6",
            "file": "src/area-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "<div #nChart class=\"ibm-chart-container\">\n</div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>AreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `AreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { AreaChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `AreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-area-chart\",\n\ttemplate: `\n\t\t<div #nChart class=\"ibm-chart-container\">\n\t\t</div>\n\t`\n})\nexport class AreaChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new AreaChart(\n\t\t\tthis.chartRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BaseChart",
            "id": "component-BaseChart-dac4962c172902f0c17227aa0b0c00daf4fb2b58056952406f726d5b210ade182b53603239d4be1e0209b441a3f6784a03fc7cb098e4ff1eb4f240b8ca5281b3",
            "file": "src/base-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-base-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n"
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BaseChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BaseChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tInput,\n\tViewChild,\n\tOnInit,\n\tAfterViewInit,\n\tElementRef\n} from \"@angular/core\";\n\n/**\n * Wrapper around `BaseChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-base-chart\",\n\ttemplate: ``\n})\nexport class BaseChart implements AfterViewInit, OnInit {\n\tconstructor(protected elementRef: ElementRef) {}\n\n\t/**\n\t * Data passed to charts library for displaying\n\t */\n\t@Input() set data(newData) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst dataExistsAlready = this._data !== null && this._data !== undefined;\n\n\t\tthis._data = newData;\n\n\t\tif (dataExistsAlready) {\n\t\t\tthis.chart.model.setData(newData);\n\t\t}\n\t}\n\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Options passed to charts library\n\t */\n\t@Input() set options(newOptions) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst optionsExistAlready = this._options !== null && this._options !== undefined;\n\n\t\tthis._options = newOptions;\n\n\t\tif (optionsExistAlready) {\n\t\t\tthis.chart.model.setOptions(newOptions);\n\t\t}\n\t}\n\n\tget options() {\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * Chart width\n\t */\n\t@Input() width: any;\n\n\t/**\n\t * Chart height\n\t */\n\t@Input() height: any;\n\n\t/**\n\t * Chart container element ref\n\t */\n\t@ViewChild(\"nChart\") chartRef;\n\n\t/**\n\t * Chart object instance\n\t *\n\t * You can use this to do whatever you would normally do with a chart if you used\n\t * charts library directly.\n\t */\n\tchart;\n\n\tprivate _data: any;\n\tprivate _options: any;\n\n\tngOnInit() {\n\t\t// Width prop is mandatory for the wrappers\n\t\tif (this.width) {\n\t\t\tthis.options.width = this.width;\n\t\t}\n\n\t\t// Height prop is mandatory for the wrappers\n\t\tif (this.height) {\n\t\t\tthis.options.height = this.height;\n\t\t}\n\t}\n\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tconsole.log(\"You need to implement your own `ngAfterViewInit()` function\");\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newData",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "rawdescription": "\n\nData passed to charts library for displaying\n",
                        "description": "<p>Data passed to charts library for displaying</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newData",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "data",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                },
                "options": {
                    "name": "options",
                    "setSignature": {
                        "name": "options",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newOptions",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 43,
                        "rawdescription": "\n\nOptions passed to charts library\n",
                        "description": "<p>Options passed to charts library</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newOptions",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "options",
                        "type": "",
                        "returnType": "",
                        "line": 54
                    }
                }
            }
        },
        {
            "name": "BoxplotChartComponent",
            "id": "component-BoxplotChartComponent-d5b981168a5ffce58bfbb127af5b272e77a597f8b0cd4135bfb146e958224a45082affc936fb9f82f83848b238b749e6e07c916313e86fdd9289d634c4c9bd9c",
            "file": "src/boxplot-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-boxplot-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BoxplotChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BoxplotChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { BoxplotChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `BoxplotChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-boxplot-chart\",\n\ttemplate: ``\n})\nexport class BoxplotChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new BoxplotChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BubbleChartComponent",
            "id": "component-BubbleChartComponent-76d04b9300f65eec696241bcd055c274322e957fe813db487413f66b1a11cf4f11ed9374846721b161d009d3c5eccf140d218e5ff29293e080358cffb18f9ec1",
            "file": "src/bubble-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bubble-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { BubbleChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-bubble-chart\",\n\ttemplate: ``\n})\nexport class BubbleChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new BubbleChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BulletChartComponent",
            "id": "component-BulletChartComponent-7fca781dbae3470b846326eebe6c18bbf6946f481343da0a04412f5d4efd9cfa7603d99724ea15eeb9db675434a12c6abb96eaf65910663bd195fb33b2e8c58d",
            "file": "src/bullet-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bullet-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BulletChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BulletChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { BulletChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `BulletChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-bullet-chart\",\n\ttemplate: ``\n})\nexport class BulletChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new BulletChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "CardNodeColumnComponent",
            "id": "component-CardNodeColumnComponent-833f22409256db1e644dfe01d102e1f71ceddb86849dcafd9bda50e80846c937e8eae4f1f34ef8c884f034f6db7a447d98f37254784e777aacf0ea1c2d3b9423",
            "file": "src/diagrams/card-node/card-node-column.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-column",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div>\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "farsideColumn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, HostBinding } from '@angular/core';\nimport settings from 'carbon-components/src/globals/js/settings';\n\nconst { prefix } = settings;\n\n@Component({\n\tselector: 'ibm-diagram-card-node-column',\n\ttemplate: `\n\t\t<xhtml:div>\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`,\n})\nexport class CardNodeColumnComponent {\n\t@Input() farsideColumn = false;\n\n\t@HostBinding('class') get class() {\n\t\tconst farsideClassName = this.farsideColumn\n\t\t\t? `${prefix}--cc--card-node__column--farside`\n\t\t\t: '';\n\n\t\treturn `${prefix}--cc--card-node__column ${farsideClassName}`;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "class": {
                    "name": "class",
                    "getSignature": {
                        "name": "class",
                        "type": "",
                        "returnType": "",
                        "line": 17
                    }
                }
            }
        },
        {
            "name": "CardNodeComponent",
            "id": "component-CardNodeComponent-204e447d01e462ebdaf399ebf8faf6e56ab0c857f8481e1504815bc61bfe80a216474fc8ec5c212b65df75b72765dfeb92d267bf70bb7cf1679491d4b745e835",
            "file": "src/diagrams/card-node/card-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n\t<xhtml:div\n\t\t*ngSwitchCase=\"'div'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'border-color': color,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:div>\n\n\t<xhtml:button\n\t\t*ngSwitchCase=\"'button'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'border-color': color,\n\t\t\tposition: position\n\t\t}\"\n\t\t(click)=\"click.emit($event)\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:button>\n\n\t<xhtml:a\n\t\t*ngSwitchCase=\"'a'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[attr.href]=\"href\"\n\t\t[ngStyle]=\"{ 'border-color': color, position: position }\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:a>\n</ng-container>\n<ng-template #nodeTemplate>\n\t<ng-content></ng-content>\n</ng-template>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'static'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--card-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 91
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport settings from 'carbon-components/src/globals/js/settings';\n\nconst { prefix } = settings;\n\n@Component({\n\tselector: 'ibm-diagram-card-node',\n\ttemplate: `\n\t\t<ng-container [ngSwitch]=\"component\">\n\t\t\t<xhtml:div\n\t\t\t\t*ngSwitchCase=\"'div'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'border-color': color,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:div>\n\n\t\t\t<xhtml:button\n\t\t\t\t*ngSwitchCase=\"'button'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'border-color': color,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(click)=\"click.emit($event)\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:button>\n\n\t\t\t<xhtml:a\n\t\t\t\t*ngSwitchCase=\"'a'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[attr.href]=\"href\"\n\t\t\t\t[ngStyle]=\"{ 'border-color': color, position: position }\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:a>\n\t\t</ng-container>\n\t\t<ng-template #nodeTemplate>\n\t\t\t<ng-content></ng-content>\n\t\t</ng-template>\n\t`,\n})\nexport class CardNodeComponent implements OnInit {\n\t@Input() as = 'div';\n\t@Input() href: string = null;\n\t@Input() color;\n\t@Input() stacked;\n\t@Input() position: string = 'static';\n\n\t@Output() click: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseOver: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseOut: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseMove: EventEmitter<any> = new EventEmitter<any>();\n\n\tnamespace = `${prefix}--cc--card-node`;\n\n\tcomponent = 'div';\n\n\tngOnInit() {\n\t\tif (this.href) {\n\t\t\tthis.component = 'a';\n\t\t} else {\n\t\t\tthis.component = this.as;\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "CardNodeLabelComponent",
            "id": "component-CardNodeLabelComponent-3587d2f975800a18870196d7b2927fe7b5945676cc22624a95e2c2df96183d56dfefcdb97a7bc5e11c9b8f7f9d3864077da52e90fe548094ef219194d91eea84",
            "file": "src/diagrams/card-node/card-node-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-label",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:label [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:label>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--card-node__label`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\n\nconst { prefix } = settings;\n\n@Component({\n\tselector: \"ibm-diagram-card-node-label\",\n\ttemplate: `\n\t<xhtml:label [ngClass]=\"namespace\">\n\t\t<ng-content></ng-content>\n\t</xhtml:label>\n\t`\n})\n\nexport class CardNodeLabelComponent {\n\tnamespace = `${prefix}--cc--card-node__label`;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeSubtitleComponent",
            "id": "component-CardNodeSubtitleComponent-2577855b0d38032dee32f22a4a7b999d343132cf689f2e937bdcb3e313056773ebc5766f39aed29f28896f76d2edece7b43fe11e16e6aebc660b5f9efe1298c0",
            "file": "src/diagrams/card-node/card-node-subtitle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-subtitle",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--card-node__subtitle`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\n\nconst { prefix } = settings;\n\n@Component({\n\tselector: \"ibm-diagram-card-node-subtitle\",\n\ttemplate: `\n\t<xhtml:div [ngClass]=\"namespace\">\n\t\t<ng-content></ng-content>\n\t</xhtml:div>\n\t`\n})\n\nexport class CardNodeSubtitleComponent {\n\tnamespace = `${prefix}--cc--card-node__subtitle`;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeTitleComponent",
            "id": "component-CardNodeTitleComponent-3b06943cdb5944201215854114671d764457170bf00a661f5423805559ebcc01cce9077436ca817c5415f8b0e0575292ed35368b17a1bdfa700284ca56c20473",
            "file": "src/diagrams/card-node/card-node-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-title",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--card-node__title`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\n\nconst { prefix } = settings;\n\n@Component({\n\tselector: \"ibm-diagram-card-node-title\",\n\ttemplate: `\n\t<xhtml:div [ngClass]=\"namespace\">\n\t\t<ng-content></ng-content>\n\t</xhtml:div>\n\t`\n})\n\nexport class CardNodeTitleComponent {\n\tnamespace = `${prefix}--cc--card-node__title`;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CirclePackChartComponent",
            "id": "component-CirclePackChartComponent-4c18eb49e0e88d2f3f8004ef7e4442255c3636d0db281fe139c4d34f09c219498d09a733cdd1d364970c32eac3c30d20b4814507296d622dc69c404f928cf5ee",
            "file": "src/circle-pack-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-circle-pack-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { CirclePackChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-circle-pack-chart\",\n\ttemplate: ``\n})\nexport class CirclePackChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new CirclePackChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ComboChartComponent",
            "id": "component-ComboChartComponent-3e6cb1e7abe2183d67461945261d1504c01688090f420ae5dfa911107d7cdd090f59a59181ac849a765311bf1007d663e90b225130b3fa8b09dafdbef01a36f8",
            "file": "src/combo-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-combo-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ComboChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ComboChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\nimport { ComboChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `ComboChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-combo-chart\",\n\ttemplate: ``\n})\nexport class ComboChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new ComboChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "DonutChartComponent",
            "id": "component-DonutChartComponent-65bcda16677f4c9dadbf41584fd730a10cbbc8c72ca32d8cf5ed15384d70aad0760d33d401ee74b7a90e9f65b51f0ceebfa6f08037a76b9c22b08fba06facd2f",
            "file": "src/donut-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-donut-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>DonutChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `DonutChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { DonutChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `DonutChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-donut-chart\",\n\ttemplate: ``\n})\nexport class DonutChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new DonutChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "EdgeComponent",
            "id": "component-EdgeComponent-1843874871f79d057d1b08601f71f4b41ef9227ce7cc53d87b64f60d0f00bb9e9bfbacfe3fcf5bbe6ae384815673c0bbd940138e944136d011779b1398c78b54",
            "file": "src/diagrams/edge/edge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-edge]",
            "styleUrls": [],
            "styles": [],
            "template": "<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__container'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t/>\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t/>\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t[ngStyle]=\"{'stroke': color}\"\n\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\"\n\t/>\n</svg:g>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerEnd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerStart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "\"dash-sm\" | \"dash-md\" | \"dash-lg\" | \"dash-xl\" | \"double\" | \"tunnel\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--edge`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "pathClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "straight",
                    "defaultValue": "buildStraightPathString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\nimport { buildStraightPathString } from \"@carbon/charts/components/diagrams/buildPaths\";\n\nconst { prefix } = settings;\ninterface Coordinates {\n\tx: number;\n\ty: number;\n}\n@Component({\n\tselector: \"[ibm-graph-edge]\",\n\ttemplate: `\n\t<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t\t<svg:path\n\t\t\t[ngClass]=\"namespace + '__container'\"\n\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t/>\n\t\t<svg:path\n\t\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t/>\n\t\t<svg:path\n\t\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t\t[ngStyle]=\"{'stroke': color}\"\n\t\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\"\n\t\t/>\n\t</svg:g>\n\t`\n})\n\nexport class EdgeComponent {\n\t@Input() color: string;\n\t@Input() markerEnd: string;\n\t@Input() markerStart: string;\n\t@Input() source: Coordinates;\n\t@Input() target: Coordinates;\n\t@Input() variant: \"dash-sm\" | \"dash-md\" |  \"dash-lg\" |  \"dash-xl\" |  \"double\" |  \"tunnel\";\n\t@Input() path: string;\n\n\tpathClasses;\n\tnamespace = `${prefix}--cc--edge`;\n\tstraight = buildStraightPathString;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "GaugeChartComponent",
            "id": "component-GaugeChartComponent-c439862489029bc645b1d09147a433cf70e2c8d3b51fbe5b0097152da563cce88b727793e9ee8ee4aab14bbe19a2d28e467637112b84b864357f8f6897c90b62",
            "file": "src/gauge-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-gauge-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GaugeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GaugeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { GaugeChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `GaugeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-gauge-chart\",\n\ttemplate: ``\n})\nexport class GaugeChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new GaugeChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "GroupedBarChartComponent",
            "id": "component-GroupedBarChartComponent-274de434aa065b82cd58264530802d991b055705cd03b83b301968bcbd4bf119f6a69dac1c99f588f4eb9b6105ce6eacd4d697009e38d3ea451a20488cd1a795",
            "file": "src/bar-chart-grouped.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-grouped-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GroupedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GroupedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { GroupedBarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `GroupedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-grouped-bar-chart\",\n\ttemplate: ``\n})\nexport class GroupedBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new GroupedBarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HeatmapChartComponent",
            "id": "component-HeatmapChartComponent-9e2df168c93feef1e70f39b7e2dcb7eab9682a0d813fc4d7875e4189cbfe61e158709e7db353b7bf6f5c64fbace537d36fb108350313be81e297d358e3eab22a",
            "file": "src/heatmap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-heatmap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Heatmap</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Heatmap` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { HeatmapChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `Heatmap` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-heatmap-chart\",\n\ttemplate: ``\n})\nexport class HeatmapChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new HeatmapChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HistogramChartComponent",
            "id": "component-HistogramChartComponent-14666188fb7dbc25f8ac98dc4319767d5415dd954f5823e95575d7565db6c7b49c11c1449cf85e6cf7b925213a8aef97c17beb6416a6fcf3ae943608f7671d50",
            "file": "src/histogram-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-histogram-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>HistogramChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `HistogramChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { HistogramChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `HistogramChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-histogram-chart\",\n\ttemplate: ``\n})\nexport class HistogramChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new HistogramChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LineChartComponent",
            "id": "component-LineChartComponent-f84a0bbe83d9ee4346e572dfb2fb32e7a60d6cb3b7c0d445dcde9fde79633d0cc5354684d9adbb4d52c48532acc0da44b5be62926165fa95af4ccb5a8ff1d76b",
            "file": "src/line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-line-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LineChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LineChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { LineChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `LineChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-line-chart\",\n\ttemplate: ``\n})\nexport class LineChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new LineChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LollipopChartComponent",
            "id": "component-LollipopChartComponent-ae9385b454c87067ad53675372d5321cb76f4b4e7f7f80f4abe2fe778dcc1a07bb5c564aa2a8c7afc8ede5582dc807408c62514cfa74834c7bf75e81912a637b",
            "file": "src/lollipop-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-lollipop-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LollipopChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LollipopChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { LollipopChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `LollipopChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-lollipop-chart\",\n\ttemplate: ``\n})\nexport class LollipopChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new LollipopChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "MarkerArrowLeftComponent",
            "id": "component-MarkerArrowLeftComponent-c05a3c1e3df30458fd1d110b1e3fd35062ad2df92924cda81683b7d8f6dbf8cd5e31de946dc42d7da5f65400e32807d0b80e981730176fbcf46babe2dfa1a56c",
            "file": "src/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-left]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "\"auto\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "\"end\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\nimport {\n\tarrowLeft,\n\tarrowRight,\n\tcircle,\n\tdiamond,\n\tsquare,\n\ttee,\n} from \"@carbon/charts/components/diagrams/markerDefinitions\";\n\nconst { prefix } = settings;\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n\tselector: \"[ibm-graph-marker]\",\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d: string;\n\t@Input() color: string;\n\t@Input() id: string;\n\t@Input() orient: string | number = \"auto\";\n\t@Input() height: string | number;\n\t@Input() width: string | number;\n\t@Input() refX: string | number;\n\t@Input() refY: string | number;\n\t@Input() position: \"start\" | \"end\" = \"end\";\n\n\tnamespace = `${prefix}--cc--marker`;\n\n\tsetAttributes = ({d, id, height, width}) => {\n\t\tconst xPos = (this.position === \"end\") ? (width / 2) + 0.5 : 0.5;\n\t\tconst yPos = height / 2;\n\n\t\tthis.d = this.d || d;\n\t\tthis.id = this.id || id;\n\t\tthis.height = this.height || height;\n\t\tthis.width = this.width || width;\n\t\tthis.refX = this.refX || xPos;\n\t\tthis.refY = this.refY || yPos;\n\t}\n}\n\n@Component({ selector: \"[ibm-graph-marker-arrow-left]\", template})\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowLeft}); } }\n@Component({ selector: \"[ibm-graph-marker-arrow-right]\", template})\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowRight}); } }\n@Component({ selector: \"[ibm-graph-marker-circle]\", template})\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...circle}); } }\n@Component({ selector: \"[ibm-graph-marker-diamond]\", template})\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...diamond}); } }\n@Component({ selector: \"[ibm-graph-marker-square]\", template})\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...square}); } }\n@Component({ selector: \"[ibm-graph-marker-tee]\", template})\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...tee}); } }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerArrowRightComponent",
            "id": "component-MarkerArrowRightComponent-c05a3c1e3df30458fd1d110b1e3fd35062ad2df92924cda81683b7d8f6dbf8cd5e31de946dc42d7da5f65400e32807d0b80e981730176fbcf46babe2dfa1a56c",
            "file": "src/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-right]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "\"auto\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "\"end\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\nimport {\n\tarrowLeft,\n\tarrowRight,\n\tcircle,\n\tdiamond,\n\tsquare,\n\ttee,\n} from \"@carbon/charts/components/diagrams/markerDefinitions\";\n\nconst { prefix } = settings;\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n\tselector: \"[ibm-graph-marker]\",\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d: string;\n\t@Input() color: string;\n\t@Input() id: string;\n\t@Input() orient: string | number = \"auto\";\n\t@Input() height: string | number;\n\t@Input() width: string | number;\n\t@Input() refX: string | number;\n\t@Input() refY: string | number;\n\t@Input() position: \"start\" | \"end\" = \"end\";\n\n\tnamespace = `${prefix}--cc--marker`;\n\n\tsetAttributes = ({d, id, height, width}) => {\n\t\tconst xPos = (this.position === \"end\") ? (width / 2) + 0.5 : 0.5;\n\t\tconst yPos = height / 2;\n\n\t\tthis.d = this.d || d;\n\t\tthis.id = this.id || id;\n\t\tthis.height = this.height || height;\n\t\tthis.width = this.width || width;\n\t\tthis.refX = this.refX || xPos;\n\t\tthis.refY = this.refY || yPos;\n\t}\n}\n\n@Component({ selector: \"[ibm-graph-marker-arrow-left]\", template})\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowLeft}); } }\n@Component({ selector: \"[ibm-graph-marker-arrow-right]\", template})\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowRight}); } }\n@Component({ selector: \"[ibm-graph-marker-circle]\", template})\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...circle}); } }\n@Component({ selector: \"[ibm-graph-marker-diamond]\", template})\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...diamond}); } }\n@Component({ selector: \"[ibm-graph-marker-square]\", template})\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...square}); } }\n@Component({ selector: \"[ibm-graph-marker-tee]\", template})\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...tee}); } }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerComponent",
            "id": "component-MarkerComponent-c05a3c1e3df30458fd1d110b1e3fd35062ad2df92924cda81683b7d8f6dbf8cd5e31de946dc42d7da5f65400e32807d0b80e981730176fbcf46babe2dfa1a56c",
            "file": "src/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "orient",
                    "defaultValue": "\"auto\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "\"end\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "refX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "refY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\nimport {\n\tarrowLeft,\n\tarrowRight,\n\tcircle,\n\tdiamond,\n\tsquare,\n\ttee,\n} from \"@carbon/charts/components/diagrams/markerDefinitions\";\n\nconst { prefix } = settings;\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n\tselector: \"[ibm-graph-marker]\",\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d: string;\n\t@Input() color: string;\n\t@Input() id: string;\n\t@Input() orient: string | number = \"auto\";\n\t@Input() height: string | number;\n\t@Input() width: string | number;\n\t@Input() refX: string | number;\n\t@Input() refY: string | number;\n\t@Input() position: \"start\" | \"end\" = \"end\";\n\n\tnamespace = `${prefix}--cc--marker`;\n\n\tsetAttributes = ({d, id, height, width}) => {\n\t\tconst xPos = (this.position === \"end\") ? (width / 2) + 0.5 : 0.5;\n\t\tconst yPos = height / 2;\n\n\t\tthis.d = this.d || d;\n\t\tthis.id = this.id || id;\n\t\tthis.height = this.height || height;\n\t\tthis.width = this.width || width;\n\t\tthis.refX = this.refX || xPos;\n\t\tthis.refY = this.refY || yPos;\n\t}\n}\n\n@Component({ selector: \"[ibm-graph-marker-arrow-left]\", template})\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowLeft}); } }\n@Component({ selector: \"[ibm-graph-marker-arrow-right]\", template})\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowRight}); } }\n@Component({ selector: \"[ibm-graph-marker-circle]\", template})\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...circle}); } }\n@Component({ selector: \"[ibm-graph-marker-diamond]\", template})\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...diamond}); } }\n@Component({ selector: \"[ibm-graph-marker-square]\", template})\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...square}); } }\n@Component({ selector: \"[ibm-graph-marker-tee]\", template})\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...tee}); } }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MarkerDiamondComponent",
            "id": "component-MarkerDiamondComponent-c05a3c1e3df30458fd1d110b1e3fd35062ad2df92924cda81683b7d8f6dbf8cd5e31de946dc42d7da5f65400e32807d0b80e981730176fbcf46babe2dfa1a56c",
            "file": "src/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-diamond]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "\"auto\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "\"end\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\nimport {\n\tarrowLeft,\n\tarrowRight,\n\tcircle,\n\tdiamond,\n\tsquare,\n\ttee,\n} from \"@carbon/charts/components/diagrams/markerDefinitions\";\n\nconst { prefix } = settings;\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n\tselector: \"[ibm-graph-marker]\",\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d: string;\n\t@Input() color: string;\n\t@Input() id: string;\n\t@Input() orient: string | number = \"auto\";\n\t@Input() height: string | number;\n\t@Input() width: string | number;\n\t@Input() refX: string | number;\n\t@Input() refY: string | number;\n\t@Input() position: \"start\" | \"end\" = \"end\";\n\n\tnamespace = `${prefix}--cc--marker`;\n\n\tsetAttributes = ({d, id, height, width}) => {\n\t\tconst xPos = (this.position === \"end\") ? (width / 2) + 0.5 : 0.5;\n\t\tconst yPos = height / 2;\n\n\t\tthis.d = this.d || d;\n\t\tthis.id = this.id || id;\n\t\tthis.height = this.height || height;\n\t\tthis.width = this.width || width;\n\t\tthis.refX = this.refX || xPos;\n\t\tthis.refY = this.refY || yPos;\n\t}\n}\n\n@Component({ selector: \"[ibm-graph-marker-arrow-left]\", template})\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowLeft}); } }\n@Component({ selector: \"[ibm-graph-marker-arrow-right]\", template})\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowRight}); } }\n@Component({ selector: \"[ibm-graph-marker-circle]\", template})\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...circle}); } }\n@Component({ selector: \"[ibm-graph-marker-diamond]\", template})\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...diamond}); } }\n@Component({ selector: \"[ibm-graph-marker-square]\", template})\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...square}); } }\n@Component({ selector: \"[ibm-graph-marker-tee]\", template})\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...tee}); } }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerShapeNodeComponent",
            "id": "component-MarkerShapeNodeComponent-c05a3c1e3df30458fd1d110b1e3fd35062ad2df92924cda81683b7d8f6dbf8cd5e31de946dc42d7da5f65400e32807d0b80e981730176fbcf46babe2dfa1a56c",
            "file": "src/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-circle]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "\"auto\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "\"end\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\nimport {\n\tarrowLeft,\n\tarrowRight,\n\tcircle,\n\tdiamond,\n\tsquare,\n\ttee,\n} from \"@carbon/charts/components/diagrams/markerDefinitions\";\n\nconst { prefix } = settings;\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n\tselector: \"[ibm-graph-marker]\",\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d: string;\n\t@Input() color: string;\n\t@Input() id: string;\n\t@Input() orient: string | number = \"auto\";\n\t@Input() height: string | number;\n\t@Input() width: string | number;\n\t@Input() refX: string | number;\n\t@Input() refY: string | number;\n\t@Input() position: \"start\" | \"end\" = \"end\";\n\n\tnamespace = `${prefix}--cc--marker`;\n\n\tsetAttributes = ({d, id, height, width}) => {\n\t\tconst xPos = (this.position === \"end\") ? (width / 2) + 0.5 : 0.5;\n\t\tconst yPos = height / 2;\n\n\t\tthis.d = this.d || d;\n\t\tthis.id = this.id || id;\n\t\tthis.height = this.height || height;\n\t\tthis.width = this.width || width;\n\t\tthis.refX = this.refX || xPos;\n\t\tthis.refY = this.refY || yPos;\n\t}\n}\n\n@Component({ selector: \"[ibm-graph-marker-arrow-left]\", template})\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowLeft}); } }\n@Component({ selector: \"[ibm-graph-marker-arrow-right]\", template})\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowRight}); } }\n@Component({ selector: \"[ibm-graph-marker-circle]\", template})\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...circle}); } }\n@Component({ selector: \"[ibm-graph-marker-diamond]\", template})\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...diamond}); } }\n@Component({ selector: \"[ibm-graph-marker-square]\", template})\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...square}); } }\n@Component({ selector: \"[ibm-graph-marker-tee]\", template})\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...tee}); } }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerSquareComponent",
            "id": "component-MarkerSquareComponent-c05a3c1e3df30458fd1d110b1e3fd35062ad2df92924cda81683b7d8f6dbf8cd5e31de946dc42d7da5f65400e32807d0b80e981730176fbcf46babe2dfa1a56c",
            "file": "src/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-square]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "\"auto\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "\"end\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\nimport {\n\tarrowLeft,\n\tarrowRight,\n\tcircle,\n\tdiamond,\n\tsquare,\n\ttee,\n} from \"@carbon/charts/components/diagrams/markerDefinitions\";\n\nconst { prefix } = settings;\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n\tselector: \"[ibm-graph-marker]\",\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d: string;\n\t@Input() color: string;\n\t@Input() id: string;\n\t@Input() orient: string | number = \"auto\";\n\t@Input() height: string | number;\n\t@Input() width: string | number;\n\t@Input() refX: string | number;\n\t@Input() refY: string | number;\n\t@Input() position: \"start\" | \"end\" = \"end\";\n\n\tnamespace = `${prefix}--cc--marker`;\n\n\tsetAttributes = ({d, id, height, width}) => {\n\t\tconst xPos = (this.position === \"end\") ? (width / 2) + 0.5 : 0.5;\n\t\tconst yPos = height / 2;\n\n\t\tthis.d = this.d || d;\n\t\tthis.id = this.id || id;\n\t\tthis.height = this.height || height;\n\t\tthis.width = this.width || width;\n\t\tthis.refX = this.refX || xPos;\n\t\tthis.refY = this.refY || yPos;\n\t}\n}\n\n@Component({ selector: \"[ibm-graph-marker-arrow-left]\", template})\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowLeft}); } }\n@Component({ selector: \"[ibm-graph-marker-arrow-right]\", template})\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowRight}); } }\n@Component({ selector: \"[ibm-graph-marker-circle]\", template})\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...circle}); } }\n@Component({ selector: \"[ibm-graph-marker-diamond]\", template})\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...diamond}); } }\n@Component({ selector: \"[ibm-graph-marker-square]\", template})\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...square}); } }\n@Component({ selector: \"[ibm-graph-marker-tee]\", template})\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...tee}); } }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerTeeComponent",
            "id": "component-MarkerTeeComponent-c05a3c1e3df30458fd1d110b1e3fd35062ad2df92924cda81683b7d8f6dbf8cd5e31de946dc42d7da5f65400e32807d0b80e981730176fbcf46babe2dfa1a56c",
            "file": "src/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-tee]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "\"auto\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "\"end\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\nimport settings from \"carbon-components/src/globals/js/settings\";\nimport {\n\tarrowLeft,\n\tarrowRight,\n\tcircle,\n\tdiamond,\n\tsquare,\n\ttee,\n} from \"@carbon/charts/components/diagrams/markerDefinitions\";\n\nconst { prefix } = settings;\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n\tselector: \"[ibm-graph-marker]\",\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d: string;\n\t@Input() color: string;\n\t@Input() id: string;\n\t@Input() orient: string | number = \"auto\";\n\t@Input() height: string | number;\n\t@Input() width: string | number;\n\t@Input() refX: string | number;\n\t@Input() refY: string | number;\n\t@Input() position: \"start\" | \"end\" = \"end\";\n\n\tnamespace = `${prefix}--cc--marker`;\n\n\tsetAttributes = ({d, id, height, width}) => {\n\t\tconst xPos = (this.position === \"end\") ? (width / 2) + 0.5 : 0.5;\n\t\tconst yPos = height / 2;\n\n\t\tthis.d = this.d || d;\n\t\tthis.id = this.id || id;\n\t\tthis.height = this.height || height;\n\t\tthis.width = this.width || width;\n\t\tthis.refX = this.refX || xPos;\n\t\tthis.refY = this.refY || yPos;\n\t}\n}\n\n@Component({ selector: \"[ibm-graph-marker-arrow-left]\", template})\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowLeft}); } }\n@Component({ selector: \"[ibm-graph-marker-arrow-right]\", template})\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...arrowRight}); } }\n@Component({ selector: \"[ibm-graph-marker-circle]\", template})\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...circle}); } }\n@Component({ selector: \"[ibm-graph-marker-diamond]\", template})\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...diamond}); } }\n@Component({ selector: \"[ibm-graph-marker-square]\", template})\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...square}); } }\n@Component({ selector: \"[ibm-graph-marker-tee]\", template})\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit { ngOnInit() {this.setAttributes({...tee}); } }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MeterChartComponent",
            "id": "component-MeterChartComponent-4052b9e592f9e2681928ddc84c543560d3d7b9b7cba25987722257b0bf9df82bcf50140698711651be4583e764c23085459acf82603972eecbd1c88b7b05ffc9",
            "file": "src/meter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-meter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>MeterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `MeterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\nimport { MeterChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `MeterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-meter-chart\",\n\ttemplate: ``\n})\nexport class MeterChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new MeterChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "PieChartComponent",
            "id": "component-PieChartComponent-fe243ccdda6c7083cbc92f7b32bb1aec70da287b2662842469b202ef80f21e5e6eb6fa9345679ad9dd22ba56b705e7e2b151054630913fcaadce7a5d29c63500",
            "file": "src/pie-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-pie-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>PieChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `PieChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { PieChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `PieChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-pie-chart\",\n\ttemplate: ``\n})\nexport class PieChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new PieChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "RadarChartComponent",
            "id": "component-RadarChartComponent-9c74ac9c1688e32cccc76f7468799b49dbc9539820845d6d85c01800aa3e2d1f1f7f288a74dddec607d543502e146d1eec51391038d92f9b1e7029c28dbe371e",
            "file": "src/radar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-radar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>RadarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `RadarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { RadarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `RadarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-radar-chart\",\n\ttemplate: ``\n})\nexport class RadarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new RadarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ScatterChartComponent",
            "id": "component-ScatterChartComponent-8fdd55a36ff19574d9280a106eaf9d619d378dbb62cdc4f664b6da750b996968aa6c3f95860894c4fbd9c6d84a0f17655ba2850090ec32f0b7dfe7f830afdab3",
            "file": "src/scatter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-scatter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ScatterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ScatterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { ScatterChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `ScatterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-scatter-chart\",\n\ttemplate: ``\n})\nexport class ScatterChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new ScatterChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ShapeNodeComponent",
            "id": "component-ShapeNodeComponent-e14c4ee9337958e7bbdbecfbdcbb0eb4a5adee1d3559b18153650981939aa0c82ec92d0fbc2741299209c4180463e96c0e09da0e0aa75c42a365e82646ba29e8",
            "file": "src/diagrams/shape-node/shape-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-shape-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n\t<xhtml:div\n\t\t*ngSwitchCase=\"'div'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:div>\n\n\t<xhtml:button\n\t\t*ngSwitchCase=\"'button'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(click)=\"click.emit($event)\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:button>\n\n\t<xhtml:a\n\t\t*ngSwitchCase=\"'a'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[attr.href]=\"href\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:a>\n</ng-container>\n\n<ng-template #nodeTemplate>\n\t<div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n\t\t<ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n\t</div>\n\t<div\n\t\tattr.class=\"{{ namespace + '__body' }}\"\n\t\t[ngStyle]=\"{ position: bodyPosition }\"\n\t>\n\t\t<div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n\t\t<div attr.class=\"{{ namespace + '__subtitle' }}\">\n\t\t\t{{ subtitle }}\n\t\t</div>\n\t</div>\n</ng-template>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bodyPosition",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 115,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'fixed'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 114,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "renderIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "'circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 111,
                    "type": "\"circle\" | \"square\" | \"rounded-square\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "48",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 117,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 118,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 121,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 122,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 120,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 119,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${prefix}--cc--shape-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 124
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tTemplateRef,\n\tOnInit,\n} from '@angular/core';\nimport settings from 'carbon-components/src/globals/js/settings';\n\nconst { prefix } = settings;\n\n@Component({\n\tselector: 'ibm-diagram-shape-node',\n\ttemplate: `\n\t\t<ng-container [ngSwitch]=\"component\">\n\t\t\t<xhtml:div\n\t\t\t\t*ngSwitchCase=\"'div'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:div>\n\n\t\t\t<xhtml:button\n\t\t\t\t*ngSwitchCase=\"'button'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(click)=\"click.emit($event)\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:button>\n\n\t\t\t<xhtml:a\n\t\t\t\t*ngSwitchCase=\"'a'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[attr.href]=\"href\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:a>\n\t\t</ng-container>\n\n\t\t<ng-template #nodeTemplate>\n\t\t\t<div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tattr.class=\"{{ namespace + '__body' }}\"\n\t\t\t\t[ngStyle]=\"{ position: bodyPosition }\"\n\t\t\t>\n\t\t\t\t<div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n\t\t\t\t<div attr.class=\"{{ namespace + '__subtitle' }}\">\n\t\t\t\t\t{{ subtitle }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`,\n})\nexport class ShapeNodeComponent implements OnInit {\n\t@Input() as = 'div';\n\t@Input() href: string = null;\n\t@Input() renderIcon: TemplateRef<any>;\n\t@Input() size = 48;\n\t@Input() stacked: boolean;\n\t@Input() shape: 'circle' | 'square' | 'rounded-square' = 'circle';\n\t@Input() subtitle: string;\n\t@Input() title: string;\n\t@Input() position: string = 'fixed';\n\t@Input() bodyPosition: string = 'absolute';\n\n\t@Output() click: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseOver: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseOut: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() mouseMove: EventEmitter<any> = new EventEmitter<any>();\n\n\tnamespace = `${prefix}--cc--shape-node`;\n\tcomponent = 'div';\n\n\tngOnInit() {\n\t\tif (this.href) {\n\t\t\tthis.component = 'a';\n\t\t} else {\n\t\t\tthis.component = this.as;\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SimpleBarChartComponent",
            "id": "component-SimpleBarChartComponent-9c705fb859c361a88ee58176099726b4993577e2e822cd556c9e7a5a934d1261102959f111ec8685291b91d571077ded47f7dda1215b23fd64d834f1e4a0d491",
            "file": "src/bar-chart-simple.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-simple-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>SimpleBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `SimpleBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { SimpleBarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `SimpleBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-simple-bar-chart\",\n\ttemplate: ``\n})\nexport class SimpleBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new SimpleBarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedAreaChartComponent",
            "id": "component-StackedAreaChartComponent-602b989dce6dd3256f6628a0606c1e5fda00717dcfc650a05d08da1a77bdd4cc340aea23c3fe8fe366d80890be24a558ff963e036c254aea4078716d5476a436",
            "file": "src/area-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedAreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedAreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { StackedAreaChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `StackedAreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-stacked-area-chart\",\n\ttemplate: ``\n})\nexport class StackedAreaChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new StackedAreaChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedBarChartComponent",
            "id": "component-StackedBarChartComponent-8bc96bfc07b26a1f9c7554723c98d3526951f2d52e16162c93adb903cb8558c5662e38b260cb29c28c7fe61f286bed152a7c3330384fe15947b9e056142c0a4c",
            "file": "src/bar-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { StackedBarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `StackedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-stacked-bar-chart\",\n\ttemplate: ``\n})\nexport class StackedBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new StackedBarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreeChartComponent",
            "id": "component-TreeChartComponent-ab2390c88e78ca6381541b79375941f9ce6fd0feb980fb73369f714ec8c0386ee8dd8300d94b7a650b63757a56b4ff5b207212f13e1e33048231be93e86b4190",
            "file": "src/tree-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-tree-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { TreeChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `TreeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-tree-chart\",\n\ttemplate: ``\n})\nexport class TreeChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new TreeChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreemapChartComponent",
            "id": "component-TreemapChartComponent-12db45835230481b7d7bbefb09f6fe4d1e05aae9ae62a519d5d1f8b42125357bafe4acdb3bf00654285beb70fc20da37cd4249e80aa5689a0fd1e091ba4537cc",
            "file": "src/treemap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-treemap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreemapChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreemapChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { TreemapChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `TreemapChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-treemap-chart\",\n\ttemplate: ``\n})\nexport class TreemapChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new TreemapChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "WordCloudChartComponent",
            "id": "component-WordCloudChartComponent-471aef4145e62166445deec5dbc8804ccffae4c3ac1c919f8b70ed78431d5dc33f067c6c674f6caecdfd42581ddee062adb82417f1372ab6a3d8799ab0b7f58e",
            "file": "src/wordcloud-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-wordcloud-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 66,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 61,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>WordCloudChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `WordCloudChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { WordCloudChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `WordCloudChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-wordcloud-chart\",\n\ttemplate: ``\n})\nexport class WordCloudChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new WordCloudChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "CardNodeModule",
            "id": "module-CardNodeModule-2d739bc9bd0ba525b4c5f104a9e46ade38d51ac28d535df56404473b1b8cdd95bdb2e239b522672656deca53f6258e15edd9b80c467e316a6130206136210c46",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/diagrams/card-node/card-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { CardNodeComponent } from \"./card-node.component\";\nimport { CardNodeColumnComponent } from \"./card-node-column.component\";\nimport { CardNodeLabelComponent } from \"./card-node-label.component\";\nimport { CardNodeSubtitleComponent } from \"./card-node-subtitle.component\";\nimport { CardNodeTitleComponent } from \"./card-node-title.component\";\nexport { CardNodeComponent,\n\tCardNodeColumnComponent,\n\tCardNodeLabelComponent,\n\tCardNodeSubtitleComponent,\n\tCardNodeTitleComponent };\n@NgModule({\n\tdeclarations: [CardNodeComponent, CardNodeColumnComponent, CardNodeLabelComponent, CardNodeSubtitleComponent, CardNodeTitleComponent],\n\texports: [CardNodeComponent, CardNodeColumnComponent, CardNodeLabelComponent, CardNodeSubtitleComponent, CardNodeTitleComponent],\n\timports: [CommonModule]\n})\nexport class CardNodeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardNodeColumnComponent"
                        },
                        {
                            "name": "CardNodeComponent"
                        },
                        {
                            "name": "CardNodeLabelComponent"
                        },
                        {
                            "name": "CardNodeSubtitleComponent"
                        },
                        {
                            "name": "CardNodeTitleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardNodeColumnComponent"
                        },
                        {
                            "name": "CardNodeComponent"
                        },
                        {
                            "name": "CardNodeLabelComponent"
                        },
                        {
                            "name": "CardNodeSubtitleComponent"
                        },
                        {
                            "name": "CardNodeTitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartsModule",
            "id": "module-ChartsModule-d59e1a66ef04f75f2a97a77dc62bf0b90240d2e1ea74101511b6500452abb6026fbb53ce885ad62e56af7e00c8b508229d2cc418d2c9e489f700e2d3e26f6e12",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/charts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BaseChart } from './base-chart.component';\nimport { AlluvialChartComponent } from './alluvial-chart.component';\nimport { AreaChartComponent } from './area-chart.component';\nimport { StackedAreaChartComponent } from './area-chart-stacked.component';\nimport { SimpleBarChartComponent } from './bar-chart-simple.component';\nimport { GroupedBarChartComponent } from './bar-chart-grouped.component';\nimport { StackedBarChartComponent } from './bar-chart-stacked.component';\nimport { BoxplotChartComponent } from './boxplot-chart.component';\nimport { BubbleChartComponent } from './bubble-chart.component';\nimport { BulletChartComponent } from './bullet-chart.component';\nimport { DonutChartComponent } from './donut-chart.component';\nimport { GaugeChartComponent } from './gauge-chart.component';\nimport { HistogramChartComponent } from './histogram-chart.component';\nimport { LineChartComponent } from './line-chart.component';\nimport { LollipopChartComponent } from './lollipop-chart.component';\nimport { PieChartComponent } from './pie-chart.component';\nimport { ScatterChartComponent } from './scatter-chart.component';\nimport { MeterChartComponent } from './meter-chart.component';\nimport { RadarChartComponent } from './radar-chart.component';\nimport { ComboChartComponent } from './combo-chart.component';\nimport { TreeChartComponent } from './tree-chart.component';\nimport { TreemapChartComponent } from './treemap-chart.component';\nimport { CirclePackChartComponent } from './circle-pack-chart.component';\nimport { WordCloudChartComponent } from './wordcloud-chart.component';\nimport { HeatmapChartComponent } from './heatmap-chart.component';\n\n@NgModule({\n\timports: [CommonModule],\n\tdeclarations: [\n\t\tBaseChart,\n\t\tAlluvialChartComponent,\n\t\tAreaChartComponent,\n\t\tStackedAreaChartComponent,\n\t\tSimpleBarChartComponent,\n\t\tGroupedBarChartComponent,\n\t\tStackedBarChartComponent,\n\t\tBoxplotChartComponent,\n\t\tBubbleChartComponent,\n\t\tBulletChartComponent,\n\t\tDonutChartComponent,\n\t\tGaugeChartComponent,\n\t\tHeatmapChartComponent,\n\t\tHistogramChartComponent,\n\t\tLineChartComponent,\n\t\tLollipopChartComponent,\n\t\tPieChartComponent,\n\t\tScatterChartComponent,\n\t\tMeterChartComponent,\n\t\tRadarChartComponent,\n\t\tComboChartComponent,\n\t\tTreeChartComponent,\n\t\tTreemapChartComponent,\n\t\tCirclePackChartComponent,\n\t\tWordCloudChartComponent,\n\t],\n\texports: [\n\t\tBaseChart,\n\t\tAlluvialChartComponent,\n\t\tAreaChartComponent,\n\t\tStackedAreaChartComponent,\n\t\tSimpleBarChartComponent,\n\t\tGroupedBarChartComponent,\n\t\tStackedBarChartComponent,\n\t\tBoxplotChartComponent,\n\t\tBubbleChartComponent,\n\t\tBulletChartComponent,\n\t\tDonutChartComponent,\n\t\tGaugeChartComponent,\n\t\tHeatmapChartComponent,\n\t\tHistogramChartComponent,\n\t\tLineChartComponent,\n\t\tLollipopChartComponent,\n\t\tPieChartComponent,\n\t\tScatterChartComponent,\n\t\tMeterChartComponent,\n\t\tRadarChartComponent,\n\t\tComboChartComponent,\n\t\tTreeChartComponent,\n\t\tTreemapChartComponent,\n\t\tCirclePackChartComponent,\n\t\tWordCloudChartComponent\n\t],\n})\nexport class ChartsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlluvialChartComponent"
                        },
                        {
                            "name": "AreaChartComponent"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChartComponent"
                        },
                        {
                            "name": "BubbleChartComponent"
                        },
                        {
                            "name": "BulletChartComponent"
                        },
                        {
                            "name": "CirclePackChartComponent"
                        },
                        {
                            "name": "ComboChartComponent"
                        },
                        {
                            "name": "DonutChartComponent"
                        },
                        {
                            "name": "GaugeChartComponent"
                        },
                        {
                            "name": "GroupedBarChartComponent"
                        },
                        {
                            "name": "HeatmapChartComponent"
                        },
                        {
                            "name": "HistogramChartComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        },
                        {
                            "name": "LollipopChartComponent"
                        },
                        {
                            "name": "MeterChartComponent"
                        },
                        {
                            "name": "PieChartComponent"
                        },
                        {
                            "name": "RadarChartComponent"
                        },
                        {
                            "name": "ScatterChartComponent"
                        },
                        {
                            "name": "SimpleBarChartComponent"
                        },
                        {
                            "name": "StackedAreaChartComponent"
                        },
                        {
                            "name": "StackedBarChartComponent"
                        },
                        {
                            "name": "TreeChartComponent"
                        },
                        {
                            "name": "TreemapChartComponent"
                        },
                        {
                            "name": "WordCloudChartComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AlluvialChartComponent"
                        },
                        {
                            "name": "AreaChartComponent"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChartComponent"
                        },
                        {
                            "name": "BubbleChartComponent"
                        },
                        {
                            "name": "BulletChartComponent"
                        },
                        {
                            "name": "CirclePackChartComponent"
                        },
                        {
                            "name": "ComboChartComponent"
                        },
                        {
                            "name": "DonutChartComponent"
                        },
                        {
                            "name": "GaugeChartComponent"
                        },
                        {
                            "name": "GroupedBarChartComponent"
                        },
                        {
                            "name": "HeatmapChartComponent"
                        },
                        {
                            "name": "HistogramChartComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        },
                        {
                            "name": "LollipopChartComponent"
                        },
                        {
                            "name": "MeterChartComponent"
                        },
                        {
                            "name": "PieChartComponent"
                        },
                        {
                            "name": "RadarChartComponent"
                        },
                        {
                            "name": "ScatterChartComponent"
                        },
                        {
                            "name": "SimpleBarChartComponent"
                        },
                        {
                            "name": "StackedAreaChartComponent"
                        },
                        {
                            "name": "StackedBarChartComponent"
                        },
                        {
                            "name": "TreeChartComponent"
                        },
                        {
                            "name": "TreemapChartComponent"
                        },
                        {
                            "name": "WordCloudChartComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EdgeModule",
            "id": "module-EdgeModule-f412de65b18bfee5d3ff3a6c4191b4b777895a2aa2435423cef4e88b7ed5e2a19c51ba22d0bf7dbf48de37fee96ab9147b8857939560734df511e3961e4bb31c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/diagrams/edge/edge.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { EdgeComponent } from \"./edge.component\";\nexport { EdgeComponent } from \"./edge.component\";\n\n@NgModule({\n\tdeclarations: [EdgeComponent],\n\texports: [EdgeComponent],\n\timports: [CommonModule]\n})\nexport class EdgeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EdgeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "EdgeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MarkerModule",
            "id": "module-MarkerModule-c7f46f79cad3b3852b557e9b26c6645b40493723c1e945f3e0e62171eb8cab610985ef37e7e19afa88abda669cd0d41aaaf308a782d6984aa37fcfbe17b65161",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/diagrams/marker/marker.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n\tMarkerComponent,\n\tMarkerArrowLeftComponent,\n\tMarkerArrowRightComponent,\n\tMarkerShapeNodeComponent,\n\tMarkerDiamondComponent,\n\tMarkerSquareComponent,\n\tMarkerTeeComponent\n} from \"./marker.component\";\n\nexport {\n\tMarkerComponent,\n\tMarkerArrowLeftComponent,\n\tMarkerArrowRightComponent,\n\tMarkerShapeNodeComponent,\n\tMarkerDiamondComponent,\n\tMarkerSquareComponent,\n\tMarkerTeeComponent\n};\n@NgModule({\n\tdeclarations: [\n\t\tMarkerComponent,\n\t\tMarkerArrowLeftComponent,\n\t\tMarkerArrowRightComponent,\n\t\tMarkerShapeNodeComponent,\n\t\tMarkerDiamondComponent,\n\t\tMarkerSquareComponent,\n\t\tMarkerTeeComponent\n\t],\n\texports: [\n\t\tMarkerComponent,\n\t\tMarkerArrowLeftComponent,\n\t\tMarkerArrowRightComponent,\n\t\tMarkerShapeNodeComponent,\n\t\tMarkerDiamondComponent,\n\t\tMarkerSquareComponent,\n\t\tMarkerTeeComponent\n\t],\n\timports: [CommonModule]\n})\nexport class MarkerModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MarkerArrowLeftComponent"
                        },
                        {
                            "name": "MarkerArrowRightComponent"
                        },
                        {
                            "name": "MarkerComponent"
                        },
                        {
                            "name": "MarkerDiamondComponent"
                        },
                        {
                            "name": "MarkerShapeNodeComponent"
                        },
                        {
                            "name": "MarkerSquareComponent"
                        },
                        {
                            "name": "MarkerTeeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MarkerArrowLeftComponent"
                        },
                        {
                            "name": "MarkerArrowRightComponent"
                        },
                        {
                            "name": "MarkerComponent"
                        },
                        {
                            "name": "MarkerDiamondComponent"
                        },
                        {
                            "name": "MarkerShapeNodeComponent"
                        },
                        {
                            "name": "MarkerSquareComponent"
                        },
                        {
                            "name": "MarkerTeeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShapeNodeModule",
            "id": "module-ShapeNodeModule-87a9c8161c4bb319e9ddd8357415b0716aba04073f7e5016b54dde6651051abfc6d717fb423a725afef9454756fb3deef27401d9fdab6bec03202facdf59eead",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/diagrams/shape-node/shape-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ShapeNodeComponent } from \"./shape-node.component\";\nexport { ShapeNodeComponent } from \"./shape-node.component\";\n\n@NgModule({\n\tdeclarations: [ShapeNodeComponent],\n\texports: [ShapeNodeComponent],\n\timports: [CommonModule]\n})\nexport class ShapeNodeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShapeNodeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShapeNodeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "circleSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "edgeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{ source: 'a', target: 'b', variant: 'dash-md' },\n\t{\n\t\tsource: 'c',\n\t\ttarget: 'b',\n\t\tpath: (source, target) => buildElbowPathString(source, target),\n\t},\n\t{\n\t\tsource: 'd',\n\t\ttarget: 'c',\n\t\tpath: (source, target) => buildElbowPathString(source, target),\n\t\tvariant: 'tunnel',\n\t},\n]"
            },
            {
                "name": "edgeMapped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "edgeData.map((link) => {\n\tconst sourceNode = nodeData.find((node) => node.id === link.source);\n\tconst targetNode = nodeData.find((node) => node.id === link.target);\n\n\treturn {\n\t\t...link,\n\t\tsource: {\n\t\t\tx: sourceNode.x + sourceNode.nodeWidth / 2,\n\t\t\ty: sourceNode.y + sourceNode.nodeHeight / 2,\n\t\t},\n\t\ttarget: {\n\t\t\tx: targetNode.x + targetNode.nodeWidth / 2,\n\t\t\ty: targetNode.y + targetNode.nodeHeight / 2,\n\t\t},\n\t};\n})"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(demo) => `\n\t<div class=\"container theme--white\">\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"bx--tag bx--tag--green component-name\">${demo.chartType.angular}</span>\n\t\t</h3>\n\t\t<p class=\"props\"><b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a></p>\n\n\t\t<div class=\"marginTop-30\">\n\t\t\t<${demo.chartType.angular}\n\t\t\t\tclass=\"n-chart\"\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[options]=\"options\"\n\t\t\t\t#${demo.chartType.vanilla}>\n\t\t\t</${demo.chartType.angular}>\n\t\t</div>\n\n\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\n\t\t<div class=\"marginTop-30\" *ngFor=\"let codeFile of codeFiles;\">\n\t\t\t<h5>{{codeFile}}</h5>\n\n\t\t\t<div class=\"bx--snippet bx--snippet--multi bx--snippet--expand marginTop-15\" data-code-snippet>\n\t\t\t\t<div class=\"bx--snippet-container\" aria-label=\"Code Snippet Text\">\n\t\t\t\t\t<pre><code>{{code[codeFile]}}</code></pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/card-node.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(demo) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${demo}\n\t</div>\n`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(demo) => `\n\t<div class=\"container theme--white\">\n\t\t${demo}\n\t</div>\n`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/edge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "demo => `\n\t<div class=\"container theme--white\">\n\t\t${demo}\n\t</div>\n`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "demo => `\n\t<div class=\"container theme--white\">\n\t\t${demo}\n\t</div>\n`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/shape-node.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(demo) => `\n\t<div class=\"container theme--white\">\n\t\t${demo}\n\t</div>\n`"
            },
            {
                "name": "introStories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Intro', module).addDecorator(withKnobs)"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/edge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/edge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 300, y: 0 }"
            },
            {
                "name": "linkTargetCurve",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/edge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 200 }"
            },
            {
                "name": "nodeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{ id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n\t{ id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n\t{\n\t\tid: 'c',\n\t\tx: 600,\n\t\ty: 200,\n\t\ticon: 'user',\n\t\tcircle: true,\n\t\tnodeWidth: circleSize,\n\t\tnodeHeight: circleSize,\n\t},\n\t{ id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight },\n]"
            },
            {
                "name": "nodeHeight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "nodeWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "200"
            },
            {
                "name": "ProgrammaticStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "SimpleStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "stories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Diagrams', module)"
            },
            {
                "name": "template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/diagrams/marker/marker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/diagrams/card-node/card-node-column.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "settings"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/diagrams/card-node/card-node-subtitle.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "settings"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/diagrams/card-node/card-node-label.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "settings"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/diagrams/card-node/card-node-title.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "settings"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/diagrams/card-node/card-node.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "settings"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/diagrams/edge/edge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "settings"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/diagrams/marker/marker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "settings"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/diagrams/shape-node/shape-node.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "settings"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "stories/diagrams/0_diagram.stories.ts": [
                {
                    "name": "circleSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "edgeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{ source: 'a', target: 'b', variant: 'dash-md' },\n\t{\n\t\tsource: 'c',\n\t\ttarget: 'b',\n\t\tpath: (source, target) => buildElbowPathString(source, target),\n\t},\n\t{\n\t\tsource: 'd',\n\t\ttarget: 'c',\n\t\tpath: (source, target) => buildElbowPathString(source, target),\n\t\tvariant: 'tunnel',\n\t},\n]"
                },
                {
                    "name": "edgeMapped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "edgeData.map((link) => {\n\tconst sourceNode = nodeData.find((node) => node.id === link.source);\n\tconst targetNode = nodeData.find((node) => node.id === link.target);\n\n\treturn {\n\t\t...link,\n\t\tsource: {\n\t\t\tx: sourceNode.x + sourceNode.nodeWidth / 2,\n\t\t\ty: sourceNode.y + sourceNode.nodeHeight / 2,\n\t\t},\n\t\ttarget: {\n\t\t\tx: targetNode.x + targetNode.nodeWidth / 2,\n\t\t\ty: targetNode.y + targetNode.nodeHeight / 2,\n\t\t},\n\t};\n})"
                },
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(demo) => `\n\t<div class=\"container theme--white\">\n\t\t${demo}\n\t</div>\n`"
                },
                {
                    "name": "nodeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{ id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n\t{ id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n\t{\n\t\tid: 'c',\n\t\tx: 600,\n\t\ty: 200,\n\t\ticon: 'user',\n\t\tcircle: true,\n\t\tnodeWidth: circleSize,\n\t\tnodeHeight: circleSize,\n\t},\n\t{ id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight },\n]"
                },
                {
                    "name": "nodeHeight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "nodeWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "200"
                },
                {
                    "name": "ProgrammaticStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "SimpleStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "stories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Diagrams', module)"
                }
            ],
            "stories/all.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(demo) => `\n\t<div class=\"container theme--white\">\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"bx--tag bx--tag--green component-name\">${demo.chartType.angular}</span>\n\t\t</h3>\n\t\t<p class=\"props\"><b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a></p>\n\n\t\t<div class=\"marginTop-30\">\n\t\t\t<${demo.chartType.angular}\n\t\t\t\tclass=\"n-chart\"\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[options]=\"options\"\n\t\t\t\t#${demo.chartType.vanilla}>\n\t\t\t</${demo.chartType.angular}>\n\t\t</div>\n\n\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\n\t\t<div class=\"marginTop-30\" *ngFor=\"let codeFile of codeFiles;\">\n\t\t\t<h5>{{codeFile}}</h5>\n\n\t\t\t<div class=\"bx--snippet bx--snippet--multi bx--snippet--expand marginTop-15\" data-code-snippet>\n\t\t\t\t<div class=\"bx--snippet-container\" aria-label=\"Code Snippet Text\">\n\t\t\t\t\t<pre><code>{{code[codeFile]}}</code></pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n`"
                },
                {
                    "name": "introStories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Intro', module).addDecorator(withKnobs)"
                }
            ],
            "stories/diagrams/card-node.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/card-node.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(demo) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${demo}\n\t</div>\n`"
                }
            ],
            "stories/diagrams/edge.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/edge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "demo => `\n\t<div class=\"container theme--white\">\n\t\t${demo}\n\t</div>\n`"
                },
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/edge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/edge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 0 }"
                },
                {
                    "name": "linkTargetCurve",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/edge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 200 }"
                }
            ],
            "stories/diagrams/marker.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "demo => `\n\t<div class=\"container theme--white\">\n\t\t${demo}\n\t</div>\n`"
                },
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 300, y: 0 }"
                }
            ],
            "stories/diagrams/shape-node.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/diagrams/shape-node.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(demo) => `\n\t<div class=\"container theme--white\">\n\t\t${demo}\n\t</div>\n`"
                }
            ],
            "src/diagrams/marker/marker.component.ts": [
                {
                    "name": "template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/diagrams/marker/marker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/diagrams/marker/marker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "settings"
                }
            ],
            "src/diagrams/card-node/card-node-column.component.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/diagrams/card-node/card-node-column.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "settings"
                }
            ],
            "src/diagrams/card-node/card-node-subtitle.component.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/diagrams/card-node/card-node-subtitle.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "settings"
                }
            ],
            "src/diagrams/card-node/card-node-label.component.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/diagrams/card-node/card-node-label.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "settings"
                }
            ],
            "src/diagrams/card-node/card-node-title.component.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/diagrams/card-node/card-node-title.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "settings"
                }
            ],
            "src/diagrams/card-node/card-node.component.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/diagrams/card-node/card-node.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "settings"
                }
            ],
            "src/diagrams/edge/edge.component.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/diagrams/edge/edge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "settings"
                }
            ],
            "src/diagrams/shape-node/shape-node.component.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/diagrams/shape-node/shape-node.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "settings"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 25,
        "status": "low",
        "files": [
            {
                "filePath": "src/alluvial-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlluvialChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/area-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedAreaChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/area-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AreaChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/bar-chart-grouped.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupedBarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/bar-chart-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleBarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/bar-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedBarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/base-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseChart",
                "coveragePercent": 66,
                "coverageCount": "8/12",
                "status": "good"
            },
            {
                "filePath": "src/boxplot-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoxplotChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/bubble-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BubbleChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/bullet-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BulletChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/circle-pack-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CirclePackChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/combo-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComboChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/diagrams/card-node/card-node-column.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeColumnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/card-node/card-node-column.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/card-node/card-node-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/card-node/card-node-label.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/card-node/card-node-subtitle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeSubtitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/card-node/card-node-subtitle.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/card-node/card-node-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/card-node/card-node-title.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/card-node/card-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/card-node/card-node.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/edge/edge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EdgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/edge/edge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Coordinates",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/edge/edge.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowLeftComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowRightComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerDiamondComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerShapeNodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerSquareComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerTeeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/marker/marker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/marker/marker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/shape-node/shape-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShapeNodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/diagrams/shape-node/shape-node.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/donut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonutChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/gauge-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GaugeChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/heatmap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeatmapChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/histogram-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HistogramChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/lollipop-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LollipopChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/meter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MeterChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/pie-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PieChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/radar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/scatter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScatterChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/tree-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/treemap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreemapChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "src/wordcloud-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WordCloudChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "introStories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "circleSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeMapped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeHeight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgrammaticStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/card-node.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/edge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/edge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/edge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/edge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTargetCurve",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/diagrams/shape-node.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}