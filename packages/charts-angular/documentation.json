{
    "pipes": [],
    "interfaces": [
        {
            "name": "Coordinates",
            "id": "interface-Coordinates-fdbb5dd12a5b97df1bed86db56caabfaedf088f2843694fe563e124713c2c44c9ae30097400873a26f2b2bf0d3feb823b8f03840c94ec1247533e52cc4fa4df4",
            "file": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\n\nimport { carbonPrefix } from '../config'\nimport { NgClass, NgStyle } from '@angular/common';\n\ninterface Coordinates {\n\tx: number\n\ty: number\n}\n@Component({\n    selector: '[ibm-graph-edge]',\n    template: `\n\t\t<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__container'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t\t\t[ngStyle]=\"{ stroke: color }\"\n\t\t\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\" />\n\t\t</svg:g>\n\t`,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class Edge {\n\t@Input() color = ''\n\t@Input() markerEnd = ''\n\t@Input() markerStart = ''\n\t@Input() source: Coordinates = { x: 0, y: 0 }\n\t@Input() target: Coordinates = { x: 0, y: 0 }\n\t@Input() variant?: 'dash-sm' | 'dash-md' | 'dash-lg' | 'dash-xl' | 'double' | 'tunnel'\n\t@Input() path = ''\n\n\tpathClasses = ''\n\tnamespace = `${carbonPrefix}--cc--edge`\n\tstraight = CarbonComponent.buildStraightPathString\n}\n",
            "properties": [
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlluvialChart",
            "id": "component-AlluvialChart-fd0f032782d492e0444e49b5e0a5a8c48ef628d808592bae19c77ab550cbff0fcfad86d193591e9394a1eebe6ce2ab1397c2ef30c592a424201aa498e8b1e633",
            "file": "projects/charts-angular/src/lib/charts/alluvial-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-alluvial-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Alluvial</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Alluvial` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { AlluvialChart as AlluvialChartCore, type AlluvialChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `Alluvial` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-alluvial-chart',\n    template: ``,\n    standalone: true\n})\nexport class AlluvialChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new AlluvialChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as AlluvialChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "AreaChart",
            "id": "component-AreaChart-638395392ad3a5dbb4a7690187d91d6447963c7379b951bb23ce023a8ad3416087d0a56d826ff6804b2acf04e82f387070afc14d2c8b41b86e903cadc48fea43",
            "file": "projects/charts-angular/src/lib/charts/area-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>AreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `AreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { AreaChart as AreaChartCore, type AreaChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `AreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-area-chart',\n    template: ``,\n    standalone: true\n})\nexport class AreaChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new AreaChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as AreaChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BaseChart",
            "id": "component-BaseChart-56944560fcb5b08640c9fba1891684776ff9cd27f16d77084023c68f751ee2903e4cbc4db0422bb191392c323ab7fecbd25ff9181b851ae85458dbed45e96da5",
            "file": "projects/charts-angular/src/lib/charts/base-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-base-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": []
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n"
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BaseChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BaseChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild, OnInit, AfterViewInit, ElementRef } from '@angular/core'\nimport type { ChartTabularData } from '@carbon/charts'\n/**\n * Wrapper around `BaseChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-base-chart',\n    template: ``,\n    standalone: true\n})\nexport class BaseChart implements AfterViewInit, OnInit {\n\t/**\n\t * Data passed to charts library for displaying\n\t */\n\t@Input() set data(newData: ChartTabularData) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst dataExistsAlready = !!this._data\n\n\t\tthis._data = newData\n\n\t\tif (dataExistsAlready) {\n\t\t\tthis.chart?.model.setData(newData)\n\t\t}\n\t}\n\n\tget data(): ChartTabularData {\n\t\treturn this._data\n\t}\n\n\t/**\n\t * Options passed to charts library\n\t */\n\t@Input() set options(newOptions: any) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst optionsExistAlready = !!this._options\n\n\t\tthis._options = newOptions\n\n\t\tif (optionsExistAlready) {\n\t\t\tthis.chart?.model.setOptions(newOptions)\n\t\t}\n\t}\n\n\tget options() {\n\t\treturn this._options\n\t}\n\n\t/**\n\t * Chart width\n\t */\n\t@Input() width?: string\n\n\t/**\n\t * Chart height\n\t */\n\t@Input() height?: string\n\n\t/**\n\t * Chart container element ref\n\t */\n\t@ViewChild('chartRef') chartRef!: ElementRef<HTMLElement>\n\n\t/**\n\t * Chart object instance\n\t *\n\t * You can use this to do whatever you would normally do with a chart if you used\n\t * charts library directly.\n\t */\n\tchart: any\n\n\tprivate _data!: ChartTabularData\n\tprivate _options: any\n\n\tconstructor(protected elementRef: ElementRef) {\n\t}\n\n\tngOnInit() {\n\t\t// Width prop is mandatory for the wrappers\n\t\tif (this.width) {\n\t\t\tthis.options.width = this.width\n\t\t}\n\n\t\t// Height prop is mandatory for the wrappers\n\t\tif (this.height) {\n\t\t\tthis.options.height = this.height\n\t\t}\n\t}\n\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 74,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newData",
                                "type": "ChartTabularData",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 17,
                        "rawdescription": "\n\nData passed to charts library for displaying\n",
                        "description": "<p>Data passed to charts library for displaying</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newData",
                                "type": "ChartTabularData",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "data",
                        "type": "",
                        "returnType": "ChartTabularData",
                        "line": 28
                    }
                },
                "options": {
                    "name": "options",
                    "setSignature": {
                        "name": "options",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newOptions",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 35,
                        "rawdescription": "\n\nOptions passed to charts library\n",
                        "description": "<p>Options passed to charts library</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newOptions",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "options",
                        "type": "",
                        "returnType": "",
                        "line": 46
                    }
                }
            }
        },
        {
            "name": "BoxplotChart",
            "id": "component-BoxplotChart-7455ea137bd9b85b3e39170c35adbf2d741692287dcb26b888a2e8c12d4d1cbf9263e83f431be1ecc77df2c015f346ee21f57bb16c757550a3a3c724ee56360d",
            "file": "projects/charts-angular/src/lib/charts/boxplot-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-boxplot-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BoxplotChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BoxplotChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { BoxplotChart as BoxplotChartCore, type ChartTabularData, type BoxplotChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `BoxplotChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-boxplot-chart',\n    template: ``,\n    standalone: true\n})\nexport class BoxplotChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new BoxplotChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BoxplotChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BubbleChart",
            "id": "component-BubbleChart-594ca0d29afb3a2bab8be719a6d708cb9e1b29e2c570abd1e1edf264204dafca9f925eb326fd3d72e22094f4061320b1985ed4a9defca9886075085c9cc315a2",
            "file": "projects/charts-angular/src/lib/charts/bubble-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bubble-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { BubbleChart as BubbleChartCore, type BubbleChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-bubble-chart',\n    template: ``,\n    standalone: true\n})\nexport class BubbleChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new BubbleChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BubbleChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BulletChart",
            "id": "component-BulletChart-465385c41a78b70ee25dbda11b2439af197049e4d845ea2fe1f0fcdd647700df034e9665bf23d1e7721b7f07614f447cf58e4aa730ec11cd613008dc84dfbb00",
            "file": "projects/charts-angular/src/lib/charts/bullet-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bullet-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BulletChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BulletChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { BulletChart as BulletChartCore, type BulletChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `BulletChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-bullet-chart',\n    template: ``,\n    standalone: true\n})\nexport class BulletChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new BulletChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BulletChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "CardNode",
            "id": "component-CardNode-d72d2a1103e5febb01ea95c763c0d7cd31e8678961905b374fc4f84de6391314256fdd704dd953c71a864c2e87ef4f784b560c575667df1fff3950109e171bd3",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n\t<xhtml:div\n\t\t*ngSwitchCase=\"'div'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'border-color': color,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:div>\n\n\t<xhtml:button\n\t\t*ngSwitchCase=\"'button'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'border-color': color,\n\t\t\tposition: position\n\t\t}\"\n\t\t(click)=\"click.emit($event)\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:button>\n\n\t<xhtml:a\n\t\t*ngSwitchCase=\"'a'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[attr.href]=\"href\"\n\t\t[ngStyle]=\"{ 'border-color': color, position: position }\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:a>\n</ng-container>\n<ng-template #nodeTemplate>\n\t<ng-content></ng-content>\n</ng-template>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'static'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core'\nimport { carbonPrefix } from '../../config'\nimport { NgSwitch, NgSwitchCase, NgClass, NgStyle, NgTemplateOutlet } from '@angular/common';\n\n@Component({\n    selector: 'ibm-diagram-card-node',\n    template: `\n\t\t<ng-container [ngSwitch]=\"component\">\n\t\t\t<xhtml:div\n\t\t\t\t*ngSwitchCase=\"'div'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'border-color': color,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:div>\n\n\t\t\t<xhtml:button\n\t\t\t\t*ngSwitchCase=\"'button'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'border-color': color,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(click)=\"click.emit($event)\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:button>\n\n\t\t\t<xhtml:a\n\t\t\t\t*ngSwitchCase=\"'a'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[attr.href]=\"href\"\n\t\t\t\t[ngStyle]=\"{ 'border-color': color, position: position }\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:a>\n\t\t</ng-container>\n\t\t<ng-template #nodeTemplate>\n\t\t\t<ng-content></ng-content>\n\t\t</ng-template>\n\t`,\n    standalone: true,\n    imports: [NgSwitch, NgSwitchCase, NgClass, NgStyle, NgTemplateOutlet]\n})\nexport class CardNode implements OnInit {\n\t@Input() as = 'div'\n\t@Input() href = ''\n\t@Input() color = ''\n\t@Input() stacked = false\n\t@Input() position: string = 'static'\n\n\t@Output() click: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOver: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOut: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseMove: EventEmitter<any> = new EventEmitter<any>()\n\n\tnamespace = `${carbonPrefix}--cc--card-node`\n\n\tcomponent = 'div'\n\n\tngOnInit() {\n\t\tif (this.href) {\n\t\t\tthis.component = 'a'\n\t\t} else {\n\t\t\tthis.component = this.as\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "CardNodeColumn",
            "id": "component-CardNodeColumn-fba2a93003e3be340d95697cba32a56ea827ba4790b72832914d8aec4da16e828106e9aae51b0351b221866baf8eaac99f268a10a0cac7f58bc04adb1916e19b",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-column.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-column",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div>\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "farsideColumn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, HostBinding } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n    selector: 'ibm-diagram-card-node-column',\n    template: `\n\t\t<xhtml:div>\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`,\n    standalone: true\n})\nexport class CardNodeColumn {\n\t@Input() farsideColumn = false\n\n\t@HostBinding('class') get class() {\n\t\tconst farsideClassName = this.farsideColumn\n\t\t\t? `${carbonPrefix}--cc--card-node__column--farside`\n\t\t\t: ''\n\n\t\treturn `${carbonPrefix}--cc--card-node__column ${farsideClassName}`\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "class": {
                    "name": "class",
                    "getSignature": {
                        "name": "class",
                        "type": "",
                        "returnType": "",
                        "line": 16
                    }
                }
            }
        },
        {
            "name": "CardNodeLabel",
            "id": "component-CardNodeLabel-f751fd84b5b5ec345a2fd007a237a62d36174f69afee7cf44e66e6b679e1c3862b63cf8b10e5d855e8088403da50ac77e44584294ccb6e6b7eed369ff1186310",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-label",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:label [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:label>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__label`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { carbonPrefix } from '../../config'\nimport { NgClass } from '@angular/common';\n\n@Component({\n    selector: 'ibm-diagram-card-node-label',\n    template: `\n\t\t<xhtml:label [ngClass]=\"namespace\">\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:label>\n\t`,\n    standalone: true,\n    imports: [NgClass]\n})\nexport class CardNodeLabel {\n\tnamespace = `${carbonPrefix}--cc--card-node__label`\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeSubtitle",
            "id": "component-CardNodeSubtitle-b4dbbab7b4fb915c83605c5816a6bc77ba0d0dbe078fde7adf8c552982a368e0b14bc6291ec6fce8ce15fa3b8b8e817e630d1bd9f8b7107191ec1f61be3b8eb3",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-subtitle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-subtitle",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__subtitle`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { carbonPrefix } from '../../config'\nimport { NgClass } from '@angular/common';\n\n@Component({\n    selector: 'ibm-diagram-card-node-subtitle',\n    template: `\n\t\t<xhtml:div [ngClass]=\"namespace\">\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`,\n    standalone: true,\n    imports: [NgClass]\n})\nexport class CardNodeSubtitle {\n\tnamespace = `${carbonPrefix}--cc--card-node__subtitle`\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeTitle",
            "id": "component-CardNodeTitle-4daa291c83e506999d47228846f2dfc497356c08c10ec6a9f51f7cb8a232d6571ad5ccb3576b96ba1f6a1aee0468c0424ef1dcc957d96e4bf6cb9eaf62d06c37",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-title",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__title`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { carbonPrefix } from '../../config'\nimport { NgClass } from '@angular/common';\n\n@Component({\n    selector: 'ibm-diagram-card-node-title',\n    template: `\n\t\t<xhtml:div [ngClass]=\"namespace\">\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`,\n    standalone: true,\n    imports: [NgClass]\n})\nexport class CardNodeTitle {\n\tnamespace = `${carbonPrefix}--cc--card-node__title`\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CirclePackChart",
            "id": "component-CirclePackChart-eee747a52f8baec1ba893a06ca40641ba0603506895aae58ab1d5f9b33dc5dc00715730bdbb70c926e45ea4fa9ff64a438f52bbef2ccc741944686c7be9e04cc",
            "file": "projects/charts-angular/src/lib/charts/circle-pack-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-circle-pack-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { CirclePackChart as CirclePackChartCore, type CirclePackChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-circle-pack-chart',\n    template: ``,\n    standalone: true\n})\nexport class CirclePackChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new CirclePackChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as CirclePackChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ComboChart",
            "id": "component-ComboChart-9aab81b4660da1e1bc904e7797b5c9da8dde4b9928f976f48f000d5605f808fdbfd62e683d3019eb05d7ac39d4ee9fdb211b097ff7bc63d00b137b967fcf8086",
            "file": "projects/charts-angular/src/lib/charts/combo-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-combo-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ComboChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ComboChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\nimport { ComboChart as ComboChartCore, type ComboChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `ComboChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-combo-chart',\n    template: ``,\n    standalone: true\n})\nexport class ComboChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new ComboChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as ComboChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "DiagramExample1",
            "id": "component-DiagramExample1-38cee627607d0f3ea5da8e4b791acac987af0a8af37e737821ed38bb1043bf7385a0ff3645442f8d142092a3446b7521b09a7588ced07c13b739049d3443207a",
            "file": "projects/charts-angular/src/stories/diagrams/example1/diagram-example1.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "diagram-example1",
            "styleUrls": [],
            "styles": [
                "@import '@carbon/charts/demo/styles.css';"
            ],
            "templateUrl": [
                "./diagram-example1.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "circleSize",
                    "defaultValue": "64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "markerEnd",
                    "defaultValue": "'marker'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "nodeHeight",
                    "defaultValue": "64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "nodeWidth",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "source",
                    "defaultValue": "{ x: 0, y: 48 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "target",
                    "defaultValue": "{ x: 396, y: 48 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { UserModule, WikisModule } from '@carbon/icons-angular'\nimport { CardNodeModule, EdgeModule, MarkerModule, ShapeNodeModule  } from '../../../public-api'\n\n@Component({\n\tselector: 'diagram-example1',\n  standalone: true,\n\ttemplateUrl: './diagram-example1.component.html',\n  styles: [`@import '@carbon/charts/demo/styles.css';`],\n  imports: [ CardNodeModule, EdgeModule, MarkerModule, ShapeNodeModule, UserModule, WikisModule ]\n})\nexport class DiagramExample1 {\n  source = { x: 0, y: 48 }\n  target = { x: 396, y: 48 }\n  markerEnd = 'marker'\n  nodeHeight = 64\n  nodeWidth = 200\n  circleSize = 64\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "@import '@carbon/charts/demo/styles.css';\n",
            "templateData": "<div class=\"demo-desktop-only\">\n  <div class=\"cp-message\">This is a desktop-only example</div>\n  <svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n    <svg:defs>\n      <svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n    </svg:defs>\n\n    <svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\"></svg:g>\n\n    <svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\"\n      [attr.transform]=\"'translate(0, 16)'\">\n      <xhtml:div>\n        <ibm-diagram-card-node as=\"button\">\n          <ibm-diagram-card-node-column>\n            <svg ibmIconUser size=\"20\"></svg>\n          </ibm-diagram-card-node-column>\n          <ibm-diagram-card-node-column>\n            <ibm-diagram-card-node-title>\n              Title\n            </ibm-diagram-card-node-title>\n            <ibm-diagram-card-node-subtitle>\n              Description\n            </ibm-diagram-card-node-subtitle>\n          </ibm-diagram-card-node-column>\n        </ibm-diagram-card-node>\n      </xhtml:div>\n    </svg:foreignObject>\n\n    <svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\"\n      [attr.transform]=\"'translate(400, 16)'\">\n      <xhtml:div>\n        <ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\"\n          [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n      </xhtml:div>\n    </svg:foreignObject>\n  </svg>\n\n  <ng-template #wikiTemplate>\n    <svg ibmIconWikis size=\"20\"></svg>\n  </ng-template>\n</div>"
        },
        {
            "name": "DonutChart",
            "id": "component-DonutChart-5de6d97b0ec81d2ca2f8ffb36f79108f4f0a60dce74d321f752b0bede5c65d22435c19083a952386b51b9b7ee75920ca27e080b25caabc6fde80d93fb30b5baa",
            "file": "projects/charts-angular/src/lib/charts/donut-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-donut-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>DonutChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `DonutChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { DonutChart as DonutChartCore, type DonutChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `DonutChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-donut-chart',\n    template: ``,\n    standalone: true\n})\nexport class DonutChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new DonutChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as DonutChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "Edge",
            "id": "component-Edge-fdbb5dd12a5b97df1bed86db56caabfaedf088f2843694fe563e124713c2c44c9ae30097400873a26f2b2bf0d3feb823b8f03840c94ec1247533e52cc4fa4df4",
            "file": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-edge]",
            "styleUrls": [],
            "styles": [],
            "template": "<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__container'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t[ngStyle]=\"{ stroke: color }\"\n\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\" />\n</svg:g>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerEnd",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerStart",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "path",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "source",
                    "defaultValue": "{ x: 0, y: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "target",
                    "defaultValue": "{ x: 0, y: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"dash-sm\" | \"dash-md\" | \"dash-lg\" | \"dash-xl\" | \"double\" | \"tunnel\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--edge`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "pathClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "straight",
                    "defaultValue": "CarbonComponent.buildStraightPathString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\n\nimport { carbonPrefix } from '../config'\nimport { NgClass, NgStyle } from '@angular/common';\n\ninterface Coordinates {\n\tx: number\n\ty: number\n}\n@Component({\n    selector: '[ibm-graph-edge]',\n    template: `\n\t\t<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__container'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t\t\t[ngStyle]=\"{ stroke: color }\"\n\t\t\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\" />\n\t\t</svg:g>\n\t`,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class Edge {\n\t@Input() color = ''\n\t@Input() markerEnd = ''\n\t@Input() markerStart = ''\n\t@Input() source: Coordinates = { x: 0, y: 0 }\n\t@Input() target: Coordinates = { x: 0, y: 0 }\n\t@Input() variant?: 'dash-sm' | 'dash-md' | 'dash-lg' | 'dash-xl' | 'double' | 'tunnel'\n\t@Input() path = ''\n\n\tpathClasses = ''\n\tnamespace = `${carbonPrefix}--cc--edge`\n\tstraight = CarbonComponent.buildStraightPathString\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "GaugeChart",
            "id": "component-GaugeChart-595bcd315bd3351e5c109cb60adf819296d99652f7a57594371120fbab978f129b54c9fce3e8634cb1f7a30ce12d565c0fc8e05d3f23eb55bddcb9dcc7c90ee9",
            "file": "projects/charts-angular/src/lib/charts/gauge-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-gauge-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GaugeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GaugeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { GaugeChart as GaugeChartCore, type GaugeChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `GaugeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-gauge-chart',\n    template: ``,\n    standalone: true\n})\nexport class GaugeChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new GaugeChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as GaugeChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "GroupedBarChart",
            "id": "component-GroupedBarChart-c539121e69317bf4c453ee99c3b37dbefb482879b636c4f185d77050f0eb7c40fdfa8151ad7fea55c1cec651799e08ea35a78aec3fbd112565dd8c153f233c8f",
            "file": "projects/charts-angular/src/lib/charts/bar-chart-grouped.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-grouped-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GroupedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GroupedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { GroupedBarChart as GroupedBarChartCore, type ChartTabularData, type BarChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `GroupedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-grouped-bar-chart',\n    template: ``,\n    standalone: true\n})\nexport class GroupedBarChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new GroupedBarChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HeatmapChart",
            "id": "component-HeatmapChart-a8bb16ec8efb6968228bb9ba9dbbfd23eb0a6e8d2ac075734f5e576c9f63df36c9130820bc0f611f383d9e6e476734f1855f06eaaaec4de6a1cfef80f87a906d",
            "file": "projects/charts-angular/src/lib/charts/heatmap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-heatmap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Heatmap</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Heatmap` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { HeatmapChart as HeatmapChartCore, type HeatmapChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `Heatmap` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-heatmap-chart',\n    template: ``,\n    standalone: true\n})\nexport class HeatmapChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new HeatmapChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as HeatmapChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HistogramChart",
            "id": "component-HistogramChart-ed12b355a3bf98b082e913017a5b8182f0116e6127736d204216b16aae1d6f30d03a00f655ca0366f8a25e15bbdeea205dd55d5b506cf32a59dce7c84ab6eee2",
            "file": "projects/charts-angular/src/lib/charts/histogram-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-histogram-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>HistogramChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `HistogramChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { HistogramChart as HistogramChartCore, type HistogramChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `HistogramChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-histogram-chart',\n    template: ``,\n    standalone: true\n})\nexport class HistogramChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new HistogramChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as HistogramChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LineChart",
            "id": "component-LineChart-9f8a6bf620e4f006a23a9c3584146695ca1b23470eb35794f6612d4a489b18189c0390e75abf6c5db13c786faa1814afff2da6a08bb79eead95303091b42c956",
            "file": "projects/charts-angular/src/lib/charts/line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-line-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LineChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LineChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { LineChart as LineChartCore, type LineChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `LineChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-line-chart',\n    template: ``,\n    standalone: true\n})\nexport class LineChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new LineChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as LineChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LollipopChart",
            "id": "component-LollipopChart-de1a035152033591284f83bcbd0de0a2845c677a442d6673f523c1ee0d9ae6973e8e7724ba70d19fad73d52857f66bd7b9f17c870c101eca1302ad85286268ea",
            "file": "projects/charts-angular/src/lib/charts/lollipop-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-lollipop-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LollipopChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LollipopChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { LollipopChart as LollipopChartCore, type LollipopChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `LollipopChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-lollipop-chart',\n    template: ``,\n    standalone: true\n})\nexport class LollipopChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new LollipopChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as LollipopChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "Marker",
            "id": "component-Marker-8000ac7f7f60cfe6226e0426f92278fcff9619cd55c05a1af135ecde8e01a2ed50ca6db056fe7ff2009302443a959a323bf47546756ca62b6eea03fd9300dc13",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\nimport { NgClass, NgStyle } from '@angular/common';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n    selector: '[ibm-graph-marker]',\n    template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({\n    selector: '[ibm-graph-marker-arrow-left]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-arrow-right]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-circle]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-diamond]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-square]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-tee]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MarkerArrowLeft",
            "id": "component-MarkerArrowLeft-8000ac7f7f60cfe6226e0426f92278fcff9619cd55c05a1af135ecde8e01a2ed50ca6db056fe7ff2009302443a959a323bf47546756ca62b6eea03fd9300dc13",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-left]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\nimport { NgClass, NgStyle } from '@angular/common';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n    selector: '[ibm-graph-marker]',\n    template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({\n    selector: '[ibm-graph-marker-arrow-left]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-arrow-right]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-circle]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-diamond]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-square]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-tee]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerArrowRight",
            "id": "component-MarkerArrowRight-8000ac7f7f60cfe6226e0426f92278fcff9619cd55c05a1af135ecde8e01a2ed50ca6db056fe7ff2009302443a959a323bf47546756ca62b6eea03fd9300dc13",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-right]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\nimport { NgClass, NgStyle } from '@angular/common';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n    selector: '[ibm-graph-marker]',\n    template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({\n    selector: '[ibm-graph-marker-arrow-left]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-arrow-right]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-circle]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-diamond]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-square]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-tee]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerDiamond",
            "id": "component-MarkerDiamond-8000ac7f7f60cfe6226e0426f92278fcff9619cd55c05a1af135ecde8e01a2ed50ca6db056fe7ff2009302443a959a323bf47546756ca62b6eea03fd9300dc13",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-diamond]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\nimport { NgClass, NgStyle } from '@angular/common';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n    selector: '[ibm-graph-marker]',\n    template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({\n    selector: '[ibm-graph-marker-arrow-left]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-arrow-right]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-circle]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-diamond]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-square]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-tee]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerShapeNode",
            "id": "component-MarkerShapeNode-8000ac7f7f60cfe6226e0426f92278fcff9619cd55c05a1af135ecde8e01a2ed50ca6db056fe7ff2009302443a959a323bf47546756ca62b6eea03fd9300dc13",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-circle]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\nimport { NgClass, NgStyle } from '@angular/common';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n    selector: '[ibm-graph-marker]',\n    template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({\n    selector: '[ibm-graph-marker-arrow-left]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-arrow-right]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-circle]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-diamond]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-square]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-tee]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerSquare",
            "id": "component-MarkerSquare-8000ac7f7f60cfe6226e0426f92278fcff9619cd55c05a1af135ecde8e01a2ed50ca6db056fe7ff2009302443a959a323bf47546756ca62b6eea03fd9300dc13",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-square]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\nimport { NgClass, NgStyle } from '@angular/common';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n    selector: '[ibm-graph-marker]',\n    template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({\n    selector: '[ibm-graph-marker-arrow-left]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-arrow-right]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-circle]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-diamond]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-square]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-tee]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerTee",
            "id": "component-MarkerTee-8000ac7f7f60cfe6226e0426f92278fcff9619cd55c05a1af135ecde8e01a2ed50ca6db056fe7ff2009302443a959a323bf47546756ca62b6eea03fd9300dc13",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-tee]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\nimport { NgClass, NgStyle } from '@angular/common';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n    selector: '[ibm-graph-marker]',\n    template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({\n    selector: '[ibm-graph-marker-arrow-left]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-arrow-right]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-circle]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-diamond]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-square]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({\n    selector: '[ibm-graph-marker-tee]', template,\n    standalone: true,\n    imports: [NgClass, NgStyle]\n})\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MeterChart",
            "id": "component-MeterChart-c6efde6be79489e9295b4f6dbcfffce1b82b90111498d878d77f16654d4abec55dd733ab81cc3d839f2d84614b8fd7c67072415be3562880759452ea768b3859",
            "file": "projects/charts-angular/src/lib/charts/meter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-meter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>MeterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `MeterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\nimport { MeterChart as MeterChartCore, type MeterChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `MeterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-meter-chart',\n    template: ``,\n    standalone: true\n})\nexport class MeterChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new MeterChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as MeterChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "PieChart",
            "id": "component-PieChart-167ca84945b3fee6b4fa6aed2c0a7abd9f1f70c8b01bad1bc50d331e4821834678e3a67f7100a33dd01f48192abc736f2f9cf1f6ac1e229418196f708d9f3815",
            "file": "projects/charts-angular/src/lib/charts/pie-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-pie-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>PieChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `PieChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { PieChart as PieChartCore, type PieChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `PieChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-pie-chart',\n    template: ``,\n    standalone: true\n})\nexport class PieChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new PieChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as PieChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "RadarChart",
            "id": "component-RadarChart-eef26772955e3826446bd601ede8d5e6e1acf21c5fd21917bded9eaf70b9c550fe961d721f694e6ce71133149db9cac943070f69f3d4975d4ea04ececfe7bedc",
            "file": "projects/charts-angular/src/lib/charts/radar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-radar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>RadarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `RadarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { RadarChart as RadarChartCore, type RadarChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `RadarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-radar-chart',\n    template: ``,\n    standalone: true\n})\nexport class RadarChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new RadarChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as RadarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ScatterChart",
            "id": "component-ScatterChart-a7288eb49d36026ee3ca4c6125175787b1dd7be8468f7f96f83f5cbd306120dcfa58082220f3485cc30d434bf33126fb5b835571861be56cbbfcbaa7fbcd10ef",
            "file": "projects/charts-angular/src/lib/charts/scatter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-scatter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ScatterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ScatterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { ScatterChart as ScatterChartCore, type ScatterChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `ScatterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-scatter-chart',\n    template: ``,\n    standalone: true\n})\nexport class ScatterChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new ScatterChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as ScatterChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ShapeNode",
            "id": "component-ShapeNode-cb2595f74dca9b7aec5c8e47a1eb59517d42948689879a2a66bd5101cb410da4b999bc14953ccf4c0f4483df5409a641f06cc33681900a9b10ccd50e961cab51",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/shape/shape-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-shape-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n\t<xhtml:div\n\t\t*ngSwitchCase=\"'div'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:div>\n\n\t<xhtml:button\n\t\t*ngSwitchCase=\"'button'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(click)=\"click.emit($event)\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:button>\n\n\t<xhtml:a\n\t\t*ngSwitchCase=\"'a'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[attr.href]=\"href\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:a>\n</ng-container>\n\n<ng-template #nodeTemplate>\n\t<div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n\t\t<ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n\t</div>\n\t<div attr.class=\"{{ namespace + '__body' }}\" [ngStyle]=\"{ position: bodyPosition }\">\n\t\t<div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n\t\t<div attr.class=\"{{ namespace + '__subtitle' }}\">\n\t\t\t{{ subtitle }}\n\t\t</div>\n\t</div>\n</ng-template>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bodyPosition",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'fixed'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "renderIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "'circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "\"circle\" | \"square\" | \"rounded-square\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "48",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 111,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--shape-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 113
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, TemplateRef, OnInit } from '@angular/core'\n\nimport { carbonPrefix } from '../../config'\nimport { NgSwitch, NgSwitchCase, NgClass, NgStyle, NgTemplateOutlet, NgIf } from '@angular/common';\n\n@Component({\n    selector: 'ibm-diagram-shape-node',\n    template: `\n\t\t<ng-container [ngSwitch]=\"component\">\n\t\t\t<xhtml:div\n\t\t\t\t*ngSwitchCase=\"'div'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:div>\n\n\t\t\t<xhtml:button\n\t\t\t\t*ngSwitchCase=\"'button'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(click)=\"click.emit($event)\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:button>\n\n\t\t\t<xhtml:a\n\t\t\t\t*ngSwitchCase=\"'a'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[attr.href]=\"href\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:a>\n\t\t</ng-container>\n\n\t\t<ng-template #nodeTemplate>\n\t\t\t<div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n\t\t\t</div>\n\t\t\t<div attr.class=\"{{ namespace + '__body' }}\" [ngStyle]=\"{ position: bodyPosition }\">\n\t\t\t\t<div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n\t\t\t\t<div attr.class=\"{{ namespace + '__subtitle' }}\">\n\t\t\t\t\t{{ subtitle }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`,\n    standalone: true,\n    imports: [NgSwitch, NgSwitchCase, NgClass, NgStyle, NgTemplateOutlet, NgIf]\n})\nexport class ShapeNode implements OnInit {\n\t@Input() as = 'div'\n\t@Input() href = ''\n\t@Input() renderIcon?: TemplateRef<any>\n\t@Input() size = 48\n\t@Input() stacked = false\n\t@Input() shape: 'circle' | 'square' | 'rounded-square' = 'circle'\n\t@Input() subtitle = ''\n\t@Input() title = ''\n\t@Input() position: string = 'fixed'\n\t@Input() bodyPosition: string = 'absolute'\n\n\t@Output() click: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOver: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOut: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseMove: EventEmitter<any> = new EventEmitter<any>()\n\n\tnamespace = `${carbonPrefix}--cc--shape-node`\n\tcomponent = 'div'\n\n\tngOnInit() {\n\t\tif (this.href) {\n\t\t\tthis.component = 'a'\n\t\t} else {\n\t\t\tthis.component = this.as\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SimpleBarChart",
            "id": "component-SimpleBarChart-ca4dda2b1c67cdc6288b53a16de674758f994d10b6732bb94f82ab54d4fdbe87f66b49181de1794da22ae864e00e89f5af8442a36a033845874d4468bac92452",
            "file": "projects/charts-angular/src/lib/charts/bar-chart-simple.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-simple-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>SimpleBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `SimpleBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { SimpleBarChart as SimpleBarChartCore, type ChartTabularData, type BarChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `SimpleBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-simple-bar-chart',\n    template: ``,\n    standalone: true\n})\nexport class SimpleBarChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new SimpleBarChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedAreaChart",
            "id": "component-StackedAreaChart-83e08591a0b9462074788d1f4a787f51dc25c881ddc61a31cade2fbda6f21f8f70e44772d4b897c985ca4f188f8caae264a566f01cab588f4ab4158bee90194d",
            "file": "projects/charts-angular/src/lib/charts/area-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedAreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedAreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport {\n\tStackedAreaChart as StackedAreaChartCore,\n\ttype StackedAreaChartOptions,\n\ttype ChartTabularData\n} from '@carbon/charts'\n\n/**\n * Wrapper around `StackedAreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-stacked-area-chart',\n    template: ``,\n    standalone: true\n})\nexport class StackedAreaChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new StackedAreaChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as StackedAreaChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedBarChart",
            "id": "component-StackedBarChart-af5b40bfe9cf1e2f0178edfb92315f5176c9da8450ac1ea2d50b260b6f4d5f8224239cb7948a4e03425f902eaf2199b9ee841c76a3bde82328966eb355c204f2",
            "file": "projects/charts-angular/src/lib/charts/bar-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { StackedBarChart as StackedBarChartCore, type ChartTabularData, type StackedBarChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `StackedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-stacked-bar-chart',\n    template: ``,\n    standalone: true\n})\nexport class StackedBarChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new StackedBarChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as StackedBarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreeChart",
            "id": "component-TreeChart-cb723f07ddad34642625b4ef8abb1aa6143bf6723b6c6f12fc4b9fb8f7d15abf25b5bc20caa70823a02dc83631ae97c9023949387b447884a807865bc73ae2b4",
            "file": "projects/charts-angular/src/lib/charts/tree-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-tree-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { TreeChart as TreeChartCore, type TreemapChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `TreeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-tree-chart',\n    template: ``,\n    standalone: true\n})\nexport class TreeChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new TreeChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as TreemapChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreemapChart",
            "id": "component-TreemapChart-d6d9137e429561a3b3105185eb2e59ad73ff85f41b79b9be05b16045f75a10c359cf59fc514e7cd52f86edd37c3f925678a2e57ab9e22aa432fa8198f10a3538",
            "file": "projects/charts-angular/src/lib/charts/treemap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-treemap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreemapChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreemapChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { TreemapChart as TreemapChartCore, type TreemapChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `TreemapChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-treemap-chart',\n    template: ``,\n    standalone: true\n})\nexport class TreemapChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new TreemapChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as TreemapChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "WordCloudChart",
            "id": "component-WordCloudChart-3956d19e698627643425b1b4b5f67ccae116cde61740bae7f44fbfb29c80df515d7415a3e07e4b3f0933d49c09d0bf1b0aa4d7f93f226eef20a46056585fd385",
            "file": "projects/charts-angular/src/lib/charts/wordcloud-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-wordcloud-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 17,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 58,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 35,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 53,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 71,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>WordCloudChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `WordCloudChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { WordCloudChart as WordCloudChartCore, type WorldCloudChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `WordCloudChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n    selector: 'ibm-wordcloud-chart',\n    template: ``,\n    standalone: true\n})\nexport class WordCloudChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new WordCloudChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as WorldCloudChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "CardNodeModule",
            "id": "module-CardNodeModule-ff141250efaeae4d44cbf44b54be1de3a42444f3139d315859d715695146d8f013faa2f42ec4a89429eff6d966a3c46c3c33763eb7918766aa78ac00bd135615",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { CardNode } from './card-node.component'\nimport { CardNodeColumn } from './card-node-column.component'\nimport { CardNodeLabel } from './card-node-label.component'\nimport { CardNodeSubtitle } from './card-node-subtitle.component'\nimport { CardNodeTitle } from './card-node-title.component'\nexport {\n\tCardNode,\n\tCardNodeColumn,\n\tCardNodeLabel,\n\tCardNodeSubtitle,\n\tCardNodeTitle\n}\n@NgModule({\n    exports: [\n        CardNode,\n        CardNodeColumn,\n        CardNodeLabel,\n        CardNodeSubtitle,\n        CardNodeTitle\n    ],\n    imports: [CommonModule, CardNode,\n        CardNodeColumn,\n        CardNodeLabel,\n        CardNodeSubtitle,\n        CardNodeTitle]\n})\nexport class CardNodeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardNode"
                        },
                        {
                            "name": "CardNodeColumn"
                        },
                        {
                            "name": "CardNodeLabel"
                        },
                        {
                            "name": "CardNodeSubtitle"
                        },
                        {
                            "name": "CardNodeTitle"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardNode"
                        },
                        {
                            "name": "CardNodeColumn"
                        },
                        {
                            "name": "CardNodeLabel"
                        },
                        {
                            "name": "CardNodeSubtitle"
                        },
                        {
                            "name": "CardNodeTitle"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartsModule",
            "id": "module-ChartsModule-d3f5f1b8b43b4f865e3e4ad00c64d3d25d736d7afcdb8a2a5a471c435a40e63ea6b8ccaa6fc720b64f4a35d4c141ef2d20f948b963ef253085ce7c28bb10f28a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/charts/charts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport {\n\tAlluvialChart,\n\tAreaChart,\n\tBaseChart,\n\tBoxplotChart,\n\tBubbleChart,\n\tBulletChart,\n\tCirclePackChart,\n\tComboChart,\n\tDonutChart,\n\tGaugeChart,\n\tGroupedBarChart,\n\tHeatmapChart,\n\tHistogramChart,\n\tLineChart,\n\tLollipopChart,\n\tMeterChart,\n\tPieChart,\n\tRadarChart,\n\tScatterChart,\n\tSimpleBarChart,\n\tStackedAreaChart,\n\tStackedBarChart,\n\tTreeChart,\n\tTreemapChart,\n\tWordCloudChart\n} from './index'\n\n@NgModule({\n    imports: [CommonModule, BaseChart,\n        AlluvialChart,\n        AreaChart,\n        StackedAreaChart,\n        SimpleBarChart,\n        GroupedBarChart,\n        StackedBarChart,\n        BoxplotChart,\n        BubbleChart,\n        BulletChart,\n        DonutChart,\n        GaugeChart,\n        HeatmapChart,\n        HistogramChart,\n        LineChart,\n        LollipopChart,\n        PieChart,\n        ScatterChart,\n        MeterChart,\n        RadarChart,\n        ComboChart,\n        TreeChart,\n        TreemapChart,\n        CirclePackChart,\n        WordCloudChart],\n    exports: [\n        BaseChart,\n        AlluvialChart,\n        AreaChart,\n        StackedAreaChart,\n        SimpleBarChart,\n        GroupedBarChart,\n        StackedBarChart,\n        BoxplotChart,\n        BubbleChart,\n        BulletChart,\n        DonutChart,\n        GaugeChart,\n        HeatmapChart,\n        HistogramChart,\n        LineChart,\n        LollipopChart,\n        PieChart,\n        ScatterChart,\n        MeterChart,\n        RadarChart,\n        ComboChart,\n        TreeChart,\n        TreemapChart,\n        CirclePackChart,\n        WordCloudChart\n    ]\n})\nexport class ChartsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AlluvialChart"
                        },
                        {
                            "name": "AreaChart"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChart"
                        },
                        {
                            "name": "BubbleChart"
                        },
                        {
                            "name": "BulletChart"
                        },
                        {
                            "name": "CirclePackChart"
                        },
                        {
                            "name": "ComboChart"
                        },
                        {
                            "name": "DonutChart"
                        },
                        {
                            "name": "GaugeChart"
                        },
                        {
                            "name": "GroupedBarChart"
                        },
                        {
                            "name": "HeatmapChart"
                        },
                        {
                            "name": "HistogramChart"
                        },
                        {
                            "name": "LineChart"
                        },
                        {
                            "name": "LollipopChart"
                        },
                        {
                            "name": "MeterChart"
                        },
                        {
                            "name": "PieChart"
                        },
                        {
                            "name": "RadarChart"
                        },
                        {
                            "name": "ScatterChart"
                        },
                        {
                            "name": "SimpleBarChart"
                        },
                        {
                            "name": "StackedAreaChart"
                        },
                        {
                            "name": "StackedBarChart"
                        },
                        {
                            "name": "TreeChart"
                        },
                        {
                            "name": "TreemapChart"
                        },
                        {
                            "name": "WordCloudChart"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AlluvialChart"
                        },
                        {
                            "name": "AreaChart"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChart"
                        },
                        {
                            "name": "BubbleChart"
                        },
                        {
                            "name": "BulletChart"
                        },
                        {
                            "name": "CirclePackChart"
                        },
                        {
                            "name": "ComboChart"
                        },
                        {
                            "name": "DonutChart"
                        },
                        {
                            "name": "GaugeChart"
                        },
                        {
                            "name": "GroupedBarChart"
                        },
                        {
                            "name": "HeatmapChart"
                        },
                        {
                            "name": "HistogramChart"
                        },
                        {
                            "name": "LineChart"
                        },
                        {
                            "name": "LollipopChart"
                        },
                        {
                            "name": "MeterChart"
                        },
                        {
                            "name": "PieChart"
                        },
                        {
                            "name": "RadarChart"
                        },
                        {
                            "name": "ScatterChart"
                        },
                        {
                            "name": "SimpleBarChart"
                        },
                        {
                            "name": "StackedAreaChart"
                        },
                        {
                            "name": "StackedBarChart"
                        },
                        {
                            "name": "TreeChart"
                        },
                        {
                            "name": "TreemapChart"
                        },
                        {
                            "name": "WordCloudChart"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EdgeModule",
            "id": "module-EdgeModule-80ee169058a06a75b2d7a7b0f8471727e96e97fe01895bf0aa01ec26d4b93ff45051070600815f1e480ece65acb2736e4f7a1ab60ae26aa6f6956f18c691dd0b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/edges/edge.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { Edge } from './edge.component'\nexport { Edge } from './edge.component'\n\n@NgModule({\n    exports: [Edge],\n    imports: [CommonModule, Edge]\n})\nexport class EdgeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Edge"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "Edge"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MarkerModule",
            "id": "module-MarkerModule-52241799a4d37ee95acab5c1b9266046c312ab184a54f0d6c1e0b9a501341bb088347072e96c321d35387d8e5e8c528ce30186cdad80bdbb3f7eb5daa9657cc6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport {\n\tMarker,\n\tMarkerArrowLeft,\n\tMarkerArrowRight,\n\tMarkerShapeNode,\n\tMarkerDiamond,\n\tMarkerSquare,\n\tMarkerTee\n} from './marker.component'\n\nexport {\n\tMarker,\n\tMarkerArrowLeft,\n\tMarkerArrowRight,\n\tMarkerShapeNode,\n\tMarkerDiamond,\n\tMarkerSquare,\n\tMarkerTee\n}\n@NgModule({\n    exports: [\n        Marker,\n        MarkerArrowLeft,\n        MarkerArrowRight,\n        MarkerShapeNode,\n        MarkerDiamond,\n        MarkerSquare,\n        MarkerTee\n    ],\n    imports: [CommonModule, Marker,\n        MarkerArrowLeft,\n        MarkerArrowRight,\n        MarkerShapeNode,\n        MarkerDiamond,\n        MarkerSquare,\n        MarkerTee]\n})\nexport class MarkerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Marker"
                        },
                        {
                            "name": "MarkerArrowLeft"
                        },
                        {
                            "name": "MarkerArrowRight"
                        },
                        {
                            "name": "MarkerDiamond"
                        },
                        {
                            "name": "MarkerShapeNode"
                        },
                        {
                            "name": "MarkerSquare"
                        },
                        {
                            "name": "MarkerTee"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "Marker"
                        },
                        {
                            "name": "MarkerArrowLeft"
                        },
                        {
                            "name": "MarkerArrowRight"
                        },
                        {
                            "name": "MarkerDiamond"
                        },
                        {
                            "name": "MarkerShapeNode"
                        },
                        {
                            "name": "MarkerSquare"
                        },
                        {
                            "name": "MarkerTee"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShapeNodeModule",
            "id": "module-ShapeNodeModule-563037b20601beb94087ac4393400e2ea545b7698bb7fd98cdbc3af52766635e7e17514ea5cf435063e7abb5450fc29c77da45d1e90f8275431bb7c01c6c0610",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/nodes/shape/shape-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ShapeNode } from './shape-node.component'\nexport { ShapeNode } from './shape-node.component'\n\n@NgModule({\n    exports: [ShapeNode],\n    imports: [CommonModule, ShapeNode]\n})\nexport class ShapeNodeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ShapeNode"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShapeNode"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "carbonPrefix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/lib/diagrams/config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'cds'"
            },
            {
                "name": "circleSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: [\n    '../src/**/*.mdx',\n    '../src/**/*.stories.@(js|jsx|ts|tsx)',\n    // Storybook monorepo-specific issue\n\t\t// '../../../../charts/stories/getting-started/angular.stories.mdx',\n\t\t// '../../../../charts/stories/tutorials/*.stories.mdx'\n  ],\n  addons: [\n    {\n      name: '@storybook/addon-essentials',\n\t\t\toptions: {\n\t\t\t\tactions: false\n\t\t\t}\n    }\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {}\n  },\n  logLevel: 'error',\n  docs: {\n    autodocs: 'tag'\n  },\n  staticDirs: ['../../../../charts/.storybook/assets'],\n  features: {\n    storyStoreV7: false\n  },\n  webpackFinal: async (config, {\n    configType\n  }) => {\n    config?.module?.rules?.push({\n      test: /\\.css$/,\n      use: ['style-loader', 'css-loader'],\n      include: [`${corePackage}/demo`]\n    })\n    config.resolve!.alias = {\n      ...config.resolve!.alias,\n      '@carbon/charts': corePackage,\n      // '@storybook/blocks': dirname(require.resolve('@storybook/blocks/package.json'))\n    }\n    return config\n  }\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "core",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'../../../../charts'"
            },
            {
                "name": "corePackage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "resolve(__dirname, `${core}/dist`)"
            },
            {
                "name": "DEFAULT_THEME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ChartTheme.G100"
            },
            {
                "name": "edgeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{ source: 'a', target: 'b', variant: 'dash-md' },\n\t{\n\t\tsource: 'c',\n\t\ttarget: 'b',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target)\n\t},\n\t{\n\t\tsource: 'd',\n\t\ttarget: 'c',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target),\n\t\tvariant: 'tunnel'\n\t}\n]"
            },
            {
                "name": "edgeMapped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "edgeData.map((link) => {\n\tconst sourceNode = nodeData.find((node) => node.id === link.source)\n\tconst targetNode = nodeData.find((node) => node.id === link.target)\n\n\treturn {\n\t\t...link,\n\t\tsource: {\n\t\t\tx: sourceNode!.x + sourceNode!.nodeWidth / 2,\n\t\t\ty: sourceNode!.y + sourceNode!.nodeHeight / 2\n\t\t},\n\t\ttarget: {\n\t\t\tx: targetNode!.x + targetNode!.nodeWidth / 2,\n\t\t\ty: targetNode!.y + targetNode!.nodeHeight / 2\n\t\t}\n\t}\n})"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(componentSelector: string) => `\n\t<div class=\"container\">\n\t\t<div class=\"v10-banner\">\n\t\t\tThis version relies on <b>Carbon v11</b>. If you're using Carbon v10, <a href=\"https://carbon-charts-0x.netlify.app\" target=\"_blank\" rel=\"noreferrer\">see the legacy demo site</a>\n\t\t</div>\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"cds--tag cds--tag--green component-name\">${componentSelector}</span>\n\t\t</h3>\n\t\t<p class=\"props\">\n\t\t  <b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a>\n\t\t</p>\n\t\t<div class=\"marginTop-30\" id=\"chart-demo\">\n\t\t\t<${componentSelector} [data]=\"data\" [options]=\"options\"></${componentSelector}>\n\t\t</div>\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\t\t<p>Opens in a new tab. Please ensure pop-up blocker is not on.</p><br/>\n\t\t<a href=\"#\" (click)=\"openSandbox($event)\">\n\t\t\t<img\n\t\t\t\tsrc=\"https://developer.stackblitz.com/img/open_in_stackblitz.svg\"\n\t\t\t\tclassName=\"marginTop\"\n\t\t\t\talt=\"Edit on StackBlitz\"\n\t\t\t/>\n\t\t</a>\n\t</div>`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(content: string) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${content}\n\t</div>\n`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(content: string) => `\n<div class=\"container theme--white\">\n  ${content}\n</div>\n`"
            },
            {
                "name": "introSection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Docs', module).add(\n\t'Welcome',\n\t() => ({\n\t\ttemplate: `\n\t\t<div class=\"container intro\">\n\t\t\t<div\n\t\t\tclass=\"welcome__container\"\n\t\t\tstyle=\"background: url(./welcome.png) no-repeat center center fixed; background-size: cover;\">\n\t\t\t\t<div class=\"welcome__content\">\n\t\t\t\t\t<h2 class=\"welcome__heading\">Carbon Charts</h2>\n\t\t\t\t\t<h4 class=\"welcome__heading welcome__heading--subtitle\">(Angular)</h4>\n\t\t\t\t\t<h5 class=\"welcome__heading welcome__heading--other\">Other versions</h5>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com\" class=\"welcome__heading welcome__heading--other\">Vanilla JavaScript</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/react\" class=\"welcome__heading welcome__heading--other\">React</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/vue\" class=\"welcome__heading welcome__heading--other\">Vue</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/svelte\" class=\"welcome__heading welcome__heading--other\">Svelte</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span class=\"netlify\">Deploys by <a href=\"https://netlify.com\" target=\"_blank\">Netlify</a></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`\n\t}),\n\t{\n\t\tcontrols: {\n\t\t\thideNoControlsWarning: true\n\t\t}\n\t}\n)"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 300, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 0 }"
            },
            {
                "name": "linkTargetCurve",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 200 }"
            },
            {
                "name": "nodeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{ id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n\t{ id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n\t{\n\t\tid: 'c',\n\t\tx: 600,\n\t\ty: 200,\n\t\ticon: 'user',\n\t\tcircle: true,\n\t\tnodeWidth: circleSize,\n\t\tnodeHeight: circleSize\n\t},\n\t{ id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight }\n]"
            },
            {
                "name": "nodeHeight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "nodeWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "200"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n\tparameters: {\n\t\tactions: { argTypesRegex: '^on[A-Z].*' },\n\t\tcontrols: {\n\t\t\tmatchers: {\n\t\t\t\tcolor: /(background|color)$/i,\n\t\t\t\tdate: /Date$/\n\t\t\t}\n\t\t},\n\t\tdocs: {\n\t\t\ttheme: themes.dark\n\t\t},\n\t\tbackgrounds: { // --cds-background\n\t\t\tdefault: 'g100',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tname: 'g100',\n\t\t\t\t\tvalue: '#161616'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'g90',\n\t\t\t\t\tvalue: '#262626'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'g10',\n\t\t\t\t\tvalue: '#f4f4f4'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'white',\n\t\t\t\t\tvalue: '#fff'\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}"
            },
            {
                "name": "ProgrammaticStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SimpleStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "stories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Diagrams', module)"
            },
            {
                "name": "template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/charts-angular/src/lib/diagrams/config.ts": [
                {
                    "name": "carbonPrefix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/lib/diagrams/config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'cds'"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts": [
                {
                    "name": "circleSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "edgeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{ source: 'a', target: 'b', variant: 'dash-md' },\n\t{\n\t\tsource: 'c',\n\t\ttarget: 'b',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target)\n\t},\n\t{\n\t\tsource: 'd',\n\t\ttarget: 'c',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target),\n\t\tvariant: 'tunnel'\n\t}\n]"
                },
                {
                    "name": "edgeMapped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "edgeData.map((link) => {\n\tconst sourceNode = nodeData.find((node) => node.id === link.source)\n\tconst targetNode = nodeData.find((node) => node.id === link.target)\n\n\treturn {\n\t\t...link,\n\t\tsource: {\n\t\t\tx: sourceNode!.x + sourceNode!.nodeWidth / 2,\n\t\t\ty: sourceNode!.y + sourceNode!.nodeHeight / 2\n\t\t},\n\t\ttarget: {\n\t\t\tx: targetNode!.x + targetNode!.nodeWidth / 2,\n\t\t\ty: targetNode!.y + targetNode!.nodeHeight / 2\n\t\t}\n\t}\n})"
                },
                {
                    "name": "nodeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{ id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n\t{ id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n\t{\n\t\tid: 'c',\n\t\tx: 600,\n\t\ty: 200,\n\t\ticon: 'user',\n\t\tcircle: true,\n\t\tnodeWidth: circleSize,\n\t\tnodeHeight: circleSize\n\t},\n\t{ id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight }\n]"
                },
                {
                    "name": "nodeHeight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "nodeWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "200"
                },
                {
                    "name": "ProgrammaticStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "SimpleStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "stories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Diagrams', module)"
                }
            ],
            "projects/charts-angular/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: [\n    '../src/**/*.mdx',\n    '../src/**/*.stories.@(js|jsx|ts|tsx)',\n    // Storybook monorepo-specific issue\n\t\t// '../../../../charts/stories/getting-started/angular.stories.mdx',\n\t\t// '../../../../charts/stories/tutorials/*.stories.mdx'\n  ],\n  addons: [\n    {\n      name: '@storybook/addon-essentials',\n\t\t\toptions: {\n\t\t\t\tactions: false\n\t\t\t}\n    }\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {}\n  },\n  logLevel: 'error',\n  docs: {\n    autodocs: 'tag'\n  },\n  staticDirs: ['../../../../charts/.storybook/assets'],\n  features: {\n    storyStoreV7: false\n  },\n  webpackFinal: async (config, {\n    configType\n  }) => {\n    config?.module?.rules?.push({\n      test: /\\.css$/,\n      use: ['style-loader', 'css-loader'],\n      include: [`${corePackage}/demo`]\n    })\n    config.resolve!.alias = {\n      ...config.resolve!.alias,\n      '@carbon/charts': corePackage,\n      // '@storybook/blocks': dirname(require.resolve('@storybook/blocks/package.json'))\n    }\n    return config\n  }\n}"
                },
                {
                    "name": "core",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'../../../../charts'"
                },
                {
                    "name": "corePackage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "resolve(__dirname, `${core}/dist`)"
                }
            ],
            "projects/charts-angular/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/charts-angular/src/stories/all.stories.ts": [
                {
                    "name": "DEFAULT_THEME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ChartTheme.G100"
                },
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(componentSelector: string) => `\n\t<div class=\"container\">\n\t\t<div class=\"v10-banner\">\n\t\t\tThis version relies on <b>Carbon v11</b>. If you're using Carbon v10, <a href=\"https://carbon-charts-0x.netlify.app\" target=\"_blank\" rel=\"noreferrer\">see the legacy demo site</a>\n\t\t</div>\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"cds--tag cds--tag--green component-name\">${componentSelector}</span>\n\t\t</h3>\n\t\t<p class=\"props\">\n\t\t  <b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a>\n\t\t</p>\n\t\t<div class=\"marginTop-30\" id=\"chart-demo\">\n\t\t\t<${componentSelector} [data]=\"data\" [options]=\"options\"></${componentSelector}>\n\t\t</div>\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\t\t<p>Opens in a new tab. Please ensure pop-up blocker is not on.</p><br/>\n\t\t<a href=\"#\" (click)=\"openSandbox($event)\">\n\t\t\t<img\n\t\t\t\tsrc=\"https://developer.stackblitz.com/img/open_in_stackblitz.svg\"\n\t\t\t\tclassName=\"marginTop\"\n\t\t\t\talt=\"Edit on StackBlitz\"\n\t\t\t/>\n\t\t</a>\n\t</div>`"
                },
                {
                    "name": "introSection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Docs', module).add(\n\t'Welcome',\n\t() => ({\n\t\ttemplate: `\n\t\t<div class=\"container intro\">\n\t\t\t<div\n\t\t\tclass=\"welcome__container\"\n\t\t\tstyle=\"background: url(./welcome.png) no-repeat center center fixed; background-size: cover;\">\n\t\t\t\t<div class=\"welcome__content\">\n\t\t\t\t\t<h2 class=\"welcome__heading\">Carbon Charts</h2>\n\t\t\t\t\t<h4 class=\"welcome__heading welcome__heading--subtitle\">(Angular)</h4>\n\t\t\t\t\t<h5 class=\"welcome__heading welcome__heading--other\">Other versions</h5>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com\" class=\"welcome__heading welcome__heading--other\">Vanilla JavaScript</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/react\" class=\"welcome__heading welcome__heading--other\">React</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/vue\" class=\"welcome__heading welcome__heading--other\">Vue</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/svelte\" class=\"welcome__heading welcome__heading--other\">Svelte</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span class=\"netlify\">Deploys by <a href=\"https://netlify.com\" target=\"_blank\">Netlify</a></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`\n\t}),\n\t{\n\t\tcontrols: {\n\t\t\thideNoControlsWarning: true\n\t\t}\n\t}\n)"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(content: string) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${content}\n\t</div>\n`"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/utils.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(content: string) => `\n<div class=\"container theme--white\">\n  ${content}\n</div>\n`"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts": [
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 300, y: 0 }"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts": [
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 0 }"
                },
                {
                    "name": "linkTargetCurve",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 200 }"
                }
            ],
            "projects/charts-angular/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n\tparameters: {\n\t\tactions: { argTypesRegex: '^on[A-Z].*' },\n\t\tcontrols: {\n\t\t\tmatchers: {\n\t\t\t\tcolor: /(background|color)$/i,\n\t\t\t\tdate: /Date$/\n\t\t\t}\n\t\t},\n\t\tdocs: {\n\t\t\ttheme: themes.dark\n\t\t},\n\t\tbackgrounds: { // --cds-background\n\t\t\tdefault: 'g100',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tname: 'g100',\n\t\t\t\t\tvalue: '#161616'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'g90',\n\t\t\t\t\tvalue: '#262626'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'g10',\n\t\t\t\t\tvalue: '#f4f4f4'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'white',\n\t\t\t\t\tvalue: '#fff'\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}"
                }
            ],
            "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts": [
                {
                    "name": "template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 26,
        "status": "medium",
        "files": [
            {
                "filePath": "projects/charts-angular/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "core",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "corePackage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/alluvial-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlluvialChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/area-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedAreaChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/area-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AreaChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bar-chart-grouped.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupedBarChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bar-chart-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleBarChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bar-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedBarChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/base-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseChart",
                "coveragePercent": 66,
                "coverageCount": "8/12",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/boxplot-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoxplotChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bubble-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BubbleChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bullet-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BulletChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/circle-pack-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CirclePackChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/combo-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComboChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/donut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonutChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/gauge-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GaugeChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/heatmap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeatmapChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/histogram-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HistogramChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/lollipop-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LollipopChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/meter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MeterChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/pie-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PieChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/radar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadarChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/scatter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScatterChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/tree-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/treemap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreemapChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/wordcloud-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WordCloudChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "carbonPrefix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Edge",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Coordinates",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Marker",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowLeft",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowRight",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerDiamond",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerShapeNode",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerSquare",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerTee",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-column.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeColumn",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeLabel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-subtitle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeSubtitle",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeTitle",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNode",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/shape/shape-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShapeNode",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_THEME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "introSection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "circleSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeMapped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeHeight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgrammaticStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTargetCurve",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/example1/diagram-example1.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DiagramExample1",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}