{
    "pipes": [],
    "interfaces": [
        {
            "name": "Coordinates",
            "id": "interface-Coordinates-d03c6d9201f80e8a447dcccafcdf1497ed86cd3b1ec9d1304d4c965911d659a06257969b135cdb216cb4a05377cef3a72a233aa8dc0cc17fe0a8bd60f7de2395",
            "file": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\n\nimport { carbonPrefix } from '../config'\n\ninterface Coordinates {\n\tx: number\n\ty: number\n}\n@Component({\n\tselector: '[ibm-graph-edge]',\n\ttemplate: `\n\t\t<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__container'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t\t\t[ngStyle]=\"{ stroke: color }\"\n\t\t\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\" />\n\t\t</svg:g>\n\t`\n})\nexport class EdgeComponent {\n\t@Input() color = ''\n\t@Input() markerEnd = ''\n\t@Input() markerStart = ''\n\t@Input() source: Coordinates = { x: 0, y: 0 }\n\t@Input() target: Coordinates = { x: 0, y: 0 }\n\t@Input() variant?: 'dash-sm' | 'dash-md' | 'dash-lg' | 'dash-xl' | 'double' | 'tunnel'\n\t@Input() path = ''\n\n\tpathClasses = ''\n\tnamespace = `${carbonPrefix}--cc--edge`\n\tstraight = CarbonComponent.buildStraightPathString\n}\n",
            "properties": [
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlluvialChartComponent",
            "id": "component-AlluvialChartComponent-2ab6a89704ebab84ad4abd3d720c46e1fbe2b1621e2ec9f896ca2f1eb1af30d8a70aad44dfec9bce9f85df129dfdde1908b4f472c2a5b4c4c5c1ae2a43ec372c",
            "file": "projects/charts-angular/src/lib/charts/alluvial-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-alluvial-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Alluvial</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Alluvial` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { AlluvialChart, type AlluvialChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `Alluvial` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-alluvial-chart',\n\ttemplate: ``\n})\nexport class AlluvialChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new AlluvialChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as AlluvialChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "AreaChartComponent",
            "id": "component-AreaChartComponent-9f2f555df117a50adc2242990acc0992cdb731574acffbe51356526eb45d98e44d6d7fb5757f6fde2478ea909e05a8e2562796769fd97ba943eb8227aecfbaec",
            "file": "projects/charts-angular/src/lib/charts/area-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "<div #nChart class=\"ibm-chart-container\"></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>AreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `AreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { AreaChart, type AreaChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `AreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-area-chart',\n\ttemplate: ` <div #nChart class=\"ibm-chart-container\"></div> `\n})\nexport class AreaChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new AreaChart(this.chartRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as AreaChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BaseChart",
            "id": "component-BaseChart-b8f59de7d2ef4f96c8e4f01c5ce057d04d03bfc74c18854989a8959fb8216f33c5a4ed241d1e5e5e1a35bb0a3440976aa0c5104cd85a09c3b9441ffb66a99a51",
            "file": "projects/charts-angular/src/lib/charts/base-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-base-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": []
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n"
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BaseChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BaseChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild, OnInit, AfterViewInit, ElementRef } from '@angular/core'\nimport type { ChartTabularData } from '@carbon/charts'\n/**\n * Wrapper around `BaseChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-base-chart',\n\ttemplate: ``\n})\nexport class BaseChart implements AfterViewInit, OnInit {\n\t/**\n\t * Data passed to charts library for displaying\n\t */\n\t@Input() set data(newData) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst dataExistsAlready = !!this._data\n\n\t\tthis._data = newData\n\n\t\tif (dataExistsAlready) {\n\t\t\tthis.chart?.model.setData(newData)\n\t\t}\n\t}\n\n\tget data() {\n\t\treturn this._data\n\t}\n\n\t/**\n\t * Options passed to charts library\n\t */\n\t@Input() set options(newOptions) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst optionsExistAlready = !!this._options\n\n\t\tthis._options = newOptions\n\n\t\tif (optionsExistAlready) {\n\t\t\tthis.chart?.model.setOptions(newOptions)\n\t\t}\n\t}\n\n\tget options() {\n\t\treturn this._options\n\t}\n\n\t/**\n\t * Chart width\n\t */\n\t@Input() width?: string\n\n\t/**\n\t * Chart height\n\t */\n\t@Input() height?: string\n\n\t/**\n\t * Chart container element ref\n\t */\n\t@ViewChild('nChart') chartRef!: ElementRef<HTMLElement>\n\n\t/**\n\t * Chart object instance\n\t *\n\t * You can use this to do whatever you would normally do with a chart if you used\n\t * charts library directly.\n\t */\n\tchart: any\n\n\tprivate _data!: ChartTabularData\n\tprivate _options: any\n\n\tconstructor(protected elementRef: ElementRef) {\n\t\tconsole.log('Initialized elementRef')\n\t}\n\n\tngOnInit() {\n\t\t// Width prop is mandatory for the wrappers\n\t\tif (this.width) {\n\t\t\tthis.options.width = this.width\n\t\t}\n\n\t\t// Height prop is mandatory for the wrappers\n\t\tif (this.height) {\n\t\t\tthis.options.height = this.height\n\t\t}\n\t}\n\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tconsole.log('You need to implement your own `ngAfterViewInit()` function')\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 73,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newData",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "rawdescription": "\n\nData passed to charts library for displaying\n",
                        "description": "<p>Data passed to charts library for displaying</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newData",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "data",
                        "type": "",
                        "returnType": "",
                        "line": 27
                    }
                },
                "options": {
                    "name": "options",
                    "setSignature": {
                        "name": "options",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newOptions",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "rawdescription": "\n\nOptions passed to charts library\n",
                        "description": "<p>Options passed to charts library</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newOptions",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "options",
                        "type": "",
                        "returnType": "",
                        "line": 45
                    }
                }
            }
        },
        {
            "name": "BoxplotChartComponent",
            "id": "component-BoxplotChartComponent-53cedb273a76b88db2d1a618803b91c59e2588afe5c673e87ac931879cd757a1a28ed9eeda526932240bd6d2ee54583273c90f53b98ccde5d872a55a9a59c1c4",
            "file": "projects/charts-angular/src/lib/charts/boxplot-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-boxplot-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BoxplotChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BoxplotChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { BoxplotChart, type ChartTabularData, type BoxplotChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `BoxplotChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-boxplot-chart',\n\ttemplate: ``\n})\nexport class BoxplotChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new BoxplotChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BoxplotChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BubbleChartComponent",
            "id": "component-BubbleChartComponent-909f6add769756b5c21a30e9169fee2d1f71da4a095eb721dc22fc7a1646cf2c8f331a2507536fd874300d1618853863bb873fc84b99c2b847d467d2505af8aa",
            "file": "projects/charts-angular/src/lib/charts/bubble-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bubble-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { BubbleChart, type BubbleChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-bubble-chart',\n\ttemplate: ``\n})\nexport class BubbleChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new BubbleChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BubbleChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BulletChartComponent",
            "id": "component-BulletChartComponent-6d228b6c663b4d334379a830d79250ff34ddfe537e3efdc1c86cf5eed378c59f3508a7709ff39cb65b54e560be5e0a8e7a3be9e9d00426919b912eb7fc9c4e1d",
            "file": "projects/charts-angular/src/lib/charts/bullet-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bullet-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BulletChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BulletChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { BulletChart, type BulletChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `BulletChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-bullet-chart',\n\ttemplate: ``\n})\nexport class BulletChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new BulletChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BulletChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "CardNodeColumnComponent",
            "id": "component-CardNodeColumnComponent-b7d9cf5b073a41296c7315710b49d99d96027b452cd705fa0da262995b5a133580a2fba272d87840c9441cf6c0c0fd9ef5bbb1d297048d552fa3ef9733f9c534",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-column.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-column",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div>\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "farsideColumn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, HostBinding } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node-column',\n\ttemplate: `\n\t\t<xhtml:div>\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`\n})\nexport class CardNodeColumnComponent {\n\t@Input() farsideColumn = false\n\n\t@HostBinding('class') get class() {\n\t\tconst farsideClassName = this.farsideColumn\n\t\t\t? `${carbonPrefix}--cc--card-node__column--farside`\n\t\t\t: ''\n\n\t\treturn `${carbonPrefix}--cc--card-node__column ${farsideClassName}`\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "class": {
                    "name": "class",
                    "getSignature": {
                        "name": "class",
                        "type": "",
                        "returnType": "",
                        "line": 15
                    }
                }
            }
        },
        {
            "name": "CardNodeComponent",
            "id": "component-CardNodeComponent-c01126d81a18d1d6466abc95c53edb31d9bf06ae855ea54c27abf9286ded40d5e84c48140515c748cd993259a106b9a272d4819775129a782cfc0d0ec896acd4",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n\t<xhtml:div\n\t\t*ngSwitchCase=\"'div'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'border-color': color,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:div>\n\n\t<xhtml:button\n\t\t*ngSwitchCase=\"'button'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'border-color': color,\n\t\t\tposition: position\n\t\t}\"\n\t\t(click)=\"click.emit($event)\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:button>\n\n\t<xhtml:a\n\t\t*ngSwitchCase=\"'a'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[attr.href]=\"href\"\n\t\t[ngStyle]=\"{ 'border-color': color, position: position }\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:a>\n</ng-container>\n<ng-template #nodeTemplate>\n\t<ng-content></ng-content>\n</ng-template>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'static'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 86
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node',\n\ttemplate: `\n\t\t<ng-container [ngSwitch]=\"component\">\n\t\t\t<xhtml:div\n\t\t\t\t*ngSwitchCase=\"'div'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'border-color': color,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:div>\n\n\t\t\t<xhtml:button\n\t\t\t\t*ngSwitchCase=\"'button'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'border-color': color,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(click)=\"click.emit($event)\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:button>\n\n\t\t\t<xhtml:a\n\t\t\t\t*ngSwitchCase=\"'a'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[attr.href]=\"href\"\n\t\t\t\t[ngStyle]=\"{ 'border-color': color, position: position }\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:a>\n\t\t</ng-container>\n\t\t<ng-template #nodeTemplate>\n\t\t\t<ng-content></ng-content>\n\t\t</ng-template>\n\t`\n})\nexport class CardNodeComponent implements OnInit {\n\t@Input() as = 'div'\n\t@Input() href = ''\n\t@Input() color = ''\n\t@Input() stacked = false\n\t@Input() position: string = 'static'\n\n\t@Output() click: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOver: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOut: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseMove: EventEmitter<any> = new EventEmitter<any>()\n\n\tnamespace = `${carbonPrefix}--cc--card-node`\n\n\tcomponent = 'div'\n\n\tngOnInit() {\n\t\tif (this.href) {\n\t\t\tthis.component = 'a'\n\t\t} else {\n\t\t\tthis.component = this.as\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "CardNodeLabelComponent",
            "id": "component-CardNodeLabelComponent-38afb711b25a86914b210c292839dc1d83183c7dcb43b8d8294974f85eb3eda78df4a9edb542ed6189a4114d69c5c799482f859119f9319c588d287248f9d10c",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-label",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:label [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:label>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__label`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node-label',\n\ttemplate: `\n\t\t<xhtml:label [ngClass]=\"namespace\">\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:label>\n\t`\n})\nexport class CardNodeLabelComponent {\n\tnamespace = `${carbonPrefix}--cc--card-node__label`\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeSubtitleComponent",
            "id": "component-CardNodeSubtitleComponent-cabc340721089bf3e5e0f44198620df4ce50461989f0d60f12fbb5654fa45984273dffc7ab1e5a9aa59946b71294a92ef14f529a234962775d6e93a5899b905a",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-subtitle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-subtitle",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__subtitle`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node-subtitle',\n\ttemplate: `\n\t\t<xhtml:div [ngClass]=\"namespace\">\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`\n})\nexport class CardNodeSubtitleComponent {\n\tnamespace = `${carbonPrefix}--cc--card-node__subtitle`\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeTitleComponent",
            "id": "component-CardNodeTitleComponent-d4dfe89010be387e3c46aec51cf5e7bfc6b3a56e30a42a28d04a9014423e5eec600907b6d6ee570b100b06b7ae7a15a261d921e7076b342f8f2b662c2cb7ebce",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-title",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__title`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node-title',\n\ttemplate: `\n\t\t<xhtml:div [ngClass]=\"namespace\">\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`\n})\nexport class CardNodeTitleComponent {\n\tnamespace = `${carbonPrefix}--cc--card-node__title`\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CirclePackChartComponent",
            "id": "component-CirclePackChartComponent-cb01a6ef818e489cd1eb57a7006c8b9bd9aaae0103400abbd0b0ad293c5c8490a2ab5d11a69884e08b5187919407cb995fe23f51a79dab9702aa14aed9f6f2be",
            "file": "projects/charts-angular/src/lib/charts/circle-pack-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-circle-pack-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { CirclePackChart, type CirclePackChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-circle-pack-chart',\n\ttemplate: ``\n})\nexport class CirclePackChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new CirclePackChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as CirclePackChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ComboChartComponent",
            "id": "component-ComboChartComponent-e90746ea2988f69ede59b86f3cba0b4693a23de53b83baac9a2c4af982a57e4424dbb6e5eb058281b0c187b2d1362c4e44a30562365a6892f0db394ddca1cd9d",
            "file": "projects/charts-angular/src/lib/charts/combo-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-combo-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ComboChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ComboChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\nimport { ComboChart, type ComboChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `ComboChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-combo-chart',\n\ttemplate: ``\n})\nexport class ComboChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new ComboChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as ComboChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "DiagramExample1",
            "id": "component-DiagramExample1-38cee627607d0f3ea5da8e4b791acac987af0a8af37e737821ed38bb1043bf7385a0ff3645442f8d142092a3446b7521b09a7588ced07c13b739049d3443207a",
            "file": "projects/charts-angular/src/stories/diagrams/example1/diagram-example1.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "diagram-example1",
            "styleUrls": [],
            "styles": [
                "@import '@carbon/charts/demo/styles.css';"
            ],
            "templateUrl": [
                "./diagram-example1.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "circleSize",
                    "defaultValue": "64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "markerEnd",
                    "defaultValue": "'marker'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "nodeHeight",
                    "defaultValue": "64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "nodeWidth",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "source",
                    "defaultValue": "{ x: 0, y: 48 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "target",
                    "defaultValue": "{ x: 396, y: 48 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { UserModule, WikisModule } from '@carbon/icons-angular'\nimport { CardNodeModule, EdgeModule, MarkerModule, ShapeNodeModule  } from '../../../public-api'\n\n@Component({\n\tselector: 'diagram-example1',\n  standalone: true,\n\ttemplateUrl: './diagram-example1.component.html',\n  styles: [`@import '@carbon/charts/demo/styles.css';`],\n  imports: [ CardNodeModule, EdgeModule, MarkerModule, ShapeNodeModule, UserModule, WikisModule ]\n})\nexport class DiagramExample1 {\n  source = { x: 0, y: 48 }\n  target = { x: 396, y: 48 }\n  markerEnd = 'marker'\n  nodeHeight = 64\n  nodeWidth = 200\n  circleSize = 64\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "@import '@carbon/charts/demo/styles.css';\n",
            "templateData": "<div class=\"demo-desktop-only\">\n  <div class=\"cp-message\">This is a desktop-only example</div>\n  <svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n    <svg:defs>\n      <svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n    </svg:defs>\n\n    <svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\"></svg:g>\n\n    <svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\"\n      [attr.transform]=\"'translate(0, 16)'\">\n      <xhtml:div>\n        <ibm-diagram-card-node as=\"button\">\n          <ibm-diagram-card-node-column>\n            <svg ibmIconUser size=\"20\"></svg>\n          </ibm-diagram-card-node-column>\n          <ibm-diagram-card-node-column>\n            <ibm-diagram-card-node-title>\n              Title\n            </ibm-diagram-card-node-title>\n            <ibm-diagram-card-node-subtitle>\n              Description\n            </ibm-diagram-card-node-subtitle>\n          </ibm-diagram-card-node-column>\n        </ibm-diagram-card-node>\n      </xhtml:div>\n    </svg:foreignObject>\n\n    <svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\"\n      [attr.transform]=\"'translate(400, 16)'\">\n      <xhtml:div>\n        <ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\"\n          [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n      </xhtml:div>\n    </svg:foreignObject>\n  </svg>\n\n  <ng-template #wikiTemplate>\n    <svg ibmIconWikis size=\"20\"></svg>\n  </ng-template>\n</div>"
        },
        {
            "name": "DonutChartComponent",
            "id": "component-DonutChartComponent-18313752838353d65a9f0da5515e1468b718d9243680cbc50b5c9d189ea409b3011bb563bedf03c4b29efbd736f19487257dff57bcb1d025b67670ef1278f5b3",
            "file": "projects/charts-angular/src/lib/charts/donut-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-donut-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>DonutChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `DonutChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { DonutChart, type DonutChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `DonutChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-donut-chart',\n\ttemplate: ``\n})\nexport class DonutChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new DonutChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as DonutChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "EdgeComponent",
            "id": "component-EdgeComponent-d03c6d9201f80e8a447dcccafcdf1497ed86cd3b1ec9d1304d4c965911d659a06257969b135cdb216cb4a05377cef3a72a233aa8dc0cc17fe0a8bd60f7de2395",
            "file": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-edge]",
            "styleUrls": [],
            "styles": [],
            "template": "<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__container'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t[ngStyle]=\"{ stroke: color }\"\n\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\" />\n</svg:g>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerEnd",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerStart",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "path",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "source",
                    "defaultValue": "{ x: 0, y: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "target",
                    "defaultValue": "{ x: 0, y: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"dash-sm\" | \"dash-md\" | \"dash-lg\" | \"dash-xl\" | \"double\" | \"tunnel\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--edge`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "pathClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "straight",
                    "defaultValue": "CarbonComponent.buildStraightPathString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\n\nimport { carbonPrefix } from '../config'\n\ninterface Coordinates {\n\tx: number\n\ty: number\n}\n@Component({\n\tselector: '[ibm-graph-edge]',\n\ttemplate: `\n\t\t<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__container'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t\t\t[ngStyle]=\"{ stroke: color }\"\n\t\t\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\" />\n\t\t</svg:g>\n\t`\n})\nexport class EdgeComponent {\n\t@Input() color = ''\n\t@Input() markerEnd = ''\n\t@Input() markerStart = ''\n\t@Input() source: Coordinates = { x: 0, y: 0 }\n\t@Input() target: Coordinates = { x: 0, y: 0 }\n\t@Input() variant?: 'dash-sm' | 'dash-md' | 'dash-lg' | 'dash-xl' | 'double' | 'tunnel'\n\t@Input() path = ''\n\n\tpathClasses = ''\n\tnamespace = `${carbonPrefix}--cc--edge`\n\tstraight = CarbonComponent.buildStraightPathString\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "GaugeChartComponent",
            "id": "component-GaugeChartComponent-782c35564d172f73843d03b108bd7fddc1dac7fc4bf54f0f51a35cf8f6d231eff41cddb4ba1367776454846c9225a3ab394d8beb1d34b37372f7552c072a64e9",
            "file": "projects/charts-angular/src/lib/charts/gauge-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-gauge-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GaugeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GaugeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { GaugeChart, type GaugeChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `GaugeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-gauge-chart',\n\ttemplate: ``\n})\nexport class GaugeChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new GaugeChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as GaugeChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "GroupedBarChartComponent",
            "id": "component-GroupedBarChartComponent-d0cee64ad60701ed935eb268f05bac1fa8b1b941ca7fee15aff49dbd550820ec3e858c83e00550b49ee40dd0fac187460c49d5d4b83b8a2c7305d348834e7c69",
            "file": "projects/charts-angular/src/lib/charts/bar-chart-grouped.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-grouped-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GroupedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GroupedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { GroupedBarChart, type ChartTabularData, type BarChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `GroupedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-grouped-bar-chart',\n\ttemplate: ``\n})\nexport class GroupedBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new GroupedBarChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HeatmapChartComponent",
            "id": "component-HeatmapChartComponent-1a81dd56e29217bb897fc345b0cec9cc74de23b8f621cba760435f0a3ff153acb03a29f4e9542def6b2dcf66b0a974442a811dac09e58e5a1c2117ed26b86084",
            "file": "projects/charts-angular/src/lib/charts/heatmap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-heatmap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Heatmap</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Heatmap` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { HeatmapChart, type HeatmapChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `Heatmap` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-heatmap-chart',\n\ttemplate: ``\n})\nexport class HeatmapChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new HeatmapChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as HeatmapChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HistogramChartComponent",
            "id": "component-HistogramChartComponent-f4fc6a33d180a7b972bc92b34f1f3a1bccc91248c9f0417dc64af6e99ea0af22a133af03e5055ba49ad709b8510576ad3af3df01a3e015cf21132f900251e77d",
            "file": "projects/charts-angular/src/lib/charts/histogram-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-histogram-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>HistogramChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `HistogramChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { HistogramChart, type HistogramChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `HistogramChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-histogram-chart',\n\ttemplate: ``\n})\nexport class HistogramChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new HistogramChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as HistogramChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LineChartComponent",
            "id": "component-LineChartComponent-ad7d5805a1e8caf6adcccb14be3823a1f349727024d1120561a854d8aed9c29a71673befb06399319281d778ec895f35adb8b3c64208155d7dfedf8006d0c5bf",
            "file": "projects/charts-angular/src/lib/charts/line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-line-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LineChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LineChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { LineChart, type LineChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `LineChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-line-chart',\n\ttemplate: ``\n})\nexport class LineChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new LineChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as LineChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LollipopChartComponent",
            "id": "component-LollipopChartComponent-6a2a741587b8da11822f26160a60e39f370908d8dec269cfe6270a6ef04ae39e1143f08d77418be02c56c46f3dc7bdd9a7fd8d015cacc90357ffa660c278b07c",
            "file": "projects/charts-angular/src/lib/charts/lollipop-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-lollipop-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LollipopChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LollipopChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { LollipopChart, type LollipopChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `LollipopChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-lollipop-chart',\n\ttemplate: ``\n})\nexport class LollipopChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new LollipopChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as LollipopChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "MarkerArrowLeftComponent",
            "id": "component-MarkerArrowLeftComponent-4a2619781f6c5b34d418c44040a15128303884fc0d5275b5d56678b855f90387d9ee27b4e162deb9b69544dbca99ad30f356d9c2c2740db40d6be628ce7084a2",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-left]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerArrowRightComponent",
            "id": "component-MarkerArrowRightComponent-4a2619781f6c5b34d418c44040a15128303884fc0d5275b5d56678b855f90387d9ee27b4e162deb9b69544dbca99ad30f356d9c2c2740db40d6be628ce7084a2",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-right]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerComponent",
            "id": "component-MarkerComponent-4a2619781f6c5b34d418c44040a15128303884fc0d5275b5d56678b855f90387d9ee27b4e162deb9b69544dbca99ad30f356d9c2c2740db40d6be628ce7084a2",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MarkerDiamondComponent",
            "id": "component-MarkerDiamondComponent-4a2619781f6c5b34d418c44040a15128303884fc0d5275b5d56678b855f90387d9ee27b4e162deb9b69544dbca99ad30f356d9c2c2740db40d6be628ce7084a2",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-diamond]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerShapeNodeComponent",
            "id": "component-MarkerShapeNodeComponent-4a2619781f6c5b34d418c44040a15128303884fc0d5275b5d56678b855f90387d9ee27b4e162deb9b69544dbca99ad30f356d9c2c2740db40d6be628ce7084a2",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-circle]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerSquareComponent",
            "id": "component-MarkerSquareComponent-4a2619781f6c5b34d418c44040a15128303884fc0d5275b5d56678b855f90387d9ee27b4e162deb9b69544dbca99ad30f356d9c2c2740db40d6be628ce7084a2",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-square]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerTeeComponent",
            "id": "component-MarkerTeeComponent-4a2619781f6c5b34d418c44040a15128303884fc0d5275b5d56678b855f90387d9ee27b4e162deb9b69544dbca99ad30f356d9c2c2740db40d6be628ce7084a2",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-tee]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class MarkerComponent {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MeterChartComponent",
            "id": "component-MeterChartComponent-9f6ff47ba83c7e864ef479046b00fbfc0e8df1bfdce6ae8d6b21bebfa84e7f169726de382c81dd9b3895a115531133c5f73ae91b6241a6616697ba5a81ba59c7",
            "file": "projects/charts-angular/src/lib/charts/meter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-meter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>MeterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `MeterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\nimport { MeterChart, type MeterChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `MeterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-meter-chart',\n\ttemplate: ``\n})\nexport class MeterChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new MeterChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as MeterChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "PieChartComponent",
            "id": "component-PieChartComponent-956d950b699cebb577e5165571fa0d338f43203e856655fa0ecbd9b1c473c82f86349c848dfa9e3c51a5bc671d9d0c548965f70f800b876bbc0817eb73114aa5",
            "file": "projects/charts-angular/src/lib/charts/pie-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-pie-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>PieChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `PieChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { PieChart, type PieChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `PieChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-pie-chart',\n\ttemplate: ``\n})\nexport class PieChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new PieChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as PieChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "RadarChartComponent",
            "id": "component-RadarChartComponent-0c43107fdd3632906ffcab13cfe76b9f1df09f85f8a956de5a73935888a735205b149d7ecf65e2826aff8bc2017a8ef6b1b45a630fb16a59866d219d8d4e70ff",
            "file": "projects/charts-angular/src/lib/charts/radar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-radar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>RadarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `RadarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { RadarChart, type RadarChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `RadarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-radar-chart',\n\ttemplate: ``\n})\nexport class RadarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new RadarChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as RadarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ScatterChartComponent",
            "id": "component-ScatterChartComponent-c67d69b173e7128b6962d99b6f523964205dba677cde1b689dc4496b99478e68ba8b96ae86a875bd479d0881b409d78f7daa593d8bf494de724ec196069f47b0",
            "file": "projects/charts-angular/src/lib/charts/scatter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-scatter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ScatterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ScatterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { ScatterChart, type ScatterChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `ScatterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-scatter-chart',\n\ttemplate: ``\n})\nexport class ScatterChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new ScatterChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as ScatterChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ShapeNodeComponent",
            "id": "component-ShapeNodeComponent-5207d6fd365ec9f0b4b83707011b2372de727d0620f6b0cef2884de42c1645af2cc827ae79caa47633befaaab0d213c619a85f4421a978c7d860442b66af5695",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/shape/shape-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-shape-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n\t<xhtml:div\n\t\t*ngSwitchCase=\"'div'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:div>\n\n\t<xhtml:button\n\t\t*ngSwitchCase=\"'button'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(click)=\"click.emit($event)\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:button>\n\n\t<xhtml:a\n\t\t*ngSwitchCase=\"'a'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[attr.href]=\"href\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:a>\n</ng-container>\n\n<ng-template #nodeTemplate>\n\t<div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n\t\t<ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n\t</div>\n\t<div attr.class=\"{{ namespace + '__body' }}\" [ngStyle]=\"{ position: bodyPosition }\">\n\t\t<div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n\t\t<div attr.class=\"{{ namespace + '__subtitle' }}\">\n\t\t\t{{ subtitle }}\n\t\t</div>\n\t</div>\n</ng-template>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bodyPosition",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'fixed'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "renderIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "'circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "\"circle\" | \"square\" | \"rounded-square\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "48",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 105,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--shape-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 110
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, TemplateRef, OnInit } from '@angular/core'\n\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-shape-node',\n\ttemplate: `\n\t\t<ng-container [ngSwitch]=\"component\">\n\t\t\t<xhtml:div\n\t\t\t\t*ngSwitchCase=\"'div'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:div>\n\n\t\t\t<xhtml:button\n\t\t\t\t*ngSwitchCase=\"'button'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(click)=\"click.emit($event)\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:button>\n\n\t\t\t<xhtml:a\n\t\t\t\t*ngSwitchCase=\"'a'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[attr.href]=\"href\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:a>\n\t\t</ng-container>\n\n\t\t<ng-template #nodeTemplate>\n\t\t\t<div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n\t\t\t</div>\n\t\t\t<div attr.class=\"{{ namespace + '__body' }}\" [ngStyle]=\"{ position: bodyPosition }\">\n\t\t\t\t<div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n\t\t\t\t<div attr.class=\"{{ namespace + '__subtitle' }}\">\n\t\t\t\t\t{{ subtitle }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`\n})\nexport class ShapeNodeComponent implements OnInit {\n\t@Input() as = 'div'\n\t@Input() href = ''\n\t@Input() renderIcon?: TemplateRef<any>\n\t@Input() size = 48\n\t@Input() stacked = false\n\t@Input() shape: 'circle' | 'square' | 'rounded-square' = 'circle'\n\t@Input() subtitle = ''\n\t@Input() title = ''\n\t@Input() position: string = 'fixed'\n\t@Input() bodyPosition: string = 'absolute'\n\n\t@Output() click: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOver: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOut: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseMove: EventEmitter<any> = new EventEmitter<any>()\n\n\tnamespace = `${carbonPrefix}--cc--shape-node`\n\tcomponent = 'div'\n\n\tngOnInit() {\n\t\tif (this.href) {\n\t\t\tthis.component = 'a'\n\t\t} else {\n\t\t\tthis.component = this.as\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SimpleBarChartComponent",
            "id": "component-SimpleBarChartComponent-53e13c8364e06acde855fa5691bbd75fc6789120fa658bea33f30f08c62ec9db5c1442ae7a05666c12649ac866253ab5619e7da7730862de7f16e72ab4d131b4",
            "file": "projects/charts-angular/src/lib/charts/bar-chart-simple.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-simple-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>SimpleBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `SimpleBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { SimpleBarChart, type ChartTabularData, type BarChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `SimpleBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-simple-bar-chart',\n\ttemplate: ``\n})\nexport class SimpleBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new SimpleBarChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedAreaChartComponent",
            "id": "component-StackedAreaChartComponent-54e8f21992b00c4363ac798460a24a9dec838763c07014121abfd3ec08715f3a99e32114cb543cd163d7f71128190f48d797f399f827f1d6d015e9c769e93638",
            "file": "projects/charts-angular/src/lib/charts/area-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedAreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedAreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport {\n\tStackedAreaChart,\n\ttype StackedAreaChartOptions,\n\ttype ChartTabularData\n} from '@carbon/charts'\n\n/**\n * Wrapper around `StackedAreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-stacked-area-chart',\n\ttemplate: ``\n})\nexport class StackedAreaChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new StackedAreaChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as StackedAreaChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedBarChartComponent",
            "id": "component-StackedBarChartComponent-a4b6a4b93b6aecb4a3575a91dbe21984b26734025317b20184dbb2248aaea708b913e5a7f5358633145757af42330680beb2116ff97219e708c72d295dbf56fe",
            "file": "projects/charts-angular/src/lib/charts/bar-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { StackedBarChart, type ChartTabularData, type StackedBarChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `StackedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-stacked-bar-chart',\n\ttemplate: ``\n})\nexport class StackedBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new StackedBarChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as StackedBarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreeChartComponent",
            "id": "component-TreeChartComponent-d479b8c45320e4351f2eae530689e5313a1a05f643aa9d534de492155eb9123ef990ef6b313df7352edba30b65cf29e35807c0db9ce904597245a1aaf792cda1",
            "file": "projects/charts-angular/src/lib/charts/tree-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-tree-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { TreeChart, type TreemapChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `TreeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-tree-chart',\n\ttemplate: ``\n})\nexport class TreeChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new TreeChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as TreemapChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreemapChartComponent",
            "id": "component-TreemapChartComponent-811b17efbcd534e220e285b9b2bee5151d7a2394aed14f6808a2c481671f145002bfd42819d4e3c050dcabaa7bf43e15239a853a86ae6edb701fde75f8ea5db8",
            "file": "projects/charts-angular/src/lib/charts/treemap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-treemap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreemapChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreemapChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { TreemapChart, type TreemapChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `TreemapChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-treemap-chart',\n\ttemplate: ``\n})\nexport class TreemapChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new TreemapChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as TreemapChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "WordCloudChartComponent",
            "id": "component-WordCloudChartComponent-5c1a079c4e63d3f3f0291deb31e7d762cdef1fba879b5f1ca84d62553fb7c736bce5b5bfba73ffb3516667c5260e34f948547e7f166731bf645f5fe242d7fa2c",
            "file": "projects/charts-angular/src/lib/charts/wordcloud-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-wordcloud-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>WordCloudChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `WordCloudChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { WordCloudChart, type WorldCloudChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `WordCloudChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-wordcloud-chart',\n\ttemplate: ``\n})\nexport class WordCloudChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new WordCloudChart(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as WorldCloudChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "CardNodeModule",
            "id": "module-CardNodeModule-b64f101ae3692b6b5e0193f97a6f1a28577961ac288fcde2e8231508d2859a8f14a85ac72c1a9613c8950f91cfc654514679089fa8c67425c5219ab1972c4a78",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { CardNodeComponent } from './card-node.component'\nimport { CardNodeColumnComponent } from './card-node-column.component'\nimport { CardNodeLabelComponent } from './card-node-label.component'\nimport { CardNodeSubtitleComponent } from './card-node-subtitle.component'\nimport { CardNodeTitleComponent } from './card-node-title.component'\nexport {\n\tCardNodeComponent,\n\tCardNodeColumnComponent,\n\tCardNodeLabelComponent,\n\tCardNodeSubtitleComponent,\n\tCardNodeTitleComponent\n}\n@NgModule({\n\tdeclarations: [\n\t\tCardNodeComponent,\n\t\tCardNodeColumnComponent,\n\t\tCardNodeLabelComponent,\n\t\tCardNodeSubtitleComponent,\n\t\tCardNodeTitleComponent\n\t],\n\texports: [\n\t\tCardNodeComponent,\n\t\tCardNodeColumnComponent,\n\t\tCardNodeLabelComponent,\n\t\tCardNodeSubtitleComponent,\n\t\tCardNodeTitleComponent\n\t],\n\timports: [CommonModule]\n})\nexport class CardNodeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardNodeColumnComponent"
                        },
                        {
                            "name": "CardNodeComponent"
                        },
                        {
                            "name": "CardNodeLabelComponent"
                        },
                        {
                            "name": "CardNodeSubtitleComponent"
                        },
                        {
                            "name": "CardNodeTitleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardNodeColumnComponent"
                        },
                        {
                            "name": "CardNodeComponent"
                        },
                        {
                            "name": "CardNodeLabelComponent"
                        },
                        {
                            "name": "CardNodeSubtitleComponent"
                        },
                        {
                            "name": "CardNodeTitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartsModule",
            "id": "module-ChartsModule-d6fb5fd85fd27d9e1efead37ec70ac04160b3bd95a1bd69df5b89f32c829c234d4de799222d4e9f6ef68abd7dab53195832f4db3200a82f64a5b3ef03d94d9c9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/charts/charts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport {\n\tAlluvialChartComponent,\n\tAreaChartComponent,\n\tBaseChart,\n\tBoxplotChartComponent,\n\tBubbleChartComponent,\n\tBulletChartComponent,\n\tCirclePackChartComponent,\n\tComboChartComponent,\n\tDonutChartComponent,\n\tGaugeChartComponent,\n\tGroupedBarChartComponent,\n\tHeatmapChartComponent,\n\tHistogramChartComponent,\n\tLineChartComponent,\n\tLollipopChartComponent,\n\tMeterChartComponent,\n\tPieChartComponent,\n\tRadarChartComponent,\n\tScatterChartComponent,\n\tSimpleBarChartComponent,\n\tStackedAreaChartComponent,\n\tStackedBarChartComponent,\n\tTreeChartComponent,\n\tTreemapChartComponent,\n\tWordCloudChartComponent\n} from './index'\n\n@NgModule({\n\timports: [CommonModule],\n\tdeclarations: [\n\t\tBaseChart,\n\t\tAlluvialChartComponent,\n\t\tAreaChartComponent,\n\t\tStackedAreaChartComponent,\n\t\tSimpleBarChartComponent,\n\t\tGroupedBarChartComponent,\n\t\tStackedBarChartComponent,\n\t\tBoxplotChartComponent,\n\t\tBubbleChartComponent,\n\t\tBulletChartComponent,\n\t\tDonutChartComponent,\n\t\tGaugeChartComponent,\n\t\tHeatmapChartComponent,\n\t\tHistogramChartComponent,\n\t\tLineChartComponent,\n\t\tLollipopChartComponent,\n\t\tPieChartComponent,\n\t\tScatterChartComponent,\n\t\tMeterChartComponent,\n\t\tRadarChartComponent,\n\t\tComboChartComponent,\n\t\tTreeChartComponent,\n\t\tTreemapChartComponent,\n\t\tCirclePackChartComponent,\n\t\tWordCloudChartComponent\n\t],\n\texports: [\n\t\tBaseChart,\n\t\tAlluvialChartComponent,\n\t\tAreaChartComponent,\n\t\tStackedAreaChartComponent,\n\t\tSimpleBarChartComponent,\n\t\tGroupedBarChartComponent,\n\t\tStackedBarChartComponent,\n\t\tBoxplotChartComponent,\n\t\tBubbleChartComponent,\n\t\tBulletChartComponent,\n\t\tDonutChartComponent,\n\t\tGaugeChartComponent,\n\t\tHeatmapChartComponent,\n\t\tHistogramChartComponent,\n\t\tLineChartComponent,\n\t\tLollipopChartComponent,\n\t\tPieChartComponent,\n\t\tScatterChartComponent,\n\t\tMeterChartComponent,\n\t\tRadarChartComponent,\n\t\tComboChartComponent,\n\t\tTreeChartComponent,\n\t\tTreemapChartComponent,\n\t\tCirclePackChartComponent,\n\t\tWordCloudChartComponent\n\t]\n})\nexport class ChartsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlluvialChartComponent"
                        },
                        {
                            "name": "AreaChartComponent"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChartComponent"
                        },
                        {
                            "name": "BubbleChartComponent"
                        },
                        {
                            "name": "BulletChartComponent"
                        },
                        {
                            "name": "CirclePackChartComponent"
                        },
                        {
                            "name": "ComboChartComponent"
                        },
                        {
                            "name": "DonutChartComponent"
                        },
                        {
                            "name": "GaugeChartComponent"
                        },
                        {
                            "name": "GroupedBarChartComponent"
                        },
                        {
                            "name": "HeatmapChartComponent"
                        },
                        {
                            "name": "HistogramChartComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        },
                        {
                            "name": "LollipopChartComponent"
                        },
                        {
                            "name": "MeterChartComponent"
                        },
                        {
                            "name": "PieChartComponent"
                        },
                        {
                            "name": "RadarChartComponent"
                        },
                        {
                            "name": "ScatterChartComponent"
                        },
                        {
                            "name": "SimpleBarChartComponent"
                        },
                        {
                            "name": "StackedAreaChartComponent"
                        },
                        {
                            "name": "StackedBarChartComponent"
                        },
                        {
                            "name": "TreeChartComponent"
                        },
                        {
                            "name": "TreemapChartComponent"
                        },
                        {
                            "name": "WordCloudChartComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AlluvialChartComponent"
                        },
                        {
                            "name": "AreaChartComponent"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChartComponent"
                        },
                        {
                            "name": "BubbleChartComponent"
                        },
                        {
                            "name": "BulletChartComponent"
                        },
                        {
                            "name": "CirclePackChartComponent"
                        },
                        {
                            "name": "ComboChartComponent"
                        },
                        {
                            "name": "DonutChartComponent"
                        },
                        {
                            "name": "GaugeChartComponent"
                        },
                        {
                            "name": "GroupedBarChartComponent"
                        },
                        {
                            "name": "HeatmapChartComponent"
                        },
                        {
                            "name": "HistogramChartComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        },
                        {
                            "name": "LollipopChartComponent"
                        },
                        {
                            "name": "MeterChartComponent"
                        },
                        {
                            "name": "PieChartComponent"
                        },
                        {
                            "name": "RadarChartComponent"
                        },
                        {
                            "name": "ScatterChartComponent"
                        },
                        {
                            "name": "SimpleBarChartComponent"
                        },
                        {
                            "name": "StackedAreaChartComponent"
                        },
                        {
                            "name": "StackedBarChartComponent"
                        },
                        {
                            "name": "TreeChartComponent"
                        },
                        {
                            "name": "TreemapChartComponent"
                        },
                        {
                            "name": "WordCloudChartComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EdgeModule",
            "id": "module-EdgeModule-dca7786602f7d3e61158fb76f5fa8ec4d2772c6709803183801d5b88218fc83dcabc9a47187792a5932af9f836f1af7a61e01e82c4ff6cb03232d7e1ce8eb8bb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/edges/edge.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { EdgeComponent } from './edge.component'\nexport { EdgeComponent } from './edge.component'\n\n@NgModule({\n\tdeclarations: [EdgeComponent],\n\texports: [EdgeComponent],\n\timports: [CommonModule]\n})\nexport class EdgeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EdgeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "EdgeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MarkerModule",
            "id": "module-MarkerModule-c901b9784995fda13a1ada7a4a22abc35305f33bee214783648d33c6bc4befb37303c62cadc50e6e8f75c6962b6645a73dba81de8609740dfc9359ab0acedcb4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport {\n\tMarkerComponent,\n\tMarkerArrowLeftComponent,\n\tMarkerArrowRightComponent,\n\tMarkerShapeNodeComponent,\n\tMarkerDiamondComponent,\n\tMarkerSquareComponent,\n\tMarkerTeeComponent\n} from './marker.component'\n\nexport {\n\tMarkerComponent,\n\tMarkerArrowLeftComponent,\n\tMarkerArrowRightComponent,\n\tMarkerShapeNodeComponent,\n\tMarkerDiamondComponent,\n\tMarkerSquareComponent,\n\tMarkerTeeComponent\n}\n@NgModule({\n\tdeclarations: [\n\t\tMarkerComponent,\n\t\tMarkerArrowLeftComponent,\n\t\tMarkerArrowRightComponent,\n\t\tMarkerShapeNodeComponent,\n\t\tMarkerDiamondComponent,\n\t\tMarkerSquareComponent,\n\t\tMarkerTeeComponent\n\t],\n\texports: [\n\t\tMarkerComponent,\n\t\tMarkerArrowLeftComponent,\n\t\tMarkerArrowRightComponent,\n\t\tMarkerShapeNodeComponent,\n\t\tMarkerDiamondComponent,\n\t\tMarkerSquareComponent,\n\t\tMarkerTeeComponent\n\t],\n\timports: [CommonModule]\n})\nexport class MarkerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MarkerArrowLeftComponent"
                        },
                        {
                            "name": "MarkerArrowRightComponent"
                        },
                        {
                            "name": "MarkerComponent"
                        },
                        {
                            "name": "MarkerDiamondComponent"
                        },
                        {
                            "name": "MarkerShapeNodeComponent"
                        },
                        {
                            "name": "MarkerSquareComponent"
                        },
                        {
                            "name": "MarkerTeeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MarkerArrowLeftComponent"
                        },
                        {
                            "name": "MarkerArrowRightComponent"
                        },
                        {
                            "name": "MarkerComponent"
                        },
                        {
                            "name": "MarkerDiamondComponent"
                        },
                        {
                            "name": "MarkerShapeNodeComponent"
                        },
                        {
                            "name": "MarkerSquareComponent"
                        },
                        {
                            "name": "MarkerTeeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShapeNodeModule",
            "id": "module-ShapeNodeModule-b11b6b09186243a8c614f31f618dd4b35b47fbdbee0e024a3160dd29b37da4b94bb487f1fb44e0e8e450041d7b3ee6057c57a501e4449402a3a7c823786fbddc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/nodes/shape/shape-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ShapeNodeComponent } from './shape-node.component'\nexport { ShapeNodeComponent } from './shape-node.component'\n\n@NgModule({\n\tdeclarations: [ShapeNodeComponent],\n\texports: [ShapeNodeComponent],\n\timports: [CommonModule]\n})\nexport class ShapeNodeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShapeNodeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShapeNodeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "carbonPrefix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/lib/diagrams/config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'cds'"
            },
            {
                "name": "circleSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "edgeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{ source: 'a', target: 'b', variant: 'dash-md' },\n\t{\n\t\tsource: 'c',\n\t\ttarget: 'b',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target)\n\t},\n\t{\n\t\tsource: 'd',\n\t\ttarget: 'c',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target),\n\t\tvariant: 'tunnel'\n\t}\n]"
            },
            {
                "name": "edgeMapped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "edgeData.map((link) => {\n\tconst sourceNode = nodeData.find((node) => node.id === link.source)\n\tconst targetNode = nodeData.find((node) => node.id === link.target)\n\n\treturn {\n\t\t...link,\n\t\tsource: {\n\t\t\tx: sourceNode!.x + sourceNode!.nodeWidth / 2,\n\t\t\ty: sourceNode!.y + sourceNode!.nodeHeight / 2\n\t\t},\n\t\ttarget: {\n\t\t\tx: targetNode!.x + targetNode!.nodeWidth / 2,\n\t\t\ty: targetNode!.y + targetNode!.nodeHeight / 2\n\t\t}\n\t}\n})"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(demo: Demo) => `\n\t<div class=\"container theme--white\">\n\t\t<div class=\"v10-banner\">\n\t\t\tThis version relies on <b>Carbon v11</b>. If you're using Carbon v10, <a href=\"https://carbon-charts-0x.netlify.app\" target=\"_blank\" rel=\"noreferrer\">see the legacy demo site</a>\n\t\t</div>\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"cds--tag cds--tag--green component-name\">${demo.chartType.angular}</span>\n\t\t</h3>\n\t\t<p class=\"props\">\n\t\t  <b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a>\n\t\t</p>\n\t\t<div class=\"marginTop-30\" id=\"chart-demo\">\n\t\t\t<${demo.chartType.angular}\n\t\t\t\tclass=\"n-chart\"\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[options]=\"options\"\n\t\t\t\t#${demo.chartType.vanilla}>\n\t\t\t</${demo.chartType.angular}>\n\t\t</div>\n\n\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\t\t<a href=\"${demo.codesandbox.angular}\" target=\"_blank\">\n\t\t\t<img\n\t\t\t\tsrc=\"https://codesandbox.io/static/img/play-codesandbox.svg\"\n\t\t\t\talt=\"Edit on CodeSandbox\"\n\t\t\t\tclass=\"marginTop\"\n\t\t\t/>\n\t\t</a>\n\t</div>`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(content: string) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${content}\n\t</div>\n`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(content: string) => `\n<div class=\"container theme--white\">\n  ${content}\n</div>\n`"
            },
            {
                "name": "introSection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Docs', module).add(\n\t'Welcome',\n\t(args: Args) => ({\n\t\ttemplate: `\n\t\t<div class=\"container intro\">\n\t\t\t<div\n\t\t\tclass=\"welcome__container\"\n\t\t\tstyle=\"background: url(./welcome.png) no-repeat center center fixed; background-size: cover;\">\n\t\t\t\t<div class=\"welcome__content\">\n\t\t\t\t\t<h2 class=\"welcome__heading\">Carbon Charts</h2>\n\t\t\t\t\t<h4 class=\"welcome__heading welcome__heading--subtitle\">(Angular)</h4>\n\t\t\t\t\t<h5 class=\"welcome__heading welcome__heading--other\">Other versions</h5>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com\" class=\"welcome__heading welcome__heading--other\">Vanilla JavaScript</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/react\" class=\"welcome__heading welcome__heading--other\">React</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/vue\" class=\"welcome__heading welcome__heading--other\">Vue</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/svelte\" class=\"welcome__heading welcome__heading--other\">Svelte</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span class=\"netlify\">Deploys by <a href=\"https://netlify.com\" target=\"_blank\">Netlify</a></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`\n\t}),\n\t{\n\t\tcontrols: {\n\t\t\thideNoControlsWarning: true\n\t\t}\n\t}\n)"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 300, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 0 }"
            },
            {
                "name": "linkTargetCurve",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 200 }"
            },
            {
                "name": "nodeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{ id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n\t{ id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n\t{\n\t\tid: 'c',\n\t\tx: 600,\n\t\ty: 200,\n\t\ticon: 'user',\n\t\tcircle: true,\n\t\tnodeWidth: circleSize,\n\t\tnodeHeight: circleSize\n\t},\n\t{ id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight }\n]"
            },
            {
                "name": "nodeHeight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "nodeWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "200"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n\tparameters: {\n\t\tactions: { argTypesRegex: '^on[A-Z].*' },\n\t\tcontrols: {\n\t\t\tmatchers: {\n\t\t\t\tcolor: /(background|color)$/i,\n\t\t\t\tdate: /Date$/\n\t\t\t}\n\t\t},\n\t\tdocs: {\n\t\t\ttheme: themes.dark\n\t\t}\n\t}\n}"
            },
            {
                "name": "ProgrammaticStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "SimpleStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "stories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Diagrams', module)"
            },
            {
                "name": "template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/charts-angular/src/lib/diagrams/config.ts": [
                {
                    "name": "carbonPrefix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/lib/diagrams/config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'cds'"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts": [
                {
                    "name": "circleSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "edgeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{ source: 'a', target: 'b', variant: 'dash-md' },\n\t{\n\t\tsource: 'c',\n\t\ttarget: 'b',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target)\n\t},\n\t{\n\t\tsource: 'd',\n\t\ttarget: 'c',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target),\n\t\tvariant: 'tunnel'\n\t}\n]"
                },
                {
                    "name": "edgeMapped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "edgeData.map((link) => {\n\tconst sourceNode = nodeData.find((node) => node.id === link.source)\n\tconst targetNode = nodeData.find((node) => node.id === link.target)\n\n\treturn {\n\t\t...link,\n\t\tsource: {\n\t\t\tx: sourceNode!.x + sourceNode!.nodeWidth / 2,\n\t\t\ty: sourceNode!.y + sourceNode!.nodeHeight / 2\n\t\t},\n\t\ttarget: {\n\t\t\tx: targetNode!.x + targetNode!.nodeWidth / 2,\n\t\t\ty: targetNode!.y + targetNode!.nodeHeight / 2\n\t\t}\n\t}\n})"
                },
                {
                    "name": "nodeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{ id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n\t{ id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n\t{\n\t\tid: 'c',\n\t\tx: 600,\n\t\ty: 200,\n\t\ticon: 'user',\n\t\tcircle: true,\n\t\tnodeWidth: circleSize,\n\t\tnodeHeight: circleSize\n\t},\n\t{ id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight }\n]"
                },
                {
                    "name": "nodeHeight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "nodeWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "200"
                },
                {
                    "name": "ProgrammaticStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "SimpleStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "stories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Diagrams', module)"
                }
            ],
            "projects/charts-angular/src/stories/all.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(demo: Demo) => `\n\t<div class=\"container theme--white\">\n\t\t<div class=\"v10-banner\">\n\t\t\tThis version relies on <b>Carbon v11</b>. If you're using Carbon v10, <a href=\"https://carbon-charts-0x.netlify.app\" target=\"_blank\" rel=\"noreferrer\">see the legacy demo site</a>\n\t\t</div>\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"cds--tag cds--tag--green component-name\">${demo.chartType.angular}</span>\n\t\t</h3>\n\t\t<p class=\"props\">\n\t\t  <b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a>\n\t\t</p>\n\t\t<div class=\"marginTop-30\" id=\"chart-demo\">\n\t\t\t<${demo.chartType.angular}\n\t\t\t\tclass=\"n-chart\"\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[options]=\"options\"\n\t\t\t\t#${demo.chartType.vanilla}>\n\t\t\t</${demo.chartType.angular}>\n\t\t</div>\n\n\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\t\t<a href=\"${demo.codesandbox.angular}\" target=\"_blank\">\n\t\t\t<img\n\t\t\t\tsrc=\"https://codesandbox.io/static/img/play-codesandbox.svg\"\n\t\t\t\talt=\"Edit on CodeSandbox\"\n\t\t\t\tclass=\"marginTop\"\n\t\t\t/>\n\t\t</a>\n\t</div>`"
                },
                {
                    "name": "introSection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Docs', module).add(\n\t'Welcome',\n\t(args: Args) => ({\n\t\ttemplate: `\n\t\t<div class=\"container intro\">\n\t\t\t<div\n\t\t\tclass=\"welcome__container\"\n\t\t\tstyle=\"background: url(./welcome.png) no-repeat center center fixed; background-size: cover;\">\n\t\t\t\t<div class=\"welcome__content\">\n\t\t\t\t\t<h2 class=\"welcome__heading\">Carbon Charts</h2>\n\t\t\t\t\t<h4 class=\"welcome__heading welcome__heading--subtitle\">(Angular)</h4>\n\t\t\t\t\t<h5 class=\"welcome__heading welcome__heading--other\">Other versions</h5>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com\" class=\"welcome__heading welcome__heading--other\">Vanilla JavaScript</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/react\" class=\"welcome__heading welcome__heading--other\">React</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/vue\" class=\"welcome__heading welcome__heading--other\">Vue</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/svelte\" class=\"welcome__heading welcome__heading--other\">Svelte</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span class=\"netlify\">Deploys by <a href=\"https://netlify.com\" target=\"_blank\">Netlify</a></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`\n\t}),\n\t{\n\t\tcontrols: {\n\t\t\thideNoControlsWarning: true\n\t\t}\n\t}\n)"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(content: string) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${content}\n\t</div>\n`"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/utils.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(content: string) => `\n<div class=\"container theme--white\">\n  ${content}\n</div>\n`"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts": [
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 300, y: 0 }"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts": [
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 0 }"
                },
                {
                    "name": "linkTargetCurve",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 200 }"
                }
            ],
            "projects/charts-angular/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n\tparameters: {\n\t\tactions: { argTypesRegex: '^on[A-Z].*' },\n\t\tcontrols: {\n\t\t\tmatchers: {\n\t\t\t\tcolor: /(background|color)$/i,\n\t\t\t\tdate: /Date$/\n\t\t\t}\n\t\t},\n\t\tdocs: {\n\t\t\ttheme: themes.dark\n\t\t}\n\t}\n}"
                }
            ],
            "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts": [
                {
                    "name": "template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 28,
        "status": "medium",
        "files": [
            {
                "filePath": "projects/charts-angular/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/alluvial-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlluvialChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/area-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedAreaChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/area-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AreaChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bar-chart-grouped.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupedBarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bar-chart-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleBarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bar-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedBarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/base-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseChart",
                "coveragePercent": 66,
                "coverageCount": "8/12",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/boxplot-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoxplotChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bubble-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BubbleChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bullet-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BulletChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/circle-pack-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CirclePackChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/combo-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComboChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/donut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonutChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/gauge-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GaugeChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/heatmap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeatmapChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/histogram-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HistogramChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/lollipop-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LollipopChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/meter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MeterChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/pie-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PieChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/radar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/scatter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScatterChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/tree-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/treemap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreemapChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/wordcloud-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WordCloudChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "carbonPrefix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EdgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Coordinates",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowLeftComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowRightComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerDiamondComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerShapeNodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerSquareComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerTeeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-column.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeColumnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-subtitle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeSubtitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/shape/shape-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShapeNodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "introSection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "circleSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeMapped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeHeight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgrammaticStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTargetCurve",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/example1/diagram-example1.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DiagramExample1",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}