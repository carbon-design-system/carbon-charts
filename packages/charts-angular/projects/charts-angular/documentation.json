{
    "pipes": [],
    "interfaces": [
        {
            "name": "Coordinates",
            "id": "interface-Coordinates-004b076bd6cf0da555e56e1dfc7854787d3e45c73dbf85878d1f608a8f5d56ee0c737b00e3f21e7b9e1150df969aea7c774a4ca53fcb96561fa198c1f8886d26",
            "file": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\n\nimport { carbonPrefix } from '../config'\n\ninterface Coordinates {\n\tx: number\n\ty: number\n}\n@Component({\n\tselector: '[ibm-graph-edge]',\n\ttemplate: `\n\t\t<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__container'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t\t\t[ngStyle]=\"{ stroke: color }\"\n\t\t\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\" />\n\t\t</svg:g>\n\t`\n})\nexport class Edge {\n\t@Input() color = ''\n\t@Input() markerEnd = ''\n\t@Input() markerStart = ''\n\t@Input() source: Coordinates = { x: 0, y: 0 }\n\t@Input() target: Coordinates = { x: 0, y: 0 }\n\t@Input() variant?: 'dash-sm' | 'dash-md' | 'dash-lg' | 'dash-xl' | 'double' | 'tunnel'\n\t@Input() path = ''\n\n\tpathClasses = ''\n\tnamespace = `${carbonPrefix}--cc--edge`\n\tstraight = CarbonComponent.buildStraightPathString\n}\n",
            "properties": [
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlluvialChart",
            "id": "component-AlluvialChart-59fac799fab116d63216424624883c43c10beca56e4564712348819242dab845dc81a939fb63f844dae18c37268f51fb2b510d85c813e14155126de2d35f1817",
            "file": "projects/charts-angular/src/lib/charts/alluvial-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-alluvial-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Alluvial</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Alluvial` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { AlluvialChart as AlluvialChartCore, type AlluvialChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `Alluvial` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-alluvial-chart',\n\ttemplate: ``\n})\nexport class AlluvialChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new AlluvialChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as AlluvialChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "AreaChart",
            "id": "component-AreaChart-7095d77430765cd724654273e386b8b3afdb318749a419a16de39c2a8630ac96165aa2ddfeec087c0a2fd229d6f685947a744e6d50bc8d617a0e376897927578",
            "file": "projects/charts-angular/src/lib/charts/area-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>AreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `AreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { AreaChart as AreaChartCore, type AreaChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `AreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-area-chart',\n\ttemplate: ``\n})\nexport class AreaChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new AreaChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as AreaChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BaseChart",
            "id": "component-BaseChart-d1152dabbfba3f97319ec5129267df38a4faf3bf6b1df8708a16a8579057dcb7747322ca17b48daaa73a5ee84722d381834182d6b904ee63737fcc5f5eb6e031",
            "file": "projects/charts-angular/src/lib/charts/base-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-base-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": []
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n"
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BaseChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BaseChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild, OnInit, AfterViewInit, ElementRef } from '@angular/core'\nimport type { ChartTabularData } from '@carbon/charts'\n/**\n * Wrapper around `BaseChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-base-chart',\n\ttemplate: ``\n})\nexport class BaseChart implements AfterViewInit, OnInit {\n\t/**\n\t * Data passed to charts library for displaying\n\t */\n\t@Input() set data(newData: ChartTabularData) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst dataExistsAlready = !!this._data\n\n\t\tthis._data = newData\n\n\t\tif (dataExistsAlready) {\n\t\t\tthis.chart?.model.setData(newData)\n\t\t}\n\t}\n\n\tget data(): ChartTabularData {\n\t\treturn this._data\n\t}\n\n\t/**\n\t * Options passed to charts library\n\t */\n\t@Input() set options(newOptions: any) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst optionsExistAlready = !!this._options\n\n\t\tthis._options = newOptions\n\n\t\tif (optionsExistAlready) {\n\t\t\tthis.chart?.model.setOptions(newOptions)\n\t\t}\n\t}\n\n\tget options() {\n\t\treturn this._options\n\t}\n\n\t/**\n\t * Chart width\n\t */\n\t@Input() width?: string\n\n\t/**\n\t * Chart height\n\t */\n\t@Input() height?: string\n\n\t/**\n\t * Chart container element ref\n\t */\n\t@ViewChild('chartRef') chartRef!: ElementRef<HTMLElement>\n\n\t/**\n\t * Chart object instance\n\t *\n\t * You can use this to do whatever you would normally do with a chart if you used\n\t * charts library directly.\n\t */\n\tchart: any\n\n\tprivate _data!: ChartTabularData\n\tprivate _options: any\n\n\tconstructor(protected elementRef: ElementRef) {\n\t}\n\n\tngOnInit() {\n\t\t// Width prop is mandatory for the wrappers\n\t\tif (this.width) {\n\t\t\tthis.options.width = this.width\n\t\t}\n\n\t\t// Height prop is mandatory for the wrappers\n\t\tif (this.height) {\n\t\t\tthis.options.height = this.height\n\t\t}\n\t}\n\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 73,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newData",
                                "type": "ChartTabularData",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "rawdescription": "\n\nData passed to charts library for displaying\n",
                        "description": "<p>Data passed to charts library for displaying</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newData",
                                "type": "ChartTabularData",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "data",
                        "type": "",
                        "returnType": "ChartTabularData",
                        "line": 27
                    }
                },
                "options": {
                    "name": "options",
                    "setSignature": {
                        "name": "options",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newOptions",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "rawdescription": "\n\nOptions passed to charts library\n",
                        "description": "<p>Options passed to charts library</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newOptions",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "options",
                        "type": "",
                        "returnType": "",
                        "line": 45
                    }
                }
            }
        },
        {
            "name": "BoxplotChart",
            "id": "component-BoxplotChart-1eedc091db38873d7c7c199b1a5a1a04cfbb838844bd8423eca3b281747b98ae83054cbb1bca095beaf96568cb70e456292fab9c05ccb0d13b00b99f1f37194b",
            "file": "projects/charts-angular/src/lib/charts/boxplot-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-boxplot-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BoxplotChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BoxplotChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { BoxplotChart as BoxplotChartCore, type ChartTabularData, type BoxplotChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `BoxplotChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-boxplot-chart',\n\ttemplate: ``\n})\nexport class BoxplotChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new BoxplotChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BoxplotChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BubbleChart",
            "id": "component-BubbleChart-46b71662d9744bca6510ed4d632f84dd722b3584d43fa1aa7b0ae5b1c066e98bf5dd39259c35d817fe72c64e684911ba1ba2fad726436ff390890c5b036d88c7",
            "file": "projects/charts-angular/src/lib/charts/bubble-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bubble-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { BubbleChart as BubbleChartCore, type BubbleChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-bubble-chart',\n\ttemplate: ``\n})\nexport class BubbleChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new BubbleChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BubbleChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BulletChart",
            "id": "component-BulletChart-ab3779afa30f635c56db629e87c4cdf95b45ba502c5cd063822eacd90d8a9e37c296ab02d11f4522dd747ac488e2d9db8ad977ad83a0faf60473b27c4c9c2ed5",
            "file": "projects/charts-angular/src/lib/charts/bullet-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bullet-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BulletChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BulletChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { BulletChart as BulletChartCore, type BulletChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `BulletChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-bullet-chart',\n\ttemplate: ``\n})\nexport class BulletChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new BulletChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BulletChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "CardNode",
            "id": "component-CardNode-14779c42c4694de9eeb2e095d261e5dbe84f3625ceaf227c054a5ce89331d68f4143bf7650fa7593ec56df4e1bbe4795f70b977e13ed2e33696ed18d2eac01d9",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n\t<xhtml:div\n\t\t*ngSwitchCase=\"'div'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'border-color': color,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:div>\n\n\t<xhtml:button\n\t\t*ngSwitchCase=\"'button'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'border-color': color,\n\t\t\tposition: position\n\t\t}\"\n\t\t(click)=\"click.emit($event)\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:button>\n\n\t<xhtml:a\n\t\t*ngSwitchCase=\"'a'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[attr.href]=\"href\"\n\t\t[ngStyle]=\"{ 'border-color': color, position: position }\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:a>\n</ng-container>\n<ng-template #nodeTemplate>\n\t<ng-content></ng-content>\n</ng-template>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'static'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 86
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node',\n\ttemplate: `\n\t\t<ng-container [ngSwitch]=\"component\">\n\t\t\t<xhtml:div\n\t\t\t\t*ngSwitchCase=\"'div'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'border-color': color,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:div>\n\n\t\t\t<xhtml:button\n\t\t\t\t*ngSwitchCase=\"'button'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'border-color': color,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(click)=\"click.emit($event)\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:button>\n\n\t\t\t<xhtml:a\n\t\t\t\t*ngSwitchCase=\"'a'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[attr.href]=\"href\"\n\t\t\t\t[ngStyle]=\"{ 'border-color': color, position: position }\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:a>\n\t\t</ng-container>\n\t\t<ng-template #nodeTemplate>\n\t\t\t<ng-content></ng-content>\n\t\t</ng-template>\n\t`\n})\nexport class CardNode implements OnInit {\n\t@Input() as = 'div'\n\t@Input() href = ''\n\t@Input() color = ''\n\t@Input() stacked = false\n\t@Input() position: string = 'static'\n\n\t@Output() click: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOver: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOut: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseMove: EventEmitter<any> = new EventEmitter<any>()\n\n\tnamespace = `${carbonPrefix}--cc--card-node`\n\n\tcomponent = 'div'\n\n\tngOnInit() {\n\t\tif (this.href) {\n\t\t\tthis.component = 'a'\n\t\t} else {\n\t\t\tthis.component = this.as\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "CardNodeColumn",
            "id": "component-CardNodeColumn-0b29548e915acb18f975225cfaf4cee0ea3ec821a3bb3fc04c1741522c6d1bc19e1c3aaa26fbfbeb7c3c1a6dff2f1c19436dc49175164a85b114142ff0b41938",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-column.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-column",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div>\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "farsideColumn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, HostBinding } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node-column',\n\ttemplate: `\n\t\t<xhtml:div>\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`\n})\nexport class CardNodeColumn {\n\t@Input() farsideColumn = false\n\n\t@HostBinding('class') get class() {\n\t\tconst farsideClassName = this.farsideColumn\n\t\t\t? `${carbonPrefix}--cc--card-node__column--farside`\n\t\t\t: ''\n\n\t\treturn `${carbonPrefix}--cc--card-node__column ${farsideClassName}`\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "class": {
                    "name": "class",
                    "getSignature": {
                        "name": "class",
                        "type": "",
                        "returnType": "",
                        "line": 15
                    }
                }
            }
        },
        {
            "name": "CardNodeLabel",
            "id": "component-CardNodeLabel-a356255f1a05f5dc84932e88d0d9e78de272e1c197eb4b7559b37cc418510b97f4303cc5c6d24e830f82e9762603c477bb04c0a5d528f019d64daa2ffa10edb2",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-label",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:label [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:label>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__label`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node-label',\n\ttemplate: `\n\t\t<xhtml:label [ngClass]=\"namespace\">\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:label>\n\t`\n})\nexport class CardNodeLabel {\n\tnamespace = `${carbonPrefix}--cc--card-node__label`\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeSubtitle",
            "id": "component-CardNodeSubtitle-250395bd7e4469372d9ea7c8a1f630e4c004813c34afc8f0f5004d5174fed84543a536fa89305f424bdc89b7c2a19f500a968e54e01da6b421ea544d9ecbc3f1",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-subtitle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-subtitle",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__subtitle`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node-subtitle',\n\ttemplate: `\n\t\t<xhtml:div [ngClass]=\"namespace\">\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`\n})\nexport class CardNodeSubtitle {\n\tnamespace = `${carbonPrefix}--cc--card-node__subtitle`\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeTitle",
            "id": "component-CardNodeTitle-1ac79f5232c20d65f58607771821e36557759b5f2a24515ec8f58f69670fbf0e247fbd092275c247dcfb92836f323a1e84af3d56eb83a0de7a0c3b8716a8372d",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-title",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n\t<ng-content></ng-content>\n</xhtml:div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__title`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-card-node-title',\n\ttemplate: `\n\t\t<xhtml:div [ngClass]=\"namespace\">\n\t\t\t<ng-content></ng-content>\n\t\t</xhtml:div>\n\t`\n})\nexport class CardNodeTitle {\n\tnamespace = `${carbonPrefix}--cc--card-node__title`\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChartWrapper",
            "id": "component-ChartWrapper-36fc981fbc79de4eda0abb67e714923691ab7f2b4d021c64ad74452d03f9d823b9ee6788b433a4c4b705a43039cfb002df284f931127dfa510dffe44b59f6fe9",
            "file": "projects/charts-angular/src/stories/chart-wrapper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "chart-wrapper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./chart-wrapper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chartType",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "ChartTabularData",
                    "decorators": []
                },
                {
                    "name": "demoChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "BaseChartOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCloudSandbox",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Injector, OnInit, Input, ViewContainerRef } from '@angular/core'\nimport type { ChartTabularData, BaseChartOptions } from '@carbon/charts'\n\n@Component({\n  selector: 'chart-wrapper',\n  templateUrl: './chart-wrapper.component.html'\n})\nexport class ChartWrapper implements OnInit {\n  @Input() demoChart!: any\n  @Input() chartType: string = ''\n  @Input() data!: ChartTabularData\n  @Input() options!: BaseChartOptions\n  // @Input() codeSandbox!: string\n\n  constructor(private viewContainerRef: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    console.log(this.demoChart)\n  }\n\n  get injector() {\n    const injector = this.viewContainerRef.injector;\n    return Injector.create({\n      providers: [\n        { provide: 'data', useValue: this.data },\n        { provide: 'options', useValue: this.options }\n      ],\n      parent: injector\n    })\n  }\n\n  async openCloudSandbox() {\n\t\tconsole.log('Click')\n\t\ttry {\n\t\t\tconst response = await fetch('https://codesandbox.io/api/v1/sandboxes', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\t// body: JSON.stringify(this.codeSandbox),\n\t\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t\t})\n\t\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Network response from CodeSandbox was not ok')\n\t\t\t}\n\t\t\tconst { data } = await response.json()\n\t\t\tconst sandboxUrl = `https://codesandbox.io/p/sandbox/${data.sandbox_id}`\n\t\t\twindow.open(sandboxUrl, '_blank')\n\t\t} catch (error) {\n\t\t\tconsole.error('There was a problem opening the Cloud Sandbox:', error)\n\t\t\tthrow error\n\t\t}\n\t}\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "injector": {
                    "name": "injector",
                    "getSignature": {
                        "name": "injector",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                }
            },
            "templateData": "<div class=\"container theme--white\">\n  <div class=\"v10-banner\">\n    This version relies on <b>Carbon v11</b>. If you're using Carbon v10, <a href=\"https://carbon-charts-0x.netlify.app\" target=\"_blank\" rel=\"noreferrer\">see the legacy demo site</a>\n  </div>\n  <h3>\n    <b>Component:</b>\n    <span class=\"cds--tag cds--tag--green component-name\">{{chartType}}</span>\n  </h3>\n  <p class=\"props\">\n    <b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a>\n  </p>\n\n  <div class=\"marginTop-30\" id=\"chart-demo\">\n    <ng-container *ngComponentOutlet=\"demoChart; injector: injector;\"></ng-container>\n\t</div>\n\n  <h3 class=\"marginTop-30\">Code sample</h3>\n  <a href=\"javascript:void(0)\" (click)=\"openCloudSandbox()\">\n    <img\n      src=\"https://codesandbox.io/static/img/play-codesandbox.svg\"\n      alt=\"Edit on CodeSandbox\"\n      class=\"marginTop\"\n    />\n  </a>\n\n  <div class=\"cds--snippet cds--snippet--multi cds--snippet--expand marginTop-30\" data-code-snippet>\n    <div class=\"cds--snippet-container\" aria-label=\"Code Snippet Text\">\n      <pre>\n        <code>\n          &lt;{{ chartType }} [data]=\"data\" [options]=\"options\" &gt;&lt;/{{ chartType }}&gt;\n        </code>\n      </pre>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "CirclePackChart",
            "id": "component-CirclePackChart-13bb43e21c3f2764398adf2fa2eba6283b1332c125dcecb199a1f9f12bbf743667d5988be80c71c329643b62a277c6e342bc166b851871ff461ea9a8dd392ccf",
            "file": "projects/charts-angular/src/lib/charts/circle-pack-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-circle-pack-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { CirclePackChart as CirclePackChartCore, type CirclePackChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-circle-pack-chart',\n\ttemplate: ``\n})\nexport class CirclePackChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new CirclePackChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as CirclePackChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ComboChart",
            "id": "component-ComboChart-d053b941d0c167b0e3a0788003ae29f5b63ab47aa1333dc4ef8f5036c84897f7b47d39b644d8b67d89f6993a4ebdf4b945f9344d2a3bd7228874abfeb142da86",
            "file": "projects/charts-angular/src/lib/charts/combo-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-combo-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ComboChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ComboChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\nimport { ComboChart as ComboChartCore, type ComboChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `ComboChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-combo-chart',\n\ttemplate: ``\n})\nexport class ComboChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new ComboChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as ComboChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "DiagramExample1",
            "id": "component-DiagramExample1-38cee627607d0f3ea5da8e4b791acac987af0a8af37e737821ed38bb1043bf7385a0ff3645442f8d142092a3446b7521b09a7588ced07c13b739049d3443207a",
            "file": "projects/charts-angular/src/stories/diagrams/example1/diagram-example1.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "diagram-example1",
            "styleUrls": [],
            "styles": [
                "@import '@carbon/charts/demo/styles.css';"
            ],
            "templateUrl": [
                "./diagram-example1.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "circleSize",
                    "defaultValue": "64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "markerEnd",
                    "defaultValue": "'marker'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "nodeHeight",
                    "defaultValue": "64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "nodeWidth",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "source",
                    "defaultValue": "{ x: 0, y: 48 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "target",
                    "defaultValue": "{ x: 396, y: 48 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { UserModule, WikisModule } from '@carbon/icons-angular'\nimport { CardNodeModule, EdgeModule, MarkerModule, ShapeNodeModule  } from '../../../public-api'\n\n@Component({\n\tselector: 'diagram-example1',\n  standalone: true,\n\ttemplateUrl: './diagram-example1.component.html',\n  styles: [`@import '@carbon/charts/demo/styles.css';`],\n  imports: [ CardNodeModule, EdgeModule, MarkerModule, ShapeNodeModule, UserModule, WikisModule ]\n})\nexport class DiagramExample1 {\n  source = { x: 0, y: 48 }\n  target = { x: 396, y: 48 }\n  markerEnd = 'marker'\n  nodeHeight = 64\n  nodeWidth = 200\n  circleSize = 64\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "@import '@carbon/charts/demo/styles.css';\n",
            "templateData": "<div class=\"demo-desktop-only\">\n  <div class=\"cp-message\">This is a desktop-only example</div>\n  <svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n    <svg:defs>\n      <svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n    </svg:defs>\n\n    <svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\"></svg:g>\n\n    <svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\"\n      [attr.transform]=\"'translate(0, 16)'\">\n      <xhtml:div>\n        <ibm-diagram-card-node as=\"button\">\n          <ibm-diagram-card-node-column>\n            <svg ibmIconUser size=\"20\"></svg>\n          </ibm-diagram-card-node-column>\n          <ibm-diagram-card-node-column>\n            <ibm-diagram-card-node-title>\n              Title\n            </ibm-diagram-card-node-title>\n            <ibm-diagram-card-node-subtitle>\n              Description\n            </ibm-diagram-card-node-subtitle>\n          </ibm-diagram-card-node-column>\n        </ibm-diagram-card-node>\n      </xhtml:div>\n    </svg:foreignObject>\n\n    <svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\"\n      [attr.transform]=\"'translate(400, 16)'\">\n      <xhtml:div>\n        <ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\"\n          [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n      </xhtml:div>\n    </svg:foreignObject>\n  </svg>\n\n  <ng-template #wikiTemplate>\n    <svg ibmIconWikis size=\"20\"></svg>\n  </ng-template>\n</div>"
        },
        {
            "name": "DonutChart",
            "id": "component-DonutChart-62f7e0ab4b0e04ee953e43f6b460019f1d4f63a2ae4a3242552744b5fc58e5c729552a84cd8e82c67d4b65de715bbff65b3028aca6dae5ce19b7c8c4ab3f5f30",
            "file": "projects/charts-angular/src/lib/charts/donut-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-donut-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>DonutChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `DonutChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { DonutChart as DonutChartCore, type DonutChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `DonutChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-donut-chart',\n\ttemplate: ``\n})\nexport class DonutChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new DonutChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as DonutChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "Edge",
            "id": "component-Edge-004b076bd6cf0da555e56e1dfc7854787d3e45c73dbf85878d1f608a8f5d56ee0c737b00e3f21e7b9e1150df969aea7c774a4ca53fcb96561fa198c1f8886d26",
            "file": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-edge]",
            "styleUrls": [],
            "styles": [],
            "template": "<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__container'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t<svg:path\n\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t[ngStyle]=\"{ stroke: color }\"\n\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\" />\n</svg:g>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerEnd",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerStart",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "path",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "source",
                    "defaultValue": "{ x: 0, y: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "target",
                    "defaultValue": "{ x: 0, y: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"dash-sm\" | \"dash-md\" | \"dash-lg\" | \"dash-xl\" | \"double\" | \"tunnel\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--edge`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "pathClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "straight",
                    "defaultValue": "CarbonComponent.buildStraightPathString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\n\nimport { carbonPrefix } from '../config'\n\ninterface Coordinates {\n\tx: number\n\ty: number\n}\n@Component({\n\tselector: '[ibm-graph-edge]',\n\ttemplate: `\n\t\t<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__container'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__outer'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\" />\n\t\t\t<svg:path\n\t\t\t\t[ngClass]=\"namespace + '__inner'\"\n\t\t\t\t[attr.d]=\"path ? path : straight(source, target)\"\n\t\t\t\t[ngStyle]=\"{ stroke: color }\"\n\t\t\t\t[attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n\t\t\t\t[attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\" />\n\t\t</svg:g>\n\t`\n})\nexport class Edge {\n\t@Input() color = ''\n\t@Input() markerEnd = ''\n\t@Input() markerStart = ''\n\t@Input() source: Coordinates = { x: 0, y: 0 }\n\t@Input() target: Coordinates = { x: 0, y: 0 }\n\t@Input() variant?: 'dash-sm' | 'dash-md' | 'dash-lg' | 'dash-xl' | 'double' | 'tunnel'\n\t@Input() path = ''\n\n\tpathClasses = ''\n\tnamespace = `${carbonPrefix}--cc--edge`\n\tstraight = CarbonComponent.buildStraightPathString\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "GaugeChart",
            "id": "component-GaugeChart-2272646ee3463f0c70d5f5c86cd514646c92ffb91dca7bbc637734d011b1a0cf48c8dcaa9cd88770549ba04aee485cff2206f38b04697a0de0342f8289cb0ed4",
            "file": "projects/charts-angular/src/lib/charts/gauge-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-gauge-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GaugeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GaugeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { GaugeChart as GaugeChartCore, type GaugeChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `GaugeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-gauge-chart',\n\ttemplate: ``\n})\nexport class GaugeChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new GaugeChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as GaugeChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "GroupedBarChart",
            "id": "component-GroupedBarChart-5720e1a80c69bffbd2fb6acbcd9396a56256121c822fc2fec04b0943e37273f5052953aec704f6d95eefdc2ed4274da2f5da7accaf21d0cccd014a1832a4886d",
            "file": "projects/charts-angular/src/lib/charts/bar-chart-grouped.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-grouped-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GroupedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GroupedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { GroupedBarChart as GroupedBarChartCore, type ChartTabularData, type BarChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `GroupedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-grouped-bar-chart',\n\ttemplate: ``\n})\nexport class GroupedBarChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new GroupedBarChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HeatmapChart",
            "id": "component-HeatmapChart-26076e1032044aa69d9d2927966ab8a063d55d06622520fe3537693bf52b2a965dab141d1fbd3a932a09a6993e8ee0da0c210b29f67127ae9f2b2a5285c3fe1d",
            "file": "projects/charts-angular/src/lib/charts/heatmap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-heatmap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Heatmap</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Heatmap` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { HeatmapChart as HeatmapChartCore, type HeatmapChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `Heatmap` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-heatmap-chart',\n\ttemplate: ``\n})\nexport class HeatmapChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new HeatmapChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as HeatmapChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HistogramChart",
            "id": "component-HistogramChart-40f235cbb77ddc6940de997941cb793dfec3393c5fc74ea32973b9cd505e5d37733147f99c23089af07b632e6fe25b3a41c79da96bd9e65949e76e9f604b1ae0",
            "file": "projects/charts-angular/src/lib/charts/histogram-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-histogram-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>HistogramChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `HistogramChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { HistogramChart as HistogramChartCore, type HistogramChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `HistogramChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-histogram-chart',\n\ttemplate: ``\n})\nexport class HistogramChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new HistogramChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as HistogramChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LineChart",
            "id": "component-LineChart-ce347be74c3b4049ef3c0e49c7e719f6639a8876df8831918d832a65498c41c60e179dc2e01e5488c276b13f8439970e1e692dc2c9d44f499215c875f653a280",
            "file": "projects/charts-angular/src/lib/charts/line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-line-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LineChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LineChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { LineChart as LineChartCore, type LineChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `LineChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-line-chart',\n\ttemplate: ``\n})\nexport class LineChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new LineChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as LineChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LollipopChart",
            "id": "component-LollipopChart-b2e5b061d51c5afe5933855d680d9ce0c85e6d11fa3c49d2009784356debfede7bf4ea79d79afa72318e762dd215b24986ada3ba86b0c91984cbb9d8e32809df",
            "file": "projects/charts-angular/src/lib/charts/lollipop-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-lollipop-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LollipopChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LollipopChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { LollipopChart as LollipopChartCore, type LollipopChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `LollipopChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-lollipop-chart',\n\ttemplate: ``\n})\nexport class LollipopChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new LollipopChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as LollipopChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "Marker",
            "id": "component-Marker-287003baa449e24d77f0ec44240f5cebc5d6318216c1859bc7e3bab877222270214cb521f6c31e6794f2395e61048d75e2dca4b51a9a9fc105cfae1dde9fef19",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MarkerArrowLeft",
            "id": "component-MarkerArrowLeft-287003baa449e24d77f0ec44240f5cebc5d6318216c1859bc7e3bab877222270214cb521f6c31e6794f2395e61048d75e2dca4b51a9a9fc105cfae1dde9fef19",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-left]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerArrowRight",
            "id": "component-MarkerArrowRight-287003baa449e24d77f0ec44240f5cebc5d6318216c1859bc7e3bab877222270214cb521f6c31e6794f2395e61048d75e2dca4b51a9a9fc105cfae1dde9fef19",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-right]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerDiamond",
            "id": "component-MarkerDiamond-287003baa449e24d77f0ec44240f5cebc5d6318216c1859bc7e3bab877222270214cb521f6c31e6794f2395e61048d75e2dca4b51a9a9fc105cfae1dde9fef19",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-diamond]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerShapeNode",
            "id": "component-MarkerShapeNode-287003baa449e24d77f0ec44240f5cebc5d6318216c1859bc7e3bab877222270214cb521f6c31e6794f2395e61048d75e2dca4b51a9a9fc105cfae1dde9fef19",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-circle]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerSquare",
            "id": "component-MarkerSquare-287003baa449e24d77f0ec44240f5cebc5d6318216c1859bc7e3bab877222270214cb521f6c31e6794f2395e61048d75e2dca4b51a9a9fc105cfae1dde9fef19",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-square]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerTee",
            "id": "component-MarkerTee-287003baa449e24d77f0ec44240f5cebc5d6318216c1859bc7e3bab877222270214cb521f6c31e6794f2395e61048d75e2dca4b51a9a9fc105cfae1dde9fef19",
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-tee]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "Marker"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "Marker"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Component as CarbonComponent } from '@carbon/charts'\nimport { carbonPrefix } from '../../config'\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`\n\n@Component({\n\tselector: '[ibm-graph-marker]',\n\ttemplate\n})\nexport class Marker {\n\t@Input() d = ''\n\t@Input() color = ''\n\t@Input() id = ''\n\t@Input() orient: string | number = 'auto'\n\t@Input() height: string | number = ''\n\t@Input() width: string | number = ''\n\t@Input() refX: string | number = ''\n\t@Input() refY: string | number = ''\n\t@Input() position: 'start' | 'end' = 'end'\n\n\tnamespace = `${carbonPrefix}--cc--marker`\n\n\tsetAttributes = ({\n\t\td,\n\t\tid,\n\t\theight,\n\t\twidth\n\t}: {\n\t\td: string\n\t\tid: string\n\t\theight: number\n\t\twidth: number\n\t}) => {\n\t\tconst xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5\n\t\tconst yPos = height / 2\n\n\t\tthis.d = this.d || d\n\t\tthis.id = this.id || id\n\t\tthis.height = this.height || height\n\t\tthis.width = this.width || width\n\t\tthis.refX = this.refX || xPos\n\t\tthis.refY = this.refY || yPos\n\t}\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeft extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowLeft })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRight extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.arrowRight })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNode extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.circle })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamond extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.diamond })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquare extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.square })\n\t}\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTee extends Marker implements OnInit {\n\tngOnInit() {\n\t\tthis.setAttributes({ ...CarbonComponent.tee })\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "Marker",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MeterChart",
            "id": "component-MeterChart-479fc7dee58d9dc62657162505f9a20d4f654ba4ce2e220adcc7d9431ca485942d917d6c6083b2b5a5a2ec869b41ef1cc22a0b24cf81bc08d1fcd52b93275194",
            "file": "projects/charts-angular/src/lib/charts/meter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-meter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>MeterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `MeterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\nimport { MeterChart as MeterChartCore, type MeterChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `MeterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-meter-chart',\n\ttemplate: ``\n})\nexport class MeterChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new MeterChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as MeterChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "PieChart",
            "id": "component-PieChart-cf82309b5e304afe5f504f9c9945d809d0c5e83c00ae94f94816437d5e1a0a2bd51492798fcf425f620ebe68b48681ea706ef341a0e66ef6e4ac67cd9381102c",
            "file": "projects/charts-angular/src/lib/charts/pie-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-pie-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>PieChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `PieChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { PieChart as PieChartCore, type PieChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `PieChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-pie-chart',\n\ttemplate: ``\n})\nexport class PieChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new PieChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as PieChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "RadarChart",
            "id": "component-RadarChart-74e89dcfe00b47eea989244cb6a38da4921940c0e5e0205ac4761bef111edb9a6fd26f91cce7aa10b55371c93d056ce61ab8bfc61c60eb4af14a29203ffa97ca",
            "file": "projects/charts-angular/src/lib/charts/radar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-radar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>RadarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `RadarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { RadarChart as RadarChartCore, type RadarChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `RadarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-radar-chart',\n\ttemplate: ``\n})\nexport class RadarChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new RadarChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as RadarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ScatterChart",
            "id": "component-ScatterChart-4358d79814df06376161f541eb602960bc4df773ae097145f5db8d0f716e4ed76de95bbefad77dc2d1f8e3a746c83073c1eec5dc18cfd92440a12a50389927a0",
            "file": "projects/charts-angular/src/lib/charts/scatter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-scatter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ScatterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ScatterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { ScatterChart as ScatterChartCore, type ScatterChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `ScatterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-scatter-chart',\n\ttemplate: ``\n})\nexport class ScatterChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new ScatterChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as ScatterChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ShapeNode",
            "id": "component-ShapeNode-827b567f402b077edb44e91c35f59a2ed1d4d21c54f3563b5da332d4fe2ab68453825d11dd1f0f785dcd7a2872f77e0929ee59913106a366612bfca5f6829f1a",
            "file": "projects/charts-angular/src/lib/diagrams/nodes/shape/shape-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-shape-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n\t<xhtml:div\n\t\t*ngSwitchCase=\"'div'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:div>\n\n\t<xhtml:button\n\t\t*ngSwitchCase=\"'button'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(click)=\"click.emit($event)\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:button>\n\n\t<xhtml:a\n\t\t*ngSwitchCase=\"'a'\"\n\t\t[ngClass]=\"[\n\t\t\tnamespace,\n\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\tnamespace + '--' + component\n\t\t]\"\n\t\t[attr.href]=\"href\"\n\t\t[ngStyle]=\"{\n\t\t\t'height.px': size,\n\t\t\t'width.px': size,\n\t\t\tposition: position\n\t\t}\"\n\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\ttabindex=\"0\">\n\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t</xhtml:a>\n</ng-container>\n\n<ng-template #nodeTemplate>\n\t<div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n\t\t<ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n\t</div>\n\t<div attr.class=\"{{ namespace + '__body' }}\" [ngStyle]=\"{ position: bodyPosition }\">\n\t\t<div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n\t\t<div attr.class=\"{{ namespace + '__subtitle' }}\">\n\t\t\t{{ subtitle }}\n\t\t</div>\n\t</div>\n</ng-template>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bodyPosition",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'fixed'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "renderIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "'circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "\"circle\" | \"square\" | \"rounded-square\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "48",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 105,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--shape-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 110
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, TemplateRef, OnInit } from '@angular/core'\n\nimport { carbonPrefix } from '../../config'\n\n@Component({\n\tselector: 'ibm-diagram-shape-node',\n\ttemplate: `\n\t\t<ng-container [ngSwitch]=\"component\">\n\t\t\t<xhtml:div\n\t\t\t\t*ngSwitchCase=\"'div'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:div>\n\n\t\t\t<xhtml:button\n\t\t\t\t*ngSwitchCase=\"'button'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(click)=\"click.emit($event)\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:button>\n\n\t\t\t<xhtml:a\n\t\t\t\t*ngSwitchCase=\"'a'\"\n\t\t\t\t[ngClass]=\"[\n\t\t\t\t\tnamespace,\n\t\t\t\t\tstacked ? namespace + '--stacked' : '',\n\t\t\t\t\tshape ? namespace + '--' + shape : '',\n\t\t\t\t\tnamespace + '--' + component\n\t\t\t\t]\"\n\t\t\t\t[attr.href]=\"href\"\n\t\t\t\t[ngStyle]=\"{\n\t\t\t\t\t'height.px': size,\n\t\t\t\t\t'width.px': size,\n\t\t\t\t\tposition: position\n\t\t\t\t}\"\n\t\t\t\t(mouseenter)=\"mouseEnter.emit($event)\"\n\t\t\t\t(mouseover)=\"mouseOver.emit($event)\"\n\t\t\t\t(mouseout)=\"mouseOut.emit($event)\"\n\t\t\t\t(mouseleave)=\"mouseLeave.emit($event)\"\n\t\t\t\t(mousemove)=\"mouseMove.emit($event)\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n\t\t\t</xhtml:a>\n\t\t</ng-container>\n\n\t\t<ng-template #nodeTemplate>\n\t\t\t<div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n\t\t\t\t<ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n\t\t\t</div>\n\t\t\t<div attr.class=\"{{ namespace + '__body' }}\" [ngStyle]=\"{ position: bodyPosition }\">\n\t\t\t\t<div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n\t\t\t\t<div attr.class=\"{{ namespace + '__subtitle' }}\">\n\t\t\t\t\t{{ subtitle }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`\n})\nexport class ShapeNode implements OnInit {\n\t@Input() as = 'div'\n\t@Input() href = ''\n\t@Input() renderIcon?: TemplateRef<any>\n\t@Input() size = 48\n\t@Input() stacked = false\n\t@Input() shape: 'circle' | 'square' | 'rounded-square' = 'circle'\n\t@Input() subtitle = ''\n\t@Input() title = ''\n\t@Input() position: string = 'fixed'\n\t@Input() bodyPosition: string = 'absolute'\n\n\t@Output() click: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOver: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseOut: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>()\n\t@Output() mouseMove: EventEmitter<any> = new EventEmitter<any>()\n\n\tnamespace = `${carbonPrefix}--cc--shape-node`\n\tcomponent = 'div'\n\n\tngOnInit() {\n\t\tif (this.href) {\n\t\t\tthis.component = 'a'\n\t\t} else {\n\t\t\tthis.component = this.as\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SimpleBarChart",
            "id": "component-SimpleBarChart-00b5677af0bb9acbc81a925c991f8a6b4f139bfc0e97ed0d3b16f4376a5f850712e93bf6c7b1207fc8d7a53392d14c76d69a1f0dc17ea5a6cc5212ca87678253",
            "file": "projects/charts-angular/src/lib/charts/bar-chart-simple.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-simple-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>SimpleBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `SimpleBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { SimpleBarChart as SimpleBarChartCore, type ChartTabularData, type BarChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `SimpleBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-simple-bar-chart',\n\ttemplate: ``\n})\nexport class SimpleBarChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new SimpleBarChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as BarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedAreaChart",
            "id": "component-StackedAreaChart-32373ef541e88c72b9d72005102a58471af59fab9903b8f23408bab5e01163ceaa99205a913ccce3e856e77de41b7187ce650ac0bfd1c82f3e0758d36c32bb16",
            "file": "projects/charts-angular/src/lib/charts/area-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedAreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedAreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport {\n\tStackedAreaChart as StackedAreaChartCore,\n\ttype StackedAreaChartOptions,\n\ttype ChartTabularData\n} from '@carbon/charts'\n\n/**\n * Wrapper around `StackedAreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-stacked-area-chart',\n\ttemplate: ``\n})\nexport class StackedAreaChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new StackedAreaChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as StackedAreaChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedBarChart",
            "id": "component-StackedBarChart-707ccf8bbc8b4425b1e7c2807ea90dead0c012021f870bb0d0f6835c46fb3b39af872b3e2d3f4174fbf9dc45ccceed37e36203993978439aeccecab2ce915aee",
            "file": "projects/charts-angular/src/lib/charts/bar-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { StackedBarChart as StackedBarChartCore, type ChartTabularData, type StackedBarChartOptions } from '@carbon/charts'\n\n/**\n * Wrapper around `StackedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-stacked-bar-chart',\n\ttemplate: ``\n})\nexport class StackedBarChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new StackedBarChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as StackedBarChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreeChart",
            "id": "component-TreeChart-f4be458ed93667df52940c7a88eacfe5facde3215de8c8d615f6fd1c9bced624a3e4fcf869a772da7facf4d7271994fbf958f1b6a5af1088e7e32e12a4f7cf7e",
            "file": "projects/charts-angular/src/lib/charts/tree-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-tree-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { TreeChart as TreeChartCore, type TreemapChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `TreeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-tree-chart',\n\ttemplate: ``\n})\nexport class TreeChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new TreeChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as TreemapChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreemapChart",
            "id": "component-TreemapChart-b93898b0d4b999e6cf68d6168c0f2275ba6f544046a7fe1781102a5e10dcbaccc799e64d06b8689a9c15822d35a463973cde650d814e1f2802ce43b07010296b",
            "file": "projects/charts-angular/src/lib/charts/treemap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-treemap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreemapChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreemapChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { TreemapChart as TreemapChartCore, type TreemapChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `TreemapChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-treemap-chart',\n\ttemplate: ``\n})\nexport class TreemapChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new TreemapChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as TreemapChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "WordCloudChart",
            "id": "component-WordCloudChart-5368526adb066b90a5a9388e58f8efcb935979de471b19cf87f31058383a61ccef2167ac0b85252135acac354faeba7a06acb5d9c9c31346506bb0e43057530c",
            "file": "projects/charts-angular/src/lib/charts/wordcloud-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-wordcloud-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 16,
                    "type": "ChartTabularData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 34,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartTabularData",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartRef'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>WordCloudChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `WordCloudChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core'\n\nimport { BaseChart } from './base-chart.component'\n\nimport { WordCloudChart as WordCloudChartCore, type WorldCloudChartOptions, type ChartTabularData } from '@carbon/charts'\n\n/**\n * Wrapper around `WordCloudChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: 'ibm-wordcloud-chart',\n\ttemplate: ``\n})\nexport class WordCloudChart extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new WordCloudChartCore(this.elementRef.nativeElement, {\n\t\t\tdata: this.data as ChartTabularData,\n\t\t\toptions: this.options as WorldCloudChartOptions\n\t\t})\n\n\t\tObject.assign(this, this.chart)\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "CardNodeModule",
            "id": "module-CardNodeModule-564c50ab343365a6238929bc42debcbe39f625cfdcbb75c525c50b2daa895d8dbb405b4dd3847f53dd8e637a572ffa5a06b7768f42b615c113789727a36ad1c0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { CardNode } from './card-node.component'\nimport { CardNodeColumn } from './card-node-column.component'\nimport { CardNodeLabel } from './card-node-label.component'\nimport { CardNodeSubtitle } from './card-node-subtitle.component'\nimport { CardNodeTitle } from './card-node-title.component'\nexport {\n\tCardNode,\n\tCardNodeColumn,\n\tCardNodeLabel,\n\tCardNodeSubtitle,\n\tCardNodeTitle\n}\n@NgModule({\n\tdeclarations: [\n\t\tCardNode,\n\t\tCardNodeColumn,\n\t\tCardNodeLabel,\n\t\tCardNodeSubtitle,\n\t\tCardNodeTitle\n\t],\n\texports: [\n\t\tCardNode,\n\t\tCardNodeColumn,\n\t\tCardNodeLabel,\n\t\tCardNodeSubtitle,\n\t\tCardNodeTitle\n\t],\n\timports: [CommonModule]\n})\nexport class CardNodeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardNode"
                        },
                        {
                            "name": "CardNodeColumn"
                        },
                        {
                            "name": "CardNodeLabel"
                        },
                        {
                            "name": "CardNodeSubtitle"
                        },
                        {
                            "name": "CardNodeTitle"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardNode"
                        },
                        {
                            "name": "CardNodeColumn"
                        },
                        {
                            "name": "CardNodeLabel"
                        },
                        {
                            "name": "CardNodeSubtitle"
                        },
                        {
                            "name": "CardNodeTitle"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartsModule",
            "id": "module-ChartsModule-a1fdc50d4173a2b42678f491a1a425fd3cbbead055f5694de70aac1fa30c8d729ba5ed88dfd0505e77d8f04410aa690599d2efb4037724ff6cfbb65cbbdd1a73",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/charts/charts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport {\n\tAlluvialChart,\n\tAreaChart,\n\tBaseChart,\n\tBoxplotChart,\n\tBubbleChart,\n\tBulletChart,\n\tCirclePackChart,\n\tComboChart,\n\tDonutChart,\n\tGaugeChart,\n\tGroupedBarChart,\n\tHeatmapChart,\n\tHistogramChart,\n\tLineChart,\n\tLollipopChart,\n\tMeterChart,\n\tPieChart,\n\tRadarChart,\n\tScatterChart,\n\tSimpleBarChart,\n\tStackedAreaChart,\n\tStackedBarChart,\n\tTreeChart,\n\tTreemapChart,\n\tWordCloudChart\n} from './index'\n\n@NgModule({\n\timports: [CommonModule],\n\tdeclarations: [\n\t\tBaseChart,\n\t\tAlluvialChart,\n\t\tAreaChart,\n\t\tStackedAreaChart,\n\t\tSimpleBarChart,\n\t\tGroupedBarChart,\n\t\tStackedBarChart,\n\t\tBoxplotChart,\n\t\tBubbleChart,\n\t\tBulletChart,\n\t\tDonutChart,\n\t\tGaugeChart,\n\t\tHeatmapChart,\n\t\tHistogramChart,\n\t\tLineChart,\n\t\tLollipopChart,\n\t\tPieChart,\n\t\tScatterChart,\n\t\tMeterChart,\n\t\tRadarChart,\n\t\tComboChart,\n\t\tTreeChart,\n\t\tTreemapChart,\n\t\tCirclePackChart,\n\t\tWordCloudChart\n\t],\n\texports: [\n\t\tBaseChart,\n\t\tAlluvialChart,\n\t\tAreaChart,\n\t\tStackedAreaChart,\n\t\tSimpleBarChart,\n\t\tGroupedBarChart,\n\t\tStackedBarChart,\n\t\tBoxplotChart,\n\t\tBubbleChart,\n\t\tBulletChart,\n\t\tDonutChart,\n\t\tGaugeChart,\n\t\tHeatmapChart,\n\t\tHistogramChart,\n\t\tLineChart,\n\t\tLollipopChart,\n\t\tPieChart,\n\t\tScatterChart,\n\t\tMeterChart,\n\t\tRadarChart,\n\t\tComboChart,\n\t\tTreeChart,\n\t\tTreemapChart,\n\t\tCirclePackChart,\n\t\tWordCloudChart\n\t]\n})\nexport class ChartsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlluvialChart"
                        },
                        {
                            "name": "AreaChart"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChart"
                        },
                        {
                            "name": "BubbleChart"
                        },
                        {
                            "name": "BulletChart"
                        },
                        {
                            "name": "CirclePackChart"
                        },
                        {
                            "name": "ComboChart"
                        },
                        {
                            "name": "DonutChart"
                        },
                        {
                            "name": "GaugeChart"
                        },
                        {
                            "name": "GroupedBarChart"
                        },
                        {
                            "name": "HeatmapChart"
                        },
                        {
                            "name": "HistogramChart"
                        },
                        {
                            "name": "LineChart"
                        },
                        {
                            "name": "LollipopChart"
                        },
                        {
                            "name": "MeterChart"
                        },
                        {
                            "name": "PieChart"
                        },
                        {
                            "name": "RadarChart"
                        },
                        {
                            "name": "ScatterChart"
                        },
                        {
                            "name": "SimpleBarChart"
                        },
                        {
                            "name": "StackedAreaChart"
                        },
                        {
                            "name": "StackedBarChart"
                        },
                        {
                            "name": "TreeChart"
                        },
                        {
                            "name": "TreemapChart"
                        },
                        {
                            "name": "WordCloudChart"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AlluvialChart"
                        },
                        {
                            "name": "AreaChart"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChart"
                        },
                        {
                            "name": "BubbleChart"
                        },
                        {
                            "name": "BulletChart"
                        },
                        {
                            "name": "CirclePackChart"
                        },
                        {
                            "name": "ComboChart"
                        },
                        {
                            "name": "DonutChart"
                        },
                        {
                            "name": "GaugeChart"
                        },
                        {
                            "name": "GroupedBarChart"
                        },
                        {
                            "name": "HeatmapChart"
                        },
                        {
                            "name": "HistogramChart"
                        },
                        {
                            "name": "LineChart"
                        },
                        {
                            "name": "LollipopChart"
                        },
                        {
                            "name": "MeterChart"
                        },
                        {
                            "name": "PieChart"
                        },
                        {
                            "name": "RadarChart"
                        },
                        {
                            "name": "ScatterChart"
                        },
                        {
                            "name": "SimpleBarChart"
                        },
                        {
                            "name": "StackedAreaChart"
                        },
                        {
                            "name": "StackedBarChart"
                        },
                        {
                            "name": "TreeChart"
                        },
                        {
                            "name": "TreemapChart"
                        },
                        {
                            "name": "WordCloudChart"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EdgeModule",
            "id": "module-EdgeModule-e29566e5d463b62933c639148a6ea56491bd4132fbc9ddc3a62e4d8516f9189745e5c244d28e85298e3f5225a0582af39cceee785c46de31c75ba0770aa18c5e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/edges/edge.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { Edge } from './edge.component'\nexport { Edge } from './edge.component'\n\n@NgModule({\n\tdeclarations: [Edge],\n\texports: [Edge],\n\timports: [CommonModule]\n})\nexport class EdgeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Edge"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "Edge"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MarkerModule",
            "id": "module-MarkerModule-b1649d0a56547d0dd7873f6225233621f9f03b5efadd0f3cfaa1edc73201a4bfd4589a4f8bd796fd2ea2235eb28e6b96009f3a61c25329d26784887f4eab20bc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport {\n\tMarker,\n\tMarkerArrowLeft,\n\tMarkerArrowRight,\n\tMarkerShapeNode,\n\tMarkerDiamond,\n\tMarkerSquare,\n\tMarkerTee\n} from './marker.component'\n\nexport {\n\tMarker,\n\tMarkerArrowLeft,\n\tMarkerArrowRight,\n\tMarkerShapeNode,\n\tMarkerDiamond,\n\tMarkerSquare,\n\tMarkerTee\n}\n@NgModule({\n\tdeclarations: [\n\t\tMarker,\n\t\tMarkerArrowLeft,\n\t\tMarkerArrowRight,\n\t\tMarkerShapeNode,\n\t\tMarkerDiamond,\n\t\tMarkerSquare,\n\t\tMarkerTee\n\t],\n\texports: [\n\t\tMarker,\n\t\tMarkerArrowLeft,\n\t\tMarkerArrowRight,\n\t\tMarkerShapeNode,\n\t\tMarkerDiamond,\n\t\tMarkerSquare,\n\t\tMarkerTee\n\t],\n\timports: [CommonModule]\n})\nexport class MarkerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Marker"
                        },
                        {
                            "name": "MarkerArrowLeft"
                        },
                        {
                            "name": "MarkerArrowRight"
                        },
                        {
                            "name": "MarkerDiamond"
                        },
                        {
                            "name": "MarkerShapeNode"
                        },
                        {
                            "name": "MarkerSquare"
                        },
                        {
                            "name": "MarkerTee"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "Marker"
                        },
                        {
                            "name": "MarkerArrowLeft"
                        },
                        {
                            "name": "MarkerArrowRight"
                        },
                        {
                            "name": "MarkerDiamond"
                        },
                        {
                            "name": "MarkerShapeNode"
                        },
                        {
                            "name": "MarkerSquare"
                        },
                        {
                            "name": "MarkerTee"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShapeNodeModule",
            "id": "module-ShapeNodeModule-fe51b7449d70b2be53beb6b1fea6f9563c82241fe7807d5f0ba819fba344f6f8bf4217005effa74978f31dba5ca0c3bb56af20bb8c0e5f74e323decde1eaa5e5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/diagrams/nodes/shape/shape-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ShapeNode } from './shape-node.component'\nexport { ShapeNode } from './shape-node.component'\n\n@NgModule({\n\tdeclarations: [ShapeNode],\n\texports: [ShapeNode],\n\timports: [CommonModule]\n})\nexport class ShapeNodeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShapeNode"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShapeNode"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "carbonPrefix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/lib/diagrams/config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'cds'"
            },
            {
                "name": "circleSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "edgeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{ source: 'a', target: 'b', variant: 'dash-md' },\n\t{\n\t\tsource: 'c',\n\t\ttarget: 'b',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target)\n\t},\n\t{\n\t\tsource: 'd',\n\t\ttarget: 'c',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target),\n\t\tvariant: 'tunnel'\n\t}\n]"
            },
            {
                "name": "edgeMapped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "edgeData.map((link) => {\n\tconst sourceNode = nodeData.find((node) => node.id === link.source)\n\tconst targetNode = nodeData.find((node) => node.id === link.target)\n\n\treturn {\n\t\t...link,\n\t\tsource: {\n\t\t\tx: sourceNode!.x + sourceNode!.nodeWidth / 2,\n\t\t\ty: sourceNode!.y + sourceNode!.nodeHeight / 2\n\t\t},\n\t\ttarget: {\n\t\t\tx: targetNode!.x + targetNode!.nodeWidth / 2,\n\t\t\ty: targetNode!.y + targetNode!.nodeHeight / 2\n\t\t}\n\t}\n})"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(demo: Demo) => `\n\t<div class=\"container theme--white\">\n\t\t<div class=\"v10-banner\">\n\t\t\tThis version relies on <b>Carbon v11</b>. If you're using Carbon v10, <a href=\"https://carbon-charts-0x.netlify.app\" target=\"_blank\" rel=\"noreferrer\">see the legacy demo site</a>\n\t\t</div>\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"cds--tag cds--tag--green component-name\">${demo.chartType.angular}</span>\n\t\t</h3>\n\t\t<p class=\"props\">\n\t\t  <b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a>\n\t\t</p>\n\t\t<div class=\"marginTop-30\" id=\"chart-demo\">\n\t\t\t<${demo.chartType.angular}\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[options]=\"options\"\n\t\t\t\t#${demo.chartType.vanilla}>\n\t\t\t</${demo.chartType.angular}>\n\t\t</div>\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\t\t<div class=\"marginTop-30\" *ngFor=\"let codeFile of codeFiles;\">\n\t\t\t<h5>{{codeFile}}</h5>\n\t\t\t<div class=\"cds--snippet cds--snippet--multi cds--snippet--expand marginTop-15\" data-code-snippet>\n\t\t\t\t<div class=\"cds--snippet-container\" aria-label=\"Code Snippet Text\">\n\t\t\t\t\t<pre><code>{{code[codeFile]}}</code></pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(content: string) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${content}\n\t</div>\n`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(content: string) => `\n<div class=\"container theme--white\">\n  ${content}\n</div>\n`"
            },
            {
                "name": "introSection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Docs', module).add(\n\t'Welcome',\n\t() => ({\n\t\ttemplate: `\n\t\t<div class=\"container intro\">\n\t\t\t<div\n\t\t\tclass=\"welcome__container\"\n\t\t\tstyle=\"background: url(./welcome.png) no-repeat center center fixed; background-size: cover;\">\n\t\t\t\t<div class=\"welcome__content\">\n\t\t\t\t\t<h2 class=\"welcome__heading\">Carbon Charts</h2>\n\t\t\t\t\t<h4 class=\"welcome__heading welcome__heading--subtitle\">(Angular)</h4>\n\t\t\t\t\t<h5 class=\"welcome__heading welcome__heading--other\">Other versions</h5>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com\" class=\"welcome__heading welcome__heading--other\">Vanilla JavaScript</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/react\" class=\"welcome__heading welcome__heading--other\">React</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/vue\" class=\"welcome__heading welcome__heading--other\">Vue</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/svelte\" class=\"welcome__heading welcome__heading--other\">Svelte</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span class=\"netlify\">Deploys by <a href=\"https://netlify.com\" target=\"_blank\">Netlify</a></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`\n\t}),\n\t{\n\t\tcontrols: {\n\t\t\thideNoControlsWarning: true\n\t\t}\n\t}\n)"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 300, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 0 }"
            },
            {
                "name": "linkTargetCurve",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 200 }"
            },
            {
                "name": "nodeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{ id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n\t{ id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n\t{\n\t\tid: 'c',\n\t\tx: 600,\n\t\ty: 200,\n\t\ticon: 'user',\n\t\tcircle: true,\n\t\tnodeWidth: circleSize,\n\t\tnodeHeight: circleSize\n\t},\n\t{ id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight }\n]"
            },
            {
                "name": "nodeHeight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "nodeWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "200"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n\tparameters: {\n\t\tactions: { argTypesRegex: '^on[A-Z].*' },\n\t\tcontrols: {\n\t\t\tmatchers: {\n\t\t\t\tcolor: /(background|color)$/i,\n\t\t\t\tdate: /Date$/\n\t\t\t}\n\t\t},\n\t\tdocs: {\n\t\t\ttheme: themes.dark\n\t\t}\n\t}\n}"
            },
            {
                "name": "ProgrammaticStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "SimpleStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "stories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Diagrams', module)"
            },
            {
                "name": "template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/charts-angular/src/lib/diagrams/config.ts": [
                {
                    "name": "carbonPrefix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/lib/diagrams/config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'cds'"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts": [
                {
                    "name": "circleSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "edgeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{ source: 'a', target: 'b', variant: 'dash-md' },\n\t{\n\t\tsource: 'c',\n\t\ttarget: 'b',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target)\n\t},\n\t{\n\t\tsource: 'd',\n\t\ttarget: 'c',\n\t\tpath: (source: any, target: any) => CarbonComponent.buildElbowPathString(source, target),\n\t\tvariant: 'tunnel'\n\t}\n]"
                },
                {
                    "name": "edgeMapped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "edgeData.map((link) => {\n\tconst sourceNode = nodeData.find((node) => node.id === link.source)\n\tconst targetNode = nodeData.find((node) => node.id === link.target)\n\n\treturn {\n\t\t...link,\n\t\tsource: {\n\t\t\tx: sourceNode!.x + sourceNode!.nodeWidth / 2,\n\t\t\ty: sourceNode!.y + sourceNode!.nodeHeight / 2\n\t\t},\n\t\ttarget: {\n\t\t\tx: targetNode!.x + targetNode!.nodeWidth / 2,\n\t\t\ty: targetNode!.y + targetNode!.nodeHeight / 2\n\t\t}\n\t}\n})"
                },
                {
                    "name": "nodeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{ id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n\t{ id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n\t{\n\t\tid: 'c',\n\t\tx: 600,\n\t\ty: 200,\n\t\ticon: 'user',\n\t\tcircle: true,\n\t\tnodeWidth: circleSize,\n\t\tnodeHeight: circleSize\n\t},\n\t{ id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight }\n]"
                },
                {
                    "name": "nodeHeight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "nodeWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "200"
                },
                {
                    "name": "ProgrammaticStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "SimpleStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "stories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Diagrams', module)"
                }
            ],
            "projects/charts-angular/src/stories/all.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(demo: Demo) => `\n\t<div class=\"container theme--white\">\n\t\t<div class=\"v10-banner\">\n\t\t\tThis version relies on <b>Carbon v11</b>. If you're using Carbon v10, <a href=\"https://carbon-charts-0x.netlify.app\" target=\"_blank\" rel=\"noreferrer\">see the legacy demo site</a>\n\t\t</div>\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"cds--tag cds--tag--green component-name\">${demo.chartType.angular}</span>\n\t\t</h3>\n\t\t<p class=\"props\">\n\t\t  <b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a>\n\t\t</p>\n\t\t<div class=\"marginTop-30\" id=\"chart-demo\">\n\t\t\t<${demo.chartType.angular}\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[options]=\"options\"\n\t\t\t\t#${demo.chartType.vanilla}>\n\t\t\t</${demo.chartType.angular}>\n\t\t</div>\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\t\t<div class=\"marginTop-30\" *ngFor=\"let codeFile of codeFiles;\">\n\t\t\t<h5>{{codeFile}}</h5>\n\t\t\t<div class=\"cds--snippet cds--snippet--multi cds--snippet--expand marginTop-15\" data-code-snippet>\n\t\t\t\t<div class=\"cds--snippet-container\" aria-label=\"Code Snippet Text\">\n\t\t\t\t\t<pre><code>{{code[codeFile]}}</code></pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>`"
                },
                {
                    "name": "introSection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Docs', module).add(\n\t'Welcome',\n\t() => ({\n\t\ttemplate: `\n\t\t<div class=\"container intro\">\n\t\t\t<div\n\t\t\tclass=\"welcome__container\"\n\t\t\tstyle=\"background: url(./welcome.png) no-repeat center center fixed; background-size: cover;\">\n\t\t\t\t<div class=\"welcome__content\">\n\t\t\t\t\t<h2 class=\"welcome__heading\">Carbon Charts</h2>\n\t\t\t\t\t<h4 class=\"welcome__heading welcome__heading--subtitle\">(Angular)</h4>\n\t\t\t\t\t<h5 class=\"welcome__heading welcome__heading--other\">Other versions</h5>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com\" class=\"welcome__heading welcome__heading--other\">Vanilla JavaScript</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/react\" class=\"welcome__heading welcome__heading--other\">React</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/vue\" class=\"welcome__heading welcome__heading--other\">Vue</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/svelte\" class=\"welcome__heading welcome__heading--other\">Svelte</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span class=\"netlify\">Deploys by <a href=\"https://netlify.com\" target=\"_blank\">Netlify</a></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`\n\t}),\n\t{\n\t\tcontrols: {\n\t\t\thideNoControlsWarning: true\n\t\t}\n\t}\n)"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(content: string) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${content}\n\t</div>\n`"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/utils.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(content: string) => `\n<div class=\"container theme--white\">\n  ${content}\n</div>\n`"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts": [
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 300, y: 0 }"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts": [
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 0 }"
                },
                {
                    "name": "linkTargetCurve",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 200 }"
                }
            ],
            "projects/charts-angular/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n\tparameters: {\n\t\tactions: { argTypesRegex: '^on[A-Z].*' },\n\t\tcontrols: {\n\t\t\tmatchers: {\n\t\t\t\tcolor: /(background|color)$/i,\n\t\t\t\tdate: /Date$/\n\t\t\t}\n\t\t},\n\t\tdocs: {\n\t\t\ttheme: themes.dark\n\t\t}\n\t}\n}"
                }
            ],
            "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts": [
                {
                    "name": "template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 28,
        "status": "medium",
        "files": [
            {
                "filePath": "projects/charts-angular/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/alluvial-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlluvialChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/area-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedAreaChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/area-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AreaChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bar-chart-grouped.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupedBarChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bar-chart-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleBarChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bar-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedBarChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/base-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseChart",
                "coveragePercent": 66,
                "coverageCount": "8/12",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/boxplot-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoxplotChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bubble-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BubbleChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/bullet-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BulletChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/circle-pack-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CirclePackChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/combo-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComboChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/donut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonutChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/gauge-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GaugeChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/heatmap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeatmapChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/histogram-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HistogramChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/lollipop-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LollipopChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/meter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MeterChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/pie-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PieChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/radar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadarChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/scatter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScatterChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/tree-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/treemap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreemapChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/charts/wordcloud-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WordCloudChart",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "carbonPrefix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Edge",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/edge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Coordinates",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Marker",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowLeft",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowRight",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerDiamond",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerShapeNode",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerSquare",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerTee",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/edges/marker/marker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-column.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeColumn",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeLabel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-subtitle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeSubtitle",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeTitle",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/cards/card-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNode",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/diagrams/nodes/shape/shape-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShapeNode",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "introSection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/chart-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartWrapper",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "circleSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeMapped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeHeight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgrammaticStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0-diagrams-start-here.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges-marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-edges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTargetCurve",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/diagrams-nodes-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/example1/diagram-example1.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DiagramExample1",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}