{
    "pipes": [],
    "interfaces": [
        {
            "name": "Coordinates",
            "id": "interface-Coordinates-df9411fca3f72089a4ad8fca47d956f8a883b3d0992e2334f5968b228336a773a934676934edfa69319d6590538de58fe28795b058a02eead50029f806265cbf",
            "file": "projects/charts-angular/src/stories/diagrams/edge/edge.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { buildStraightPathString } from '@carbon/charts/components/diagrams/buildPaths';\n\nimport { carbonPrefix } from '../configs';\n\ninterface Coordinates {\n  x: number;\n  y: number;\n}\n@Component({\n  selector: '[ibm-graph-edge]',\n  template: `\n    <svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n      <svg:path\n        [ngClass]=\"namespace + '__container'\"\n        [attr.d]=\"path ? path : straight(source, target)\"\n      />\n      <svg:path\n        [ngClass]=\"namespace + '__outer'\"\n        [attr.d]=\"path ? path : straight(source, target)\"\n      />\n      <svg:path\n        [ngClass]=\"namespace + '__inner'\"\n        [attr.d]=\"path ? path : straight(source, target)\"\n        [ngStyle]=\"{ stroke: color }\"\n        [attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n        [attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\"\n      />\n    </svg:g>\n  `,\n})\nexport class EdgeComponent {\n  @Input() color = '';\n  @Input() markerEnd = '';\n  @Input() markerStart = '';\n  @Input() source: Coordinates = { x: 0, y: 0 };\n  @Input() target: Coordinates = { x: 0, y: 0 };\n  @Input() variant?:\n    | 'dash-sm'\n    | 'dash-md'\n    | 'dash-lg'\n    | 'dash-xl'\n    | 'double'\n    | 'tunnel';\n  @Input() path = '';\n\n  pathClasses = '';\n  namespace = `${carbonPrefix}--cc--edge`;\n  straight = buildStraightPathString;\n}\n",
            "properties": [
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlluvialChartComponent",
            "id": "component-AlluvialChartComponent-5382fc6cdfea05105660afb5ebb99ca250c37c274f1e21c2b5bd0a70e23b4863025f90ecf1ecd2b3347597f88731846bbb1e17d577eb91ff97e94089c0c21b11",
            "file": "projects/charts-angular/src/lib/alluvial-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-alluvial-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Alluvial</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Alluvial` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { AlluvialChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `Alluvial` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-alluvial-chart\",\n\ttemplate: ``\n})\nexport class AlluvialChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new AlluvialChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "AreaChartComponent",
            "id": "component-AreaChartComponent-d15c645776bb2e75b6181f9b6efd0024bbdbb1b59b1c4636581271e8797c6196d69d495b879b34f445f3c6422298f6a3f262374b77fecb538b8acca479447a0c",
            "file": "projects/charts-angular/src/lib/area-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "<div #nChart class=\"ibm-chart-container\">\n</div>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>AreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `AreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { AreaChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `AreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-area-chart\",\n\ttemplate: `\n\t\t<div #nChart class=\"ibm-chart-container\">\n\t\t</div>\n\t`\n})\nexport class AreaChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new AreaChart(\n\t\t\tthis.chartRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BaseChart",
            "id": "component-BaseChart-98739bfaf085a45096a86a264d485326e242c6a01f2858c86a6483730670de8ba89941d111aa87da55aa6ad4b343800cfe86b33b98721a5b60dd6b9a0fa62b55",
            "file": "projects/charts-angular/src/lib/base-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-base-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n"
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `chartRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>chartRef</code> and draw it.</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BaseChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BaseChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewChild,\n  OnInit,\n  AfterViewInit,\n  ElementRef,\n} from '@angular/core';\n\n/**\n * Wrapper around `BaseChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-base-chart',\n  template: ``,\n})\nexport class BaseChart implements AfterViewInit, OnInit {\n  constructor(protected elementRef: ElementRef) {}\n\n  /**\n   * Data passed to charts library for displaying\n   */\n  @Input() set data(newData) {\n    // If data already exists, that means the chart has been initialized\n    const dataExistsAlready = this._data !== null && this._data !== undefined;\n\n    this._data = newData;\n\n    if (dataExistsAlready) {\n      this.chart.model.setData(newData);\n    }\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  /**\n   * Options passed to charts library\n   */\n  @Input() set options(newOptions) {\n    // If data already exists, that means the chart has been initialized\n    const optionsExistAlready =\n      this._options !== null && this._options !== undefined;\n\n    this._options = newOptions;\n\n    if (optionsExistAlready) {\n      this.chart.model.setOptions(newOptions);\n    }\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * Chart width\n   */\n  @Input() width: any;\n\n  /**\n   * Chart height\n   */\n  @Input() height: any;\n\n  /**\n   * Chart container element ref\n   */\n  @ViewChild('nChart') chartRef!: ElementRef<HTMLElement>;\n\n  /**\n   * Chart object instance\n   *\n   * You can use this to do whatever you would normally do with a chart if you used\n   * charts library directly.\n   */\n  chart: any;\n\n  private _data: any;\n  private _options: any;\n\n  ngOnInit() {\n    // Width prop is mandatory for the wrappers\n    if (this.width) {\n      this.options.width = this.width;\n    }\n\n    // Height prop is mandatory for the wrappers\n    if (this.height) {\n      this.options.height = this.height;\n    }\n  }\n\n  /**\n   * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n   */\n  ngAfterViewInit() {\n    console.log('You need to implement your own `ngAfterViewInit()` function');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newData",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "rawdescription": "\n\nData passed to charts library for displaying\n",
                        "description": "<p>Data passed to charts library for displaying</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newData",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "data",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                },
                "options": {
                    "name": "options",
                    "setSignature": {
                        "name": "options",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newOptions",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 43,
                        "rawdescription": "\n\nOptions passed to charts library\n",
                        "description": "<p>Options passed to charts library</p>\n",
                        "jsdoctags": [
                            {
                                "name": "newOptions",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "options",
                        "type": "",
                        "returnType": "",
                        "line": 55
                    }
                }
            }
        },
        {
            "name": "BoxplotChartComponent",
            "id": "component-BoxplotChartComponent-716554496ac1023f183d6823d1cb7262a83ad47978cc08d0c22f60c495f687fb74abb7119781d5a54fffc3f11706b2bc95a15f280f55bade7a5f4570c3961409",
            "file": "projects/charts-angular/src/lib/boxplot-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-boxplot-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BoxplotChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BoxplotChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { BoxplotChart } from '@carbon/charts';\n\n/**\n * Wrapper around `BoxplotChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-boxplot-chart',\n  template: ``,\n})\nexport class BoxplotChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new BoxplotChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BubbleChartComponent",
            "id": "component-BubbleChartComponent-f05cefd1ecb33cc4aa3da070edeedf9beba1ad074645ea3f7e3bd1d28b9192fb4b637ff50d75565a4c058e6ec3f9ac17436a7fb6398b75f60ae71706b9d0a1ec",
            "file": "projects/charts-angular/src/lib/bubble-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bubble-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { BubbleChart } from '@carbon/charts';\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-bubble-chart',\n  template: ``,\n})\nexport class BubbleChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new BubbleChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "BulletChartComponent",
            "id": "component-BulletChartComponent-d2e87a809f3f956843eb7f174763d053ac888b063d2ef9f996ce29f6d0fda7dd5cbc4576e5cc9e82e288e41872a24ad01712c8324e5c7d9666b7e50388de8351",
            "file": "projects/charts-angular/src/lib/bullet-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-bullet-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BulletChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BulletChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { BulletChart } from '@carbon/charts';\n\n/**\n * Wrapper around `BulletChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-bullet-chart',\n  template: ``,\n})\nexport class BulletChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new BulletChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "CardNodeColumnComponent",
            "id": "component-CardNodeColumnComponent-91b76ea2bd527f368cc7b903417c188f80685558ce1cdbec2609da7edf290343e7777dca5caaa65c0927255eb9067dfc28839bac4ac4b8657fa0a5fd6296a2af",
            "file": "projects/charts-angular/src/stories/diagrams/card-node/card-node-column.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-column",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div>\n  <ng-content></ng-content>\n</xhtml:div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "farsideColumn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, HostBinding } from '@angular/core';\nimport { carbonPrefix } from '../configs';\n\n@Component({\n  selector: 'ibm-diagram-card-node-column',\n  template: `\n    <xhtml:div>\n      <ng-content></ng-content>\n    </xhtml:div>\n  `,\n})\nexport class CardNodeColumnComponent {\n  @Input() farsideColumn = false;\n\n  @HostBinding('class') get class() {\n    const farsideClassName = this.farsideColumn\n      ? `${carbonPrefix}--cc--card-node__column--farside`\n      : '';\n\n    return `${carbonPrefix}--cc--card-node__column ${farsideClassName}`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "class": {
                    "name": "class",
                    "getSignature": {
                        "name": "class",
                        "type": "",
                        "returnType": "",
                        "line": 15
                    }
                }
            }
        },
        {
            "name": "CardNodeComponent",
            "id": "component-CardNodeComponent-24a46b5ebbe946de8245ce3e73e7b47cf21eaa16d8c77b2a432a2c2837a50b27049cc44e1e70a20fd2f3fbef179b31c1d127d32dcb00bdda7a8502b052747fb3",
            "file": "projects/charts-angular/src/stories/diagrams/card-node/card-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n  <xhtml:div\n    *ngSwitchCase=\"'div'\"\n    [ngClass]=\"[\n      namespace,\n      stacked ? namespace + '--stacked' : '',\n      namespace + '--' + component\n    ]\"\n    [ngStyle]=\"{\n      'border-color': color,\n      position: position\n    }\"\n    (mouseenter)=\"mouseEnter.emit($event)\"\n    (mouseover)=\"mouseOver.emit($event)\"\n    (mouseout)=\"mouseOut.emit($event)\"\n    (mouseleave)=\"mouseLeave.emit($event)\"\n    (mousemove)=\"mouseMove.emit($event)\"\n    tabindex=\"0\"\n  >\n    <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n  </xhtml:div>\n\n  <xhtml:button\n    *ngSwitchCase=\"'button'\"\n    [ngClass]=\"[\n      namespace,\n      stacked ? namespace + '--stacked' : '',\n      namespace + '--' + component\n    ]\"\n    [ngStyle]=\"{\n      'border-color': color,\n      position: position\n    }\"\n    (click)=\"click.emit($event)\"\n    (mouseenter)=\"mouseEnter.emit($event)\"\n    (mouseover)=\"mouseOver.emit($event)\"\n    (mouseout)=\"mouseOut.emit($event)\"\n    (mouseleave)=\"mouseLeave.emit($event)\"\n    (mousemove)=\"mouseMove.emit($event)\"\n    tabindex=\"0\"\n  >\n    <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n  </xhtml:button>\n\n  <xhtml:a\n    *ngSwitchCase=\"'a'\"\n    [ngClass]=\"[\n      namespace,\n      stacked ? namespace + '--stacked' : '',\n      namespace + '--' + component\n    ]\"\n    [attr.href]=\"href\"\n    [ngStyle]=\"{ 'border-color': color, position: position }\"\n    (mouseenter)=\"mouseEnter.emit($event)\"\n    (mouseover)=\"mouseOver.emit($event)\"\n    (mouseout)=\"mouseOut.emit($event)\"\n    (mouseleave)=\"mouseLeave.emit($event)\"\n    (mousemove)=\"mouseMove.emit($event)\"\n    tabindex=\"0\"\n  >\n    <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n  </xhtml:a>\n</ng-container>\n<ng-template #nodeTemplate>\n  <ng-content></ng-content>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'static'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { carbonPrefix } from '../configs';\n\n@Component({\n  selector: 'ibm-diagram-card-node',\n  template: `\n    <ng-container [ngSwitch]=\"component\">\n      <xhtml:div\n        *ngSwitchCase=\"'div'\"\n        [ngClass]=\"[\n          namespace,\n          stacked ? namespace + '--stacked' : '',\n          namespace + '--' + component\n        ]\"\n        [ngStyle]=\"{\n          'border-color': color,\n          position: position\n        }\"\n        (mouseenter)=\"mouseEnter.emit($event)\"\n        (mouseover)=\"mouseOver.emit($event)\"\n        (mouseout)=\"mouseOut.emit($event)\"\n        (mouseleave)=\"mouseLeave.emit($event)\"\n        (mousemove)=\"mouseMove.emit($event)\"\n        tabindex=\"0\"\n      >\n        <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n      </xhtml:div>\n\n      <xhtml:button\n        *ngSwitchCase=\"'button'\"\n        [ngClass]=\"[\n          namespace,\n          stacked ? namespace + '--stacked' : '',\n          namespace + '--' + component\n        ]\"\n        [ngStyle]=\"{\n          'border-color': color,\n          position: position\n        }\"\n        (click)=\"click.emit($event)\"\n        (mouseenter)=\"mouseEnter.emit($event)\"\n        (mouseover)=\"mouseOver.emit($event)\"\n        (mouseout)=\"mouseOut.emit($event)\"\n        (mouseleave)=\"mouseLeave.emit($event)\"\n        (mousemove)=\"mouseMove.emit($event)\"\n        tabindex=\"0\"\n      >\n        <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n      </xhtml:button>\n\n      <xhtml:a\n        *ngSwitchCase=\"'a'\"\n        [ngClass]=\"[\n          namespace,\n          stacked ? namespace + '--stacked' : '',\n          namespace + '--' + component\n        ]\"\n        [attr.href]=\"href\"\n        [ngStyle]=\"{ 'border-color': color, position: position }\"\n        (mouseenter)=\"mouseEnter.emit($event)\"\n        (mouseover)=\"mouseOver.emit($event)\"\n        (mouseout)=\"mouseOut.emit($event)\"\n        (mouseleave)=\"mouseLeave.emit($event)\"\n        (mousemove)=\"mouseMove.emit($event)\"\n        tabindex=\"0\"\n      >\n        <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n      </xhtml:a>\n    </ng-container>\n    <ng-template #nodeTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class CardNodeComponent implements OnInit {\n  @Input() as = 'div';\n  @Input() href = '';\n  @Input() color = '';\n  @Input() stacked = false;\n  @Input() position: string = 'static';\n\n  @Output() click: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseOver: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseOut: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseMove: EventEmitter<any> = new EventEmitter<any>();\n\n  namespace = `${carbonPrefix}--cc--card-node`;\n\n  component = 'div';\n\n  ngOnInit() {\n    if (this.href) {\n      this.component = 'a';\n    } else {\n      this.component = this.as;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "CardNodeLabelComponent",
            "id": "component-CardNodeLabelComponent-aafa3c2c3714608fc112dea4c3416d0c6abeae2d278404ee72530255dc0ec675db9825380398e8a37868cdf981e7a85182083b6e1b84be0e1dda454b1ef75d74",
            "file": "projects/charts-angular/src/stories/diagrams/card-node/card-node-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-label",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:label [ngClass]=\"namespace\">\n  <ng-content></ng-content>\n</xhtml:label>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__label`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { carbonPrefix } from '../configs';\n\n@Component({\n  selector: 'ibm-diagram-card-node-label',\n  template: `\n    <xhtml:label [ngClass]=\"namespace\">\n      <ng-content></ng-content>\n    </xhtml:label>\n  `,\n})\nexport class CardNodeLabelComponent {\n  namespace = `${carbonPrefix}--cc--card-node__label`;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeSubtitleComponent",
            "id": "component-CardNodeSubtitleComponent-e7bfceab8ac4a2fef1df1660dd52606dc7cdb5fcdb54b81b71ad4746bd26c48cc1b5212eacdc368861d54850f2e52d25f46a0c05f2c057ef0a3a0f2d1ac89ffb",
            "file": "projects/charts-angular/src/stories/diagrams/card-node/card-node-subtitle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-subtitle",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n  <ng-content></ng-content>\n</xhtml:div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__subtitle`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { carbonPrefix } from '../configs';\n\n@Component({\n  selector: 'ibm-diagram-card-node-subtitle',\n  template: `\n    <xhtml:div [ngClass]=\"namespace\">\n      <ng-content></ng-content>\n    </xhtml:div>\n  `,\n})\nexport class CardNodeSubtitleComponent {\n  namespace = `${carbonPrefix}--cc--card-node__subtitle`;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CardNodeTitleComponent",
            "id": "component-CardNodeTitleComponent-5dc58210d051ee13b20e9d0ffd910db2de761303c7c57c652017d35206d386cbcdf1a930ca55e9d500c274f077ed68d1964df70e6d52cd9155da7b85a7d27515",
            "file": "projects/charts-angular/src/stories/diagrams/card-node/card-node-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-card-node-title",
            "styleUrls": [],
            "styles": [],
            "template": "<xhtml:div [ngClass]=\"namespace\">\n  <ng-content></ng-content>\n</xhtml:div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--card-node__title`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { carbonPrefix } from '../configs';\n\n@Component({\n  selector: 'ibm-diagram-card-node-title',\n  template: `\n    <xhtml:div [ngClass]=\"namespace\">\n      <ng-content></ng-content>\n    </xhtml:div>\n  `,\n})\nexport class CardNodeTitleComponent {\n  namespace = `${carbonPrefix}--cc--card-node__title`;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CirclePackChartComponent",
            "id": "component-CirclePackChartComponent-943300479f8dee2d7978ae8fdfa28c70a2e45cc754df831156380f2b51151ba7c7492b283f580f5db73c807475ee0b6375ef32288eb6d5d8a7ba48dca70fd3ff",
            "file": "projects/charts-angular/src/lib/circle-pack-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-circle-pack-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>BubbleChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `BubbleChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { CirclePackChart } from '@carbon/charts';\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-circle-pack-chart',\n  template: ``,\n})\nexport class CirclePackChartComponent\n  extends BaseChart\n  implements AfterViewInit\n{\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new CirclePackChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ComboChartComponent",
            "id": "component-ComboChartComponent-57887d6247cc1843e3476562404f2b35eb5230f46c97e7a7decf973fb0256026b2c7211fe5221f3d34140b9eeadfc78e5c144e76bb03ef45c90ac0acf2e9d682",
            "file": "projects/charts-angular/src/lib/combo-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-combo-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ComboChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ComboChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\nimport { ComboChart } from '@carbon/charts';\n\n/**\n * Wrapper around `ComboChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-combo-chart',\n  template: ``,\n})\nexport class ComboChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new ComboChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "DonutChartComponent",
            "id": "component-DonutChartComponent-01b27d351906d3ac903776c5b9da724041b61eda5237cf96f44e4ebffd362eaf704fd892f2d526a839963c583d9b0182f5424344dc71410f951160f1cb1c8da4",
            "file": "projects/charts-angular/src/lib/donut-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-donut-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>DonutChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `DonutChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { DonutChart } from '@carbon/charts';\n\n/**\n * Wrapper around `DonutChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-donut-chart',\n  template: ``,\n})\nexport class DonutChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new DonutChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "EdgeComponent",
            "id": "component-EdgeComponent-df9411fca3f72089a4ad8fca47d956f8a883b3d0992e2334f5968b228336a773a934676934edfa69319d6590538de58fe28795b058a02eead50029f806265cbf",
            "file": "projects/charts-angular/src/stories/diagrams/edge/edge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-edge]",
            "styleUrls": [],
            "styles": [],
            "template": "<svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n  <svg:path\n    [ngClass]=\"namespace + '__container'\"\n    [attr.d]=\"path ? path : straight(source, target)\"\n  />\n  <svg:path\n    [ngClass]=\"namespace + '__outer'\"\n    [attr.d]=\"path ? path : straight(source, target)\"\n  />\n  <svg:path\n    [ngClass]=\"namespace + '__inner'\"\n    [attr.d]=\"path ? path : straight(source, target)\"\n    [ngStyle]=\"{ stroke: color }\"\n    [attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n    [attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\"\n  />\n</svg:g>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerEnd",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "markerStart",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "path",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "source",
                    "defaultValue": "{ x: 0, y: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "target",
                    "defaultValue": "{ x: 0, y: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Coordinates",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"dash-sm\" | \"dash-md\" | \"dash-lg\" | \"dash-xl\" | \"double\" | \"tunnel\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--edge`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "pathClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "straight",
                    "defaultValue": "buildStraightPathString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { buildStraightPathString } from '@carbon/charts/components/diagrams/buildPaths';\n\nimport { carbonPrefix } from '../configs';\n\ninterface Coordinates {\n  x: number;\n  y: number;\n}\n@Component({\n  selector: '[ibm-graph-edge]',\n  template: `\n    <svg:g [ngClass]=\"[namespace, variant ? namespace + '--' + variant : '']\">\n      <svg:path\n        [ngClass]=\"namespace + '__container'\"\n        [attr.d]=\"path ? path : straight(source, target)\"\n      />\n      <svg:path\n        [ngClass]=\"namespace + '__outer'\"\n        [attr.d]=\"path ? path : straight(source, target)\"\n      />\n      <svg:path\n        [ngClass]=\"namespace + '__inner'\"\n        [attr.d]=\"path ? path : straight(source, target)\"\n        [ngStyle]=\"{ stroke: color }\"\n        [attr.marker-start]=\"markerStart ? 'url(#' + markerStart + ')' : ''\"\n        [attr.marker-end]=\"markerEnd ? 'url(#' + markerEnd + ')' : ''\"\n      />\n    </svg:g>\n  `,\n})\nexport class EdgeComponent {\n  @Input() color = '';\n  @Input() markerEnd = '';\n  @Input() markerStart = '';\n  @Input() source: Coordinates = { x: 0, y: 0 };\n  @Input() target: Coordinates = { x: 0, y: 0 };\n  @Input() variant?:\n    | 'dash-sm'\n    | 'dash-md'\n    | 'dash-lg'\n    | 'dash-xl'\n    | 'double'\n    | 'tunnel';\n  @Input() path = '';\n\n  pathClasses = '';\n  namespace = `${carbonPrefix}--cc--edge`;\n  straight = buildStraightPathString;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "GaugeChartComponent",
            "id": "component-GaugeChartComponent-082eb6a8e27d652e0efd39133abfc8b874dd1c2a32f8e90dbdf17266cbf4363487b970e4affcc9cfe298318082fad5325c0c07a1090fa031ca7ca2feac4b6a03",
            "file": "projects/charts-angular/src/lib/gauge-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-gauge-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GaugeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GaugeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { GaugeChart } from '@carbon/charts';\n\n/**\n * Wrapper around `GaugeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-gauge-chart',\n  template: ``,\n})\nexport class GaugeChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new GaugeChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "GroupedBarChartComponent",
            "id": "component-GroupedBarChartComponent-e758a8cb1fc8523d921e1dc0d37d1b144ca65c3ce0760658ac51efc0948216563cb749bc17cfef41ed8602a4a5f61fb59b3b08603827908c1b31673defcae081",
            "file": "projects/charts-angular/src/lib/bar-chart-grouped.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-grouped-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>GroupedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `GroupedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { GroupedBarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `GroupedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-grouped-bar-chart\",\n\ttemplate: ``\n})\nexport class GroupedBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new GroupedBarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HeatmapChartComponent",
            "id": "component-HeatmapChartComponent-6063cd1bc8812ed8b6e3ca40bf3084c000cf7e2cdaeaaef6e90cb06e5649f7ee73d9ec4dcc29f7349394350f7ebbb72e9931bc5e77591d80c01be3fbf610191f",
            "file": "projects/charts-angular/src/lib/heatmap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-heatmap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>Heatmap</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `Heatmap` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { HeatmapChart } from '@carbon/charts';\n\n/**\n * Wrapper around `Heatmap` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-heatmap-chart',\n  template: ``,\n})\nexport class HeatmapChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new HeatmapChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "HistogramChartComponent",
            "id": "component-HistogramChartComponent-a753e75ab52212719bd6d86e06a2bff703a2beba0f78ddfc58f8b23fe96e6ee98d66773c536c0fcc50324a7130431eec3770a2e8ceb0ece1196d4c6973f7f0c8",
            "file": "projects/charts-angular/src/lib/histogram-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-histogram-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>HistogramChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `HistogramChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { HistogramChart } from '@carbon/charts';\n\n/**\n * Wrapper around `HistogramChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-histogram-chart',\n  template: ``,\n})\nexport class HistogramChartComponent\n  extends BaseChart\n  implements AfterViewInit\n{\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new HistogramChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LineChartComponent",
            "id": "component-LineChartComponent-b631d2e196ff7ed9bb36b0325f0f0aeff6a067ed2390784191d3d2740091cbb97e1a2c8f921c8ce5b59444b3ab7c8301f74f62359006bcb660f96ef3f4c9820e",
            "file": "projects/charts-angular/src/lib/line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-line-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LineChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LineChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { LineChart } from '@carbon/charts';\n\n/**\n * Wrapper around `LineChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-line-chart',\n  template: ``,\n})\nexport class LineChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new LineChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "LollipopChartComponent",
            "id": "component-LollipopChartComponent-6a0d20d0f744de6903044168d0349f5c4fd94cacc5a3b7e0afbb86ba4d7598360c734f526a296653e14c7284de63a57ee49f8ca8424e557bd65a3747365c2817",
            "file": "projects/charts-angular/src/lib/lollipop-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-lollipop-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>LollipopChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `LollipopChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { LollipopChart } from '@carbon/charts';\n\n/**\n * Wrapper around `LollipopChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-lollipop-chart',\n  template: ``,\n})\nexport class LollipopChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new LollipopChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "MarkerArrowLeftComponent",
            "id": "component-MarkerArrowLeftComponent-7686c64219aacd42c62ad97351cb838cf435830a65e51a9c121576c2daf97e8fdc8505136d7be50739736ac6b9d4383b4c061af47dfb5fde08211616cd0c35e1",
            "file": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-left]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  arrowLeft,\n  arrowRight,\n  circle,\n  diamond,\n  square,\n  tee,\n} from '@carbon/charts/components/diagrams/markerDefinitions';\n\nimport { carbonPrefix } from '../configs';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n  selector: '[ibm-graph-marker]',\n  template,\n})\nexport class MarkerComponent {\n  @Input() d = '';\n  @Input() color = '';\n  @Input() id = '';\n  @Input() orient: string | number = 'auto';\n  @Input() height: string | number = '';\n  @Input() width: string | number = '';\n  @Input() refX: string | number = '';\n  @Input() refY: string | number = '';\n  @Input() position: 'start' | 'end' = 'end';\n\n  namespace = `${carbonPrefix}--cc--marker`;\n\n  setAttributes = ({ d, id, height, width }: { d: string, id: string, height: number, width: number }) => {\n    const xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5;\n    const yPos = height / 2;\n\n    this.d = this.d || d;\n    this.id = this.id || id;\n    this.height = this.height || height;\n    this.width = this.width || width;\n    this.refX = this.refX || xPos;\n    this.refY = this.refY || yPos;\n  };\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowLeft });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowRight });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...circle });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...diamond });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...square });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...tee });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerArrowRightComponent",
            "id": "component-MarkerArrowRightComponent-7686c64219aacd42c62ad97351cb838cf435830a65e51a9c121576c2daf97e8fdc8505136d7be50739736ac6b9d4383b4c061af47dfb5fde08211616cd0c35e1",
            "file": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-arrow-right]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  arrowLeft,\n  arrowRight,\n  circle,\n  diamond,\n  square,\n  tee,\n} from '@carbon/charts/components/diagrams/markerDefinitions';\n\nimport { carbonPrefix } from '../configs';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n  selector: '[ibm-graph-marker]',\n  template,\n})\nexport class MarkerComponent {\n  @Input() d = '';\n  @Input() color = '';\n  @Input() id = '';\n  @Input() orient: string | number = 'auto';\n  @Input() height: string | number = '';\n  @Input() width: string | number = '';\n  @Input() refX: string | number = '';\n  @Input() refY: string | number = '';\n  @Input() position: 'start' | 'end' = 'end';\n\n  namespace = `${carbonPrefix}--cc--marker`;\n\n  setAttributes = ({ d, id, height, width }: { d: string, id: string, height: number, width: number }) => {\n    const xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5;\n    const yPos = height / 2;\n\n    this.d = this.d || d;\n    this.id = this.id || id;\n    this.height = this.height || height;\n    this.width = this.width || width;\n    this.refX = this.refX || xPos;\n    this.refY = this.refY || yPos;\n  };\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowLeft });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowRight });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...circle });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...diamond });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...square });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...tee });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerComponent",
            "id": "component-MarkerComponent-7686c64219aacd42c62ad97351cb838cf435830a65e51a9c121576c2daf97e8fdc8505136d7be50739736ac6b9d4383b4c061af47dfb5fde08211616cd0c35e1",
            "file": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  arrowLeft,\n  arrowRight,\n  circle,\n  diamond,\n  square,\n  tee,\n} from '@carbon/charts/components/diagrams/markerDefinitions';\n\nimport { carbonPrefix } from '../configs';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n  selector: '[ibm-graph-marker]',\n  template,\n})\nexport class MarkerComponent {\n  @Input() d = '';\n  @Input() color = '';\n  @Input() id = '';\n  @Input() orient: string | number = 'auto';\n  @Input() height: string | number = '';\n  @Input() width: string | number = '';\n  @Input() refX: string | number = '';\n  @Input() refY: string | number = '';\n  @Input() position: 'start' | 'end' = 'end';\n\n  namespace = `${carbonPrefix}--cc--marker`;\n\n  setAttributes = ({ d, id, height, width }: { d: string, id: string, height: number, width: number }) => {\n    const xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5;\n    const yPos = height / 2;\n\n    this.d = this.d || d;\n    this.id = this.id || id;\n    this.height = this.height || height;\n    this.width = this.width || width;\n    this.refX = this.refX || xPos;\n    this.refY = this.refY || yPos;\n  };\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowLeft });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowRight });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...circle });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...diamond });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...square });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...tee });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MarkerDiamondComponent",
            "id": "component-MarkerDiamondComponent-7686c64219aacd42c62ad97351cb838cf435830a65e51a9c121576c2daf97e8fdc8505136d7be50739736ac6b9d4383b4c061af47dfb5fde08211616cd0c35e1",
            "file": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-diamond]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  arrowLeft,\n  arrowRight,\n  circle,\n  diamond,\n  square,\n  tee,\n} from '@carbon/charts/components/diagrams/markerDefinitions';\n\nimport { carbonPrefix } from '../configs';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n  selector: '[ibm-graph-marker]',\n  template,\n})\nexport class MarkerComponent {\n  @Input() d = '';\n  @Input() color = '';\n  @Input() id = '';\n  @Input() orient: string | number = 'auto';\n  @Input() height: string | number = '';\n  @Input() width: string | number = '';\n  @Input() refX: string | number = '';\n  @Input() refY: string | number = '';\n  @Input() position: 'start' | 'end' = 'end';\n\n  namespace = `${carbonPrefix}--cc--marker`;\n\n  setAttributes = ({ d, id, height, width }: { d: string, id: string, height: number, width: number }) => {\n    const xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5;\n    const yPos = height / 2;\n\n    this.d = this.d || d;\n    this.id = this.id || id;\n    this.height = this.height || height;\n    this.width = this.width || width;\n    this.refX = this.refX || xPos;\n    this.refY = this.refY || yPos;\n  };\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowLeft });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowRight });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...circle });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...diamond });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...square });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...tee });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerShapeNodeComponent",
            "id": "component-MarkerShapeNodeComponent-7686c64219aacd42c62ad97351cb838cf435830a65e51a9c121576c2daf97e8fdc8505136d7be50739736ac6b9d4383b4c061af47dfb5fde08211616cd0c35e1",
            "file": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-circle]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  arrowLeft,\n  arrowRight,\n  circle,\n  diamond,\n  square,\n  tee,\n} from '@carbon/charts/components/diagrams/markerDefinitions';\n\nimport { carbonPrefix } from '../configs';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n  selector: '[ibm-graph-marker]',\n  template,\n})\nexport class MarkerComponent {\n  @Input() d = '';\n  @Input() color = '';\n  @Input() id = '';\n  @Input() orient: string | number = 'auto';\n  @Input() height: string | number = '';\n  @Input() width: string | number = '';\n  @Input() refX: string | number = '';\n  @Input() refY: string | number = '';\n  @Input() position: 'start' | 'end' = 'end';\n\n  namespace = `${carbonPrefix}--cc--marker`;\n\n  setAttributes = ({ d, id, height, width }: { d: string, id: string, height: number, width: number }) => {\n    const xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5;\n    const yPos = height / 2;\n\n    this.d = this.d || d;\n    this.id = this.id || id;\n    this.height = this.height || height;\n    this.width = this.width || width;\n    this.refX = this.refX || xPos;\n    this.refY = this.refY || yPos;\n  };\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowLeft });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowRight });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...circle });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...diamond });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...square });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...tee });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerSquareComponent",
            "id": "component-MarkerSquareComponent-7686c64219aacd42c62ad97351cb838cf435830a65e51a9c121576c2daf97e8fdc8505136d7be50739736ac6b9d4383b4c061af47dfb5fde08211616cd0c35e1",
            "file": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-square]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  arrowLeft,\n  arrowRight,\n  circle,\n  diamond,\n  square,\n  tee,\n} from '@carbon/charts/components/diagrams/markerDefinitions';\n\nimport { carbonPrefix } from '../configs';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n  selector: '[ibm-graph-marker]',\n  template,\n})\nexport class MarkerComponent {\n  @Input() d = '';\n  @Input() color = '';\n  @Input() id = '';\n  @Input() orient: string | number = 'auto';\n  @Input() height: string | number = '';\n  @Input() width: string | number = '';\n  @Input() refX: string | number = '';\n  @Input() refY: string | number = '';\n  @Input() position: 'start' | 'end' = 'end';\n\n  namespace = `${carbonPrefix}--cc--marker`;\n\n  setAttributes = ({ d, id, height, width }: { d: string, id: string, height: number, width: number }) => {\n    const xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5;\n    const yPos = height / 2;\n\n    this.d = this.d || d;\n    this.id = this.id || id;\n    this.height = this.height || height;\n    this.width = this.width || width;\n    this.refX = this.refX || xPos;\n    this.refY = this.refY || yPos;\n  };\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowLeft });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowRight });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...circle });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...diamond });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...square });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...tee });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MarkerTeeComponent",
            "id": "component-MarkerTeeComponent-7686c64219aacd42c62ad97351cb838cf435830a65e51a9c121576c2daf97e8fdc8505136d7be50739736ac6b9d4383b4c061af47dfb5fde08211616cd0c35e1",
            "file": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[ibm-graph-marker-tee]",
            "styleUrls": [],
            "styles": [],
            "template": "`<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "d",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "orient",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "position",
                    "defaultValue": "'end'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "\"start\" | \"end\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refX",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "refY",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | number",
                    "decorators": [],
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--marker`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                },
                {
                    "name": "setAttributes",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "inheritance": {
                        "file": "MarkerComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  arrowLeft,\n  arrowRight,\n  circle,\n  diamond,\n  square,\n  tee,\n} from '@carbon/charts/components/diagrams/markerDefinitions';\n\nimport { carbonPrefix } from '../configs';\n\nconst template = `\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`;\n\n@Component({\n  selector: '[ibm-graph-marker]',\n  template,\n})\nexport class MarkerComponent {\n  @Input() d = '';\n  @Input() color = '';\n  @Input() id = '';\n  @Input() orient: string | number = 'auto';\n  @Input() height: string | number = '';\n  @Input() width: string | number = '';\n  @Input() refX: string | number = '';\n  @Input() refY: string | number = '';\n  @Input() position: 'start' | 'end' = 'end';\n\n  namespace = `${carbonPrefix}--cc--marker`;\n\n  setAttributes = ({ d, id, height, width }: { d: string, id: string, height: number, width: number }) => {\n    const xPos = this.position === 'end' ? width / 2 + 0.5 : 0.5;\n    const yPos = height / 2;\n\n    this.d = this.d || d;\n    this.id = this.id || id;\n    this.height = this.height || height;\n    this.width = this.width || width;\n    this.refX = this.refX || xPos;\n    this.refY = this.refY || yPos;\n  };\n}\n\n@Component({ selector: '[ibm-graph-marker-arrow-left]', template })\nexport class MarkerArrowLeftComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowLeft });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-arrow-right]', template })\nexport class MarkerArrowRightComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...arrowRight });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-circle]', template })\nexport class MarkerShapeNodeComponent\n  extends MarkerComponent\n  implements OnInit\n{\n  ngOnInit() {\n    this.setAttributes({ ...circle });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-diamond]', template })\nexport class MarkerDiamondComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...diamond });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-square]', template })\nexport class MarkerSquareComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...square });\n  }\n}\n@Component({ selector: '[ibm-graph-marker-tee]', template })\nexport class MarkerTeeComponent extends MarkerComponent implements OnInit {\n  ngOnInit() {\n    this.setAttributes({ ...tee });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "MarkerComponent",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MeterChartComponent",
            "id": "component-MeterChartComponent-9472e2d46f20f0958e23b216911171c0d9180174c65c33691d2ab8a5d66d44c2c90a4a8d83286e8bbb72197745e06c0da5c163ee3ac7e267c33470a378451340",
            "file": "projects/charts-angular/src/lib/meter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-meter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>MeterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `MeterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\nimport { MeterChart } from '@carbon/charts';\n\n/**\n * Wrapper around `MeterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-meter-chart',\n  template: ``,\n})\nexport class MeterChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new MeterChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "PieChartComponent",
            "id": "component-PieChartComponent-b367b598121b9b7c532cd65d3045fb4185cd0f5d961b0120369b161b2d9e6f6409563c81da9ab20c8510475710f084e9ac939758c43d07b158c71aa4c9e64879",
            "file": "projects/charts-angular/src/lib/pie-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-pie-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>PieChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `PieChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { PieChart } from '@carbon/charts';\n\n/**\n * Wrapper around `PieChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-pie-chart',\n  template: ``,\n})\nexport class PieChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new PieChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "RadarChartComponent",
            "id": "component-RadarChartComponent-64d17050a6d1e5dd1200dd5e213b0e862c7a32d54baaedbe6cadcb66e3cf9ab661edb7cdfc07ec78ff3229350d8ee2bfbe61ba7b29e28566d758e90dff189f5a",
            "file": "projects/charts-angular/src/lib/radar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-radar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>RadarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `RadarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { RadarChart } from '@carbon/charts';\n\n/**\n * Wrapper around `RadarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-radar-chart',\n  template: ``,\n})\nexport class RadarChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new RadarChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ScatterChartComponent",
            "id": "component-ScatterChartComponent-35374b49a8cef165d0c8759548ed54fac55b2c88cbfdb8250099153cdb8b14d26c5742a516fa0e7c6c74ed914654147aadce25716bb06a704f4395da3d916f0b",
            "file": "projects/charts-angular/src/lib/scatter-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-scatter-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>ScatterChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `ScatterChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { ScatterChart } from '@carbon/charts';\n\n/**\n * Wrapper around `ScatterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-scatter-chart',\n  template: ``,\n})\nexport class ScatterChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new ScatterChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ShapeNodeComponent",
            "id": "component-ShapeNodeComponent-eee17b5bf07181b33a175019dffedfc893c3776a1329213fde6ead228a3f3490379af0dffce04196018f065e57e9eafd5274c3fa7d02fd1f55b9ee0af30aff06",
            "file": "projects/charts-angular/src/stories/diagrams/shape-node/shape-node.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-diagram-shape-node",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container [ngSwitch]=\"component\">\n  <xhtml:div\n    *ngSwitchCase=\"'div'\"\n    [ngClass]=\"[\n      namespace,\n      stacked ? namespace + '--stacked' : '',\n      shape ? namespace + '--' + shape : '',\n      namespace + '--' + component\n    ]\"\n    [ngStyle]=\"{\n      'height.px': size,\n      'width.px': size,\n      position: position\n    }\"\n    (mouseenter)=\"mouseEnter.emit($event)\"\n    (mouseover)=\"mouseOver.emit($event)\"\n    (mouseout)=\"mouseOut.emit($event)\"\n    (mouseleave)=\"mouseLeave.emit($event)\"\n    (mousemove)=\"mouseMove.emit($event)\"\n    tabindex=\"0\"\n  >\n    <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n  </xhtml:div>\n\n  <xhtml:button\n    *ngSwitchCase=\"'button'\"\n    [ngClass]=\"[\n      namespace,\n      stacked ? namespace + '--stacked' : '',\n      shape ? namespace + '--' + shape : '',\n      namespace + '--' + component\n    ]\"\n    [ngStyle]=\"{\n      'height.px': size,\n      'width.px': size,\n      position: position\n    }\"\n    (click)=\"click.emit($event)\"\n    (mouseenter)=\"mouseEnter.emit($event)\"\n    (mouseover)=\"mouseOver.emit($event)\"\n    (mouseout)=\"mouseOut.emit($event)\"\n    (mouseleave)=\"mouseLeave.emit($event)\"\n    (mousemove)=\"mouseMove.emit($event)\"\n    tabindex=\"0\"\n  >\n    <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n  </xhtml:button>\n\n  <xhtml:a\n    *ngSwitchCase=\"'a'\"\n    [ngClass]=\"[\n      namespace,\n      stacked ? namespace + '--stacked' : '',\n      shape ? namespace + '--' + shape : '',\n      namespace + '--' + component\n    ]\"\n    [attr.href]=\"href\"\n    [ngStyle]=\"{\n      'height.px': size,\n      'width.px': size,\n      position: position\n    }\"\n    (mouseenter)=\"mouseEnter.emit($event)\"\n    (mouseover)=\"mouseOver.emit($event)\"\n    (mouseout)=\"mouseOut.emit($event)\"\n    (mouseleave)=\"mouseLeave.emit($event)\"\n    (mousemove)=\"mouseMove.emit($event)\"\n    tabindex=\"0\"\n  >\n    <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n  </xhtml:a>\n</ng-container>\n\n<ng-template #nodeTemplate>\n  <div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n    <ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n  </div>\n  <div\n    attr.class=\"{{ namespace + '__body' }}\"\n    [ngStyle]=\"{ position: bodyPosition }\"\n  >\n    <div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n    <div attr.class=\"{{ namespace + '__subtitle' }}\">\n      {{ subtitle }}\n    </div>\n  </div>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "as",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 105,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bodyPosition",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 114,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'fixed'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "renderIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "'circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "\"circle\" | \"square\" | \"rounded-square\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "48",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "stacked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 111,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 116,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseEnter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 117,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseLeave",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 120,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseMove",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 121,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 119,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "mouseOver",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 118,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "'div'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "namespace",
                    "defaultValue": "`${carbonPrefix}--cc--shape-node`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 123
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  OnInit,\n} from '@angular/core';\n\nimport { carbonPrefix } from '../configs';\n\n@Component({\n  selector: 'ibm-diagram-shape-node',\n  template: `\n    <ng-container [ngSwitch]=\"component\">\n      <xhtml:div\n        *ngSwitchCase=\"'div'\"\n        [ngClass]=\"[\n          namespace,\n          stacked ? namespace + '--stacked' : '',\n          shape ? namespace + '--' + shape : '',\n          namespace + '--' + component\n        ]\"\n        [ngStyle]=\"{\n          'height.px': size,\n          'width.px': size,\n          position: position\n        }\"\n        (mouseenter)=\"mouseEnter.emit($event)\"\n        (mouseover)=\"mouseOver.emit($event)\"\n        (mouseout)=\"mouseOut.emit($event)\"\n        (mouseleave)=\"mouseLeave.emit($event)\"\n        (mousemove)=\"mouseMove.emit($event)\"\n        tabindex=\"0\"\n      >\n        <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n      </xhtml:div>\n\n      <xhtml:button\n        *ngSwitchCase=\"'button'\"\n        [ngClass]=\"[\n          namespace,\n          stacked ? namespace + '--stacked' : '',\n          shape ? namespace + '--' + shape : '',\n          namespace + '--' + component\n        ]\"\n        [ngStyle]=\"{\n          'height.px': size,\n          'width.px': size,\n          position: position\n        }\"\n        (click)=\"click.emit($event)\"\n        (mouseenter)=\"mouseEnter.emit($event)\"\n        (mouseover)=\"mouseOver.emit($event)\"\n        (mouseout)=\"mouseOut.emit($event)\"\n        (mouseleave)=\"mouseLeave.emit($event)\"\n        (mousemove)=\"mouseMove.emit($event)\"\n        tabindex=\"0\"\n      >\n        <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n      </xhtml:button>\n\n      <xhtml:a\n        *ngSwitchCase=\"'a'\"\n        [ngClass]=\"[\n          namespace,\n          stacked ? namespace + '--stacked' : '',\n          shape ? namespace + '--' + shape : '',\n          namespace + '--' + component\n        ]\"\n        [attr.href]=\"href\"\n        [ngStyle]=\"{\n          'height.px': size,\n          'width.px': size,\n          position: position\n        }\"\n        (mouseenter)=\"mouseEnter.emit($event)\"\n        (mouseover)=\"mouseOver.emit($event)\"\n        (mouseout)=\"mouseOut.emit($event)\"\n        (mouseleave)=\"mouseLeave.emit($event)\"\n        (mousemove)=\"mouseMove.emit($event)\"\n        tabindex=\"0\"\n      >\n        <ng-container *ngTemplateOutlet=\"nodeTemplate\"></ng-container>\n      </xhtml:a>\n    </ng-container>\n\n    <ng-template #nodeTemplate>\n      <div *ngIf=\"renderIcon\" attr.class=\"{{ namespace + '__icon' }}\">\n        <ng-container *ngTemplateOutlet=\"renderIcon\"></ng-container>\n      </div>\n      <div\n        attr.class=\"{{ namespace + '__body' }}\"\n        [ngStyle]=\"{ position: bodyPosition }\"\n      >\n        <div attr.class=\"{{ namespace + '__title' }}\">{{ title }}</div>\n        <div attr.class=\"{{ namespace + '__subtitle' }}\">\n          {{ subtitle }}\n        </div>\n      </div>\n    </ng-template>\n  `,\n})\nexport class ShapeNodeComponent implements OnInit {\n  @Input() as = 'div';\n  @Input() href = '';\n  @Input() renderIcon?: TemplateRef<any>;\n  @Input() size = 48;\n  @Input() stacked = false;\n  @Input() shape: 'circle' | 'square' | 'rounded-square' = 'circle';\n  @Input() subtitle = '';\n  @Input() title = '';\n  @Input() position: string = 'fixed';\n  @Input() bodyPosition: string = 'absolute';\n\n  @Output() click: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseEnter: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseOver: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseOut: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseLeave: EventEmitter<any> = new EventEmitter<any>();\n  @Output() mouseMove: EventEmitter<any> = new EventEmitter<any>();\n\n  namespace = `${carbonPrefix}--cc--shape-node`;\n  component = 'div';\n\n  ngOnInit() {\n    if (this.href) {\n      this.component = 'a';\n    } else {\n      this.component = this.as;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SimpleBarChartComponent",
            "id": "component-SimpleBarChartComponent-aeaf5eed12ff237c839110afc37c47565430f175d96f9fe7e8689f29f56b1dfcd7e6229b8a8986343ecb4ac32b6bfe470137dc1b41511c3f077af25254662e7b",
            "file": "projects/charts-angular/src/lib/bar-chart-simple.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-simple-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>SimpleBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `SimpleBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { SimpleBarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `SimpleBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-simple-bar-chart\",\n\ttemplate: ``\n})\nexport class SimpleBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new SimpleBarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedAreaChartComponent",
            "id": "component-StackedAreaChartComponent-7dc4f9d80d2d6be5a9d77e7d08de064316bf5a49d903dea7dfc1a42e8ab3ba6f427191d3eba287cbad44f03e3d6a8191cc641aeadaefcde427b431af9e1c0c40",
            "file": "projects/charts-angular/src/lib/area-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-area-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedAreaChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedAreaChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { StackedAreaChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `StackedAreaChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-stacked-area-chart\",\n\ttemplate: ``\n})\nexport class StackedAreaChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new StackedAreaChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "StackedBarChartComponent",
            "id": "component-StackedBarChartComponent-fdf41c1057cc72f550ad5c834627ee3580c4f32b16bf506fa0eb2fb677f6fd7f28da486c0b49f8bd65c335fbddc7a7c58870fae7fa49068c4a60bb086c02015f",
            "file": "projects/charts-angular/src/lib/bar-chart-stacked.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-stacked-bar-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>StackedBarChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `StackedBarChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { StackedBarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `StackedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-stacked-bar-chart\",\n\ttemplate: ``\n})\nexport class StackedBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\toverride ngAfterViewInit() {\n\t\tthis.chart = new StackedBarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreeChartComponent",
            "id": "component-TreeChartComponent-764cf47670333bd38c8c8b123390d8a5b63e98cba424f4a1c7da920bdbee3c75033021f1c00ecb8a4db927e5ecd9d6ec11072b1bc1b22e0a542bfb5287f50502",
            "file": "projects/charts-angular/src/lib/tree-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-tree-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreeChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreeChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { TreeChart } from '@carbon/charts';\n\n/**\n * Wrapper around `TreeChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-tree-chart',\n  template: ``,\n})\nexport class TreeChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new TreeChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "TreemapChartComponent",
            "id": "component-TreemapChartComponent-e6d19a14008e4e3c5640b5e511668fa944769cf3c57b6553ae8f02bb7c74707414856ec7636d93a2154a85e38f41ce694a2e5a44401ea01e7ef918394a1496e8",
            "file": "projects/charts-angular/src/lib/treemap-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-treemap-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>TreemapChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `TreemapChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { TreemapChart } from '@carbon/charts';\n\n/**\n * Wrapper around `TreemapChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-treemap-chart',\n  template: ``,\n})\nexport class TreemapChartComponent extends BaseChart implements AfterViewInit {\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new TreemapChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "WordCloudChartComponent",
            "id": "component-WordCloudChartComponent-b57431ff09f1d143604b2522c1ea94b4c9042b74bd00793471995aac0dd897964be3dfd9936f5631374ec395cce12eaed6650d7e548d4a25830df1fdd762cd84",
            "file": "projects/charts-angular/src/lib/wordcloud-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ibm-wordcloud-chart",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nData passed to charts library for displaying\n",
                    "description": "<p>Data passed to charts library for displaying</p>\n",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart height\n",
                    "description": "<p>Chart height</p>\n",
                    "line": 67,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptions passed to charts library\n",
                    "description": "<p>Options passed to charts library</p>\n",
                    "line": 43,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChart width\n",
                    "description": "<p>Chart width</p>\n",
                    "line": 62,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>Chart object instance</p>\n<p>You can use this to do whatever you would normally do with a chart if you used\ncharts library directly.</p>\n",
                    "line": 80,
                    "rawdescription": "\n\nChart object instance\n\nYou can use this to do whatever you would normally do with a chart if you used\ncharts library directly.\n",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "chartRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "<p>Chart container element ref</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nChart container element ref\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nChart'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRuns after view init to create a chart, attach it to `elementRef` and draw it.\n",
                    "description": "<p>Runs after view init to create a chart, attach it to <code>elementRef</code> and draw it.</p>\n",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseChart"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseChart"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper around <code>WordCloudChart</code> in carbon charts library</p>\n<p>Most functions just call their equivalent from the chart library.</p>\n",
            "rawdescription": "\n\nWrapper around `WordCloudChart` in carbon charts library\n\nMost functions just call their equivalent from the chart library.\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit } from '@angular/core';\n\nimport { BaseChart } from './base-chart.component';\n\nimport { WordCloudChart } from '@carbon/charts';\n\n/**\n * Wrapper around `WordCloudChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n  selector: 'ibm-wordcloud-chart',\n  template: ``,\n})\nexport class WordCloudChartComponent\n  extends BaseChart\n  implements AfterViewInit\n{\n  /**\n   * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n   */\n  override ngAfterViewInit() {\n    this.chart = new WordCloudChart(this.elementRef.nativeElement, {\n      data: this.data,\n      options: this.options,\n    });\n\n    Object.assign(this, this.chart);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "BaseChart",
            "implements": [
                "AfterViewInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "CardNodeModule",
            "id": "module-CardNodeModule-b85ec936a318588f60dc3937ec1b149fc739f2188486480c91e6d3fad4e9310899295abbc0fb6fcd847cb1c8c42179e90ff23178faf046b319d15c7815bfcafd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/stories/diagrams/card-node/card-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardNodeComponent } from './card-node.component';\nimport { CardNodeColumnComponent } from './card-node-column.component';\nimport { CardNodeLabelComponent } from './card-node-label.component';\nimport { CardNodeSubtitleComponent } from './card-node-subtitle.component';\nimport { CardNodeTitleComponent } from './card-node-title.component';\nexport {\n  CardNodeComponent,\n  CardNodeColumnComponent,\n  CardNodeLabelComponent,\n  CardNodeSubtitleComponent,\n  CardNodeTitleComponent,\n};\n@NgModule({\n  declarations: [\n    CardNodeComponent,\n    CardNodeColumnComponent,\n    CardNodeLabelComponent,\n    CardNodeSubtitleComponent,\n    CardNodeTitleComponent,\n  ],\n  exports: [\n    CardNodeComponent,\n    CardNodeColumnComponent,\n    CardNodeLabelComponent,\n    CardNodeSubtitleComponent,\n    CardNodeTitleComponent,\n  ],\n  imports: [CommonModule],\n})\nexport class CardNodeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardNodeColumnComponent"
                        },
                        {
                            "name": "CardNodeComponent"
                        },
                        {
                            "name": "CardNodeLabelComponent"
                        },
                        {
                            "name": "CardNodeSubtitleComponent"
                        },
                        {
                            "name": "CardNodeTitleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardNodeColumnComponent"
                        },
                        {
                            "name": "CardNodeComponent"
                        },
                        {
                            "name": "CardNodeLabelComponent"
                        },
                        {
                            "name": "CardNodeSubtitleComponent"
                        },
                        {
                            "name": "CardNodeTitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartsModule",
            "id": "module-ChartsModule-d6fb5fd85fd27d9e1efead37ec70ac04160b3bd95a1bd69df5b89f32c829c234d4de799222d4e9f6ef68abd7dab53195832f4db3200a82f64a5b3ef03d94d9c9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/lib/charts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport {\n\tAlluvialChartComponent,\n\tAreaChartComponent,\n\tBaseChart,\n\tBoxplotChartComponent,\n\tBubbleChartComponent,\n\tBulletChartComponent,\n\tCirclePackChartComponent,\n\tComboChartComponent,\n\tDonutChartComponent,\n\tGaugeChartComponent,\n\tGroupedBarChartComponent,\n\tHeatmapChartComponent,\n\tHistogramChartComponent,\n\tLineChartComponent,\n\tLollipopChartComponent,\n\tMeterChartComponent,\n\tPieChartComponent,\n\tRadarChartComponent,\n\tScatterChartComponent,\n\tSimpleBarChartComponent,\n\tStackedAreaChartComponent,\n\tStackedBarChartComponent,\n\tTreeChartComponent,\n\tTreemapChartComponent,\n\tWordCloudChartComponent\n} from './index'\n\n@NgModule({\n\timports: [CommonModule],\n\tdeclarations: [\n\t\tBaseChart,\n\t\tAlluvialChartComponent,\n\t\tAreaChartComponent,\n\t\tStackedAreaChartComponent,\n\t\tSimpleBarChartComponent,\n\t\tGroupedBarChartComponent,\n\t\tStackedBarChartComponent,\n\t\tBoxplotChartComponent,\n\t\tBubbleChartComponent,\n\t\tBulletChartComponent,\n\t\tDonutChartComponent,\n\t\tGaugeChartComponent,\n\t\tHeatmapChartComponent,\n\t\tHistogramChartComponent,\n\t\tLineChartComponent,\n\t\tLollipopChartComponent,\n\t\tPieChartComponent,\n\t\tScatterChartComponent,\n\t\tMeterChartComponent,\n\t\tRadarChartComponent,\n\t\tComboChartComponent,\n\t\tTreeChartComponent,\n\t\tTreemapChartComponent,\n\t\tCirclePackChartComponent,\n\t\tWordCloudChartComponent\n\t],\n\texports: [\n\t\tBaseChart,\n\t\tAlluvialChartComponent,\n\t\tAreaChartComponent,\n\t\tStackedAreaChartComponent,\n\t\tSimpleBarChartComponent,\n\t\tGroupedBarChartComponent,\n\t\tStackedBarChartComponent,\n\t\tBoxplotChartComponent,\n\t\tBubbleChartComponent,\n\t\tBulletChartComponent,\n\t\tDonutChartComponent,\n\t\tGaugeChartComponent,\n\t\tHeatmapChartComponent,\n\t\tHistogramChartComponent,\n\t\tLineChartComponent,\n\t\tLollipopChartComponent,\n\t\tPieChartComponent,\n\t\tScatterChartComponent,\n\t\tMeterChartComponent,\n\t\tRadarChartComponent,\n\t\tComboChartComponent,\n\t\tTreeChartComponent,\n\t\tTreemapChartComponent,\n\t\tCirclePackChartComponent,\n\t\tWordCloudChartComponent\n\t]\n})\nexport class ChartsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlluvialChartComponent"
                        },
                        {
                            "name": "AreaChartComponent"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChartComponent"
                        },
                        {
                            "name": "BubbleChartComponent"
                        },
                        {
                            "name": "BulletChartComponent"
                        },
                        {
                            "name": "CirclePackChartComponent"
                        },
                        {
                            "name": "ComboChartComponent"
                        },
                        {
                            "name": "DonutChartComponent"
                        },
                        {
                            "name": "GaugeChartComponent"
                        },
                        {
                            "name": "GroupedBarChartComponent"
                        },
                        {
                            "name": "HeatmapChartComponent"
                        },
                        {
                            "name": "HistogramChartComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        },
                        {
                            "name": "LollipopChartComponent"
                        },
                        {
                            "name": "MeterChartComponent"
                        },
                        {
                            "name": "PieChartComponent"
                        },
                        {
                            "name": "RadarChartComponent"
                        },
                        {
                            "name": "ScatterChartComponent"
                        },
                        {
                            "name": "SimpleBarChartComponent"
                        },
                        {
                            "name": "StackedAreaChartComponent"
                        },
                        {
                            "name": "StackedBarChartComponent"
                        },
                        {
                            "name": "TreeChartComponent"
                        },
                        {
                            "name": "TreemapChartComponent"
                        },
                        {
                            "name": "WordCloudChartComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AlluvialChartComponent"
                        },
                        {
                            "name": "AreaChartComponent"
                        },
                        {
                            "name": "BaseChart"
                        },
                        {
                            "name": "BoxplotChartComponent"
                        },
                        {
                            "name": "BubbleChartComponent"
                        },
                        {
                            "name": "BulletChartComponent"
                        },
                        {
                            "name": "CirclePackChartComponent"
                        },
                        {
                            "name": "ComboChartComponent"
                        },
                        {
                            "name": "DonutChartComponent"
                        },
                        {
                            "name": "GaugeChartComponent"
                        },
                        {
                            "name": "GroupedBarChartComponent"
                        },
                        {
                            "name": "HeatmapChartComponent"
                        },
                        {
                            "name": "HistogramChartComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        },
                        {
                            "name": "LollipopChartComponent"
                        },
                        {
                            "name": "MeterChartComponent"
                        },
                        {
                            "name": "PieChartComponent"
                        },
                        {
                            "name": "RadarChartComponent"
                        },
                        {
                            "name": "ScatterChartComponent"
                        },
                        {
                            "name": "SimpleBarChartComponent"
                        },
                        {
                            "name": "StackedAreaChartComponent"
                        },
                        {
                            "name": "StackedBarChartComponent"
                        },
                        {
                            "name": "TreeChartComponent"
                        },
                        {
                            "name": "TreemapChartComponent"
                        },
                        {
                            "name": "WordCloudChartComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EdgeModule",
            "id": "module-EdgeModule-f412de65b18bfee5d3ff3a6c4191b4b777895a2aa2435423cef4e88b7ed5e2a19c51ba22d0bf7dbf48de37fee96ab9147b8857939560734df511e3961e4bb31c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/stories/diagrams/edge/edge.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { EdgeComponent } from \"./edge.component\";\nexport { EdgeComponent } from \"./edge.component\";\n\n@NgModule({\n\tdeclarations: [EdgeComponent],\n\texports: [EdgeComponent],\n\timports: [CommonModule]\n})\nexport class EdgeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EdgeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "EdgeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MarkerModule",
            "id": "module-MarkerModule-c7f46f79cad3b3852b557e9b26c6645b40493723c1e945f3e0e62171eb8cab610985ef37e7e19afa88abda669cd0d41aaaf308a782d6984aa37fcfbe17b65161",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/stories/diagrams/marker/marker.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n\tMarkerComponent,\n\tMarkerArrowLeftComponent,\n\tMarkerArrowRightComponent,\n\tMarkerShapeNodeComponent,\n\tMarkerDiamondComponent,\n\tMarkerSquareComponent,\n\tMarkerTeeComponent\n} from \"./marker.component\";\n\nexport {\n\tMarkerComponent,\n\tMarkerArrowLeftComponent,\n\tMarkerArrowRightComponent,\n\tMarkerShapeNodeComponent,\n\tMarkerDiamondComponent,\n\tMarkerSquareComponent,\n\tMarkerTeeComponent\n};\n@NgModule({\n\tdeclarations: [\n\t\tMarkerComponent,\n\t\tMarkerArrowLeftComponent,\n\t\tMarkerArrowRightComponent,\n\t\tMarkerShapeNodeComponent,\n\t\tMarkerDiamondComponent,\n\t\tMarkerSquareComponent,\n\t\tMarkerTeeComponent\n\t],\n\texports: [\n\t\tMarkerComponent,\n\t\tMarkerArrowLeftComponent,\n\t\tMarkerArrowRightComponent,\n\t\tMarkerShapeNodeComponent,\n\t\tMarkerDiamondComponent,\n\t\tMarkerSquareComponent,\n\t\tMarkerTeeComponent\n\t],\n\timports: [CommonModule]\n})\nexport class MarkerModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MarkerArrowLeftComponent"
                        },
                        {
                            "name": "MarkerArrowRightComponent"
                        },
                        {
                            "name": "MarkerComponent"
                        },
                        {
                            "name": "MarkerDiamondComponent"
                        },
                        {
                            "name": "MarkerShapeNodeComponent"
                        },
                        {
                            "name": "MarkerSquareComponent"
                        },
                        {
                            "name": "MarkerTeeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MarkerArrowLeftComponent"
                        },
                        {
                            "name": "MarkerArrowRightComponent"
                        },
                        {
                            "name": "MarkerComponent"
                        },
                        {
                            "name": "MarkerDiamondComponent"
                        },
                        {
                            "name": "MarkerShapeNodeComponent"
                        },
                        {
                            "name": "MarkerSquareComponent"
                        },
                        {
                            "name": "MarkerTeeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShapeNodeModule",
            "id": "module-ShapeNodeModule-962c05865aa10e0e08bea77d2e4503e2fccc581e20dc3ecfc980caf2cdb15306fe86995a9b84057e257e4fceab0677dee8c11ca02868e8696799729feb297e1d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/charts-angular/src/stories/diagrams/shape-node/shape-node.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShapeNodeComponent } from './shape-node.component';\nexport { ShapeNodeComponent } from './shape-node.component';\n\n@NgModule({\n  declarations: [ShapeNodeComponent],\n  exports: [ShapeNodeComponent],\n  imports: [CommonModule],\n})\nexport class ShapeNodeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShapeNodeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShapeNodeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "carbonPrefix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/configs.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'cds'"
            },
            {
                "name": "circleSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: ['../src/stories/**/*.mdx', '../src/stories/**/*.stories.@(js|jsx|ts|tsx)'],\n  addons: [\"@storybook/addon-links\", {\n    name: '@storybook/addon-essentials',\n    options: {\n      actions: false,\n      backgrounds: false,\n      controls: true,\n      docs: false,\n      viewport: false,\n      toolbars: true,\n      measure: false,\n      outline: false\n    }\n  }, \"@storybook/addon-interactions\"],\n  framework: {\n    name: \"@storybook/angular\",\n    options: {}\n  },\n  docs: {\n    autodocs: \"tag\"\n  },\n  staticDirs: ['./assets'],\n  features: {\n    storyStoreV7: false\n  }\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "edgeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { source: 'a', target: 'b', variant: 'dash-md' },\n  {\n    source: 'c',\n    target: 'b',\n    path: (source: any, target: any) => buildElbowPathString(source, target),\n  },\n  {\n    source: 'd',\n    target: 'c',\n    path: (source: any, target: any) => buildElbowPathString(source, target),\n    variant: 'tunnel',\n  },\n]"
            },
            {
                "name": "edgeMapped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "edgeData.map((link) => {\n  const sourceNode = nodeData.find((node) => node.id === link.source);\n  const targetNode = nodeData.find((node) => node.id === link.target);\n\n  return {\n    ...link,\n    source: {\n      x: sourceNode!.x + sourceNode!.nodeWidth / 2,\n      y: sourceNode!.y + sourceNode!.nodeHeight / 2,\n    },\n    target: {\n      x: targetNode!.x + targetNode!.nodeWidth / 2,\n      y: targetNode!.y + targetNode!.nodeHeight / 2,\n    },\n  };\n})"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(demo: Demo) => `\n\t<div class=\"container theme--white\">\n\t\t<div class=\"v10-banner\">\n\t\t\tThis version relies on <b>Carbon v11</b>. If you're using Carbon v10, <a href=\"https://carbon-charts-0x.netlify.app\" target=\"_blank\" rel=\"noreferrer\">see the legacy demo site</a>\n\t\t</div>\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"cds--tag cds--tag--green component-name\">${demo.chartType.angular}</span>\n\t\t</h3>\n\t\t<p class=\"props\">\n\t\t  <b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a>\n\t\t</p>\n\t\t<div class=\"marginTop-30\" id=\"chart-demo\">\n\t\t\t<${demo.chartType.angular}\n\t\t\t\tclass=\"n-chart\"\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[options]=\"options\"\n\t\t\t\t#${demo.chartType.vanilla}>\n\t\t\t</${demo.chartType.angular}>\n\t\t</div>\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\t\t<div class=\"marginTop-30\" *ngFor=\"let codeFile of codeFiles;\">\n\t\t\t<h5>{{codeFile}}</h5>\n\t\t\t<div class=\"cds--snippet cds--snippet--multi cds--snippet--expand marginTop-15\" data-code-snippet>\n\t\t\t\t<div class=\"cds--snippet-container\" aria-label=\"Code Snippet Text\">\n\t\t\t\t\t<pre><code>{{code[codeFile]}}</code></pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/card-node.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(content: string) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${content}\n\t</div>\n`"
            },
            {
                "name": "getTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(content: string) => `\n<div class=\"container theme--white\">\n  ${content}\n</div>\n`"
            },
            {
                "name": "introSection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/all.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Intro', module).add('Welcome', (args: Args) => ({\n\ttemplate: `\n\t\t<div class=\"container intro\">\n\t\t\t<div\n\t\t\tclass=\"welcome__container\"\n\t\t\tstyle=\"background: url(./welcome.png) no-repeat center center fixed; background-size: cover;\">\n\t\t\t\t<div class=\"welcome__content\">\n\t\t\t\t\t<h2 class=\"welcome__heading\">Carbon Charts</h2>\n\t\t\t\t\t<h4 class=\"welcome__heading welcome__heading--subtitle\">(Angular)</h4>\n\t\t\t\t\t<h5 class=\"welcome__heading welcome__heading--other\">Other versions</h5>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com\" class=\"welcome__heading welcome__heading--other\">vanilla</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/react\" class=\"welcome__heading welcome__heading--other\">React</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/vue\" class=\"welcome__heading welcome__heading--other\">Vue</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/svelte\" class=\"welcome__heading welcome__heading--other\">Svelte</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span class=\"netlify\">Deploys by <a href=\"https://netlify.com\" target=\"_blank\">Netlify</a></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`\n}))"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/edge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkSource",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 0, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/edge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 0 }"
            },
            {
                "name": "linkTarget",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/marker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 300, y: 0 }"
            },
            {
                "name": "linkTargetCurve",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/edge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ x: 400, y: 200 }"
            },
            {
                "name": "nodeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n  { id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n  {\n    id: 'c',\n    x: 600,\n    y: 200,\n    icon: 'user',\n    circle: true,\n    nodeWidth: circleSize,\n    nodeHeight: circleSize,\n  },\n  { id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight },\n]"
            },
            {
                "name": "nodeHeight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "64"
            },
            {
                "name": "nodeWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "200"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n\tparameters: {\n\t\tactions: { argTypesRegex: '^on[A-Z].*' },\n\t\tcontrols: {\n\t\t\tmatchers: {\n\t\t\t\tcolor: /(background|color)$/i,\n\t\t\t\tdate: /Date$/\n\t\t\t}\n\t\t}\n\t}\n}"
            },
            {
                "name": "ProgrammaticStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SimpleStatic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
            },
            {
                "name": "stories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "storiesOf('Diagrams', module)"
            },
            {
                "name": "template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/charts-angular/src/stories/diagrams/configs.ts": [
                {
                    "name": "carbonPrefix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/configs.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'cds'"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts": [
                {
                    "name": "circleSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "edgeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { source: 'a', target: 'b', variant: 'dash-md' },\n  {\n    source: 'c',\n    target: 'b',\n    path: (source: any, target: any) => buildElbowPathString(source, target),\n  },\n  {\n    source: 'd',\n    target: 'c',\n    path: (source: any, target: any) => buildElbowPathString(source, target),\n    variant: 'tunnel',\n  },\n]"
                },
                {
                    "name": "edgeMapped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "edgeData.map((link) => {\n  const sourceNode = nodeData.find((node) => node.id === link.source);\n  const targetNode = nodeData.find((node) => node.id === link.target);\n\n  return {\n    ...link,\n    source: {\n      x: sourceNode!.x + sourceNode!.nodeWidth / 2,\n      y: sourceNode!.y + sourceNode!.nodeHeight / 2,\n    },\n    target: {\n      x: targetNode!.x + targetNode!.nodeWidth / 2,\n      y: targetNode!.y + targetNode!.nodeHeight / 2,\n    },\n  };\n})"
                },
                {
                    "name": "nodeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { id: 'a', x: 0, y: 16, icon: 'user', nodeWidth, nodeHeight },\n  { id: 'b', x: 250, y: 16, icon: 'wiki', nodeWidth, nodeHeight },\n  {\n    id: 'c',\n    x: 600,\n    y: 200,\n    icon: 'user',\n    circle: true,\n    nodeWidth: circleSize,\n    nodeHeight: circleSize,\n  },\n  { id: 'd', x: 0, y: 150, icon: 'wiki', nodeWidth, nodeHeight },\n]"
                },
                {
                    "name": "nodeHeight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "64"
                },
                {
                    "name": "nodeWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "200"
                },
                {
                    "name": "ProgrammaticStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"320\" width=\"800\" style=\"margin-top: 1.5em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:g ibm-graph-edge *ngFor=\"let edge of edgeMapped\" [source]=\"edge.source\" [target]=\"edge.target\" [path]=\"edge.path && edge.path(edge.source, edge.target)\" [variant]=\"edge.variant\"></svg:g>\n\t\t\t<svg:foreignObject *ngFor=\"let node of nodeData\" style=\"overflow: visible\" [attr.height]=\"node.nodeHeight\" [attr.width]=\"node.nodeWidth\" attr.transform=\"translate({{node.x}},{{node.y}})\">\n\t\t\t\t<xhtml:div *ngIf=\"node.circle\">\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" [title]=\"'Title'\" [subtitle]=\"'Description'\" [size]=\"circleSize\" [renderIcon]=\"(node.icon === 'user') ? userTemplate : wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t\t<xhtml:div *ngIf=\"!node.circle\">\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #userTemplate>\n\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t</ng-template>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "SimpleStatic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n\t<div class=\"demo-desktop-only\">\n\t\t<div class=\"cp-message\">This is a desktop-only example</div>\n\n\t\t<svg height=\"124\" width=\"600\" style=\"margin-top: 1em;\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<svg:defs>\n\t\t\t\t<svg:marker ibm-graph-marker-arrow-right [id]=\"markerEnd\"></svg:marker>\n\t\t\t</svg:defs>\n\n\t\t\t<svg:g ibm-graph-edge [source]=\"source\" [target]=\"target\" variant=\"dash-sm\" [markerEnd]=\"markerEnd\" ></svg:g>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(0, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-card-node as=\"button\">\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<svg ibmIconUser size=\"20\"></svg>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t\t<ibm-diagram-card-node-column>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t</ibm-diagram-card-node-title>\n\t\t\t\t\t\t\t<ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</ibm-diagram-card-node-subtitle>\n\t\t\t\t\t\t</ibm-diagram-card-node-column>\n\t\t\t\t\t</ibm-diagram-card-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\n\t\t\t<svg:foreignObject style=\"overflow: visible\" [attr.height]=\"nodeHeight\" [attr.width]=\"nodeWidth\" [attr.transform]=\"'translate(400, 16)'\">\n\t\t\t\t<xhtml:div>\n\t\t\t\t\t<ibm-diagram-shape-node as=\"button\" title=\"Title\" [size]=\"circleSize\" [renderIcon]=\"wikiTemplate\"></ibm-diagram-shape-node>\n\t\t\t\t</xhtml:div>\n\t\t\t</svg:foreignObject>\n\t\t</svg>\n\n\t\t<ng-template #wikiTemplate>\n\t\t\t<svg ibmIconWikis size=\"20\"></svg>\n\t\t</ng-template>\n\t</div>\n`"
                },
                {
                    "name": "stories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Diagrams', module)"
                }
            ],
            "projects/charts-angular/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: ['../src/stories/**/*.mdx', '../src/stories/**/*.stories.@(js|jsx|ts|tsx)'],\n  addons: [\"@storybook/addon-links\", {\n    name: '@storybook/addon-essentials',\n    options: {\n      actions: false,\n      backgrounds: false,\n      controls: true,\n      docs: false,\n      viewport: false,\n      toolbars: true,\n      measure: false,\n      outline: false\n    }\n  }, \"@storybook/addon-interactions\"],\n  framework: {\n    name: \"@storybook/angular\",\n    options: {}\n  },\n  docs: {\n    autodocs: \"tag\"\n  },\n  staticDirs: ['./assets'],\n  features: {\n    storyStoreV7: false\n  }\n}"
                }
            ],
            "projects/charts-angular/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/charts-angular/src/stories/all.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(demo: Demo) => `\n\t<div class=\"container theme--white\">\n\t\t<div class=\"v10-banner\">\n\t\t\tThis version relies on <b>Carbon v11</b>. If you're using Carbon v10, <a href=\"https://carbon-charts-0x.netlify.app\" target=\"_blank\" rel=\"noreferrer\">see the legacy demo site</a>\n\t\t</div>\n\t\t<h3>\n\t\t\t<b>Component:</b>\n\t\t\t<span class=\"cds--tag cds--tag--green component-name\">${demo.chartType.angular}</span>\n\t\t</h3>\n\t\t<p class=\"props\">\n\t\t  <b>Props:</b> data, <a href=\"https://carbon-design-system.github.io/carbon-charts/documentation/modules/_interfaces_charts_.html\" target=\"_blank\">options</a>\n\t\t</p>\n\t\t<div class=\"marginTop-30\" id=\"chart-demo\">\n\t\t\t<${demo.chartType.angular}\n\t\t\t\tclass=\"n-chart\"\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[options]=\"options\"\n\t\t\t\t#${demo.chartType.vanilla}>\n\t\t\t</${demo.chartType.angular}>\n\t\t</div>\n\t\t<h3 class=\"marginTop-30\">Code sample</h3>\n\t\t<div class=\"marginTop-30\" *ngFor=\"let codeFile of codeFiles;\">\n\t\t\t<h5>{{codeFile}}</h5>\n\t\t\t<div class=\"cds--snippet cds--snippet--multi cds--snippet--expand marginTop-15\" data-code-snippet>\n\t\t\t\t<div class=\"cds--snippet-container\" aria-label=\"Code Snippet Text\">\n\t\t\t\t\t<pre><code>{{code[codeFile]}}</code></pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>`"
                },
                {
                    "name": "introSection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/all.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "storiesOf('Intro', module).add('Welcome', (args: Args) => ({\n\ttemplate: `\n\t\t<div class=\"container intro\">\n\t\t\t<div\n\t\t\tclass=\"welcome__container\"\n\t\t\tstyle=\"background: url(./welcome.png) no-repeat center center fixed; background-size: cover;\">\n\t\t\t\t<div class=\"welcome__content\">\n\t\t\t\t\t<h2 class=\"welcome__heading\">Carbon Charts</h2>\n\t\t\t\t\t<h4 class=\"welcome__heading welcome__heading--subtitle\">(Angular)</h4>\n\t\t\t\t\t<h5 class=\"welcome__heading welcome__heading--other\">Other versions</h5>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com\" class=\"welcome__heading welcome__heading--other\">vanilla</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/react\" class=\"welcome__heading welcome__heading--other\">React</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/vue\" class=\"welcome__heading welcome__heading--other\">Vue</a></li>\n\t\t\t\t\t\t<li><a href=\"https://charts.carbondesignsystem.com/svelte\" class=\"welcome__heading welcome__heading--other\">Svelte</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span class=\"netlify\">Deploys by <a href=\"https://netlify.com\" target=\"_blank\">Netlify</a></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`\n}))"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/card-node.stories.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/card-node.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(content: string) => `\n\t<div class=\"container theme--white\" style=\"max-width: 400px;\">\n\t\t${content}\n\t</div>\n`"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/utils.ts": [
                {
                    "name": "getTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(content: string) => `\n<div class=\"container theme--white\">\n  ${content}\n</div>\n`"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/edge.stories.ts": [
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/edge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/edge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 0 }"
                },
                {
                    "name": "linkTargetCurve",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/edge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 400, y: 200 }"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/marker.stories.ts": [
                {
                    "name": "linkSource",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 0, y: 0 }"
                },
                {
                    "name": "linkTarget",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/marker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ x: 300, y: 0 }"
                }
            ],
            "projects/charts-angular/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n\tparameters: {\n\t\tactions: { argTypesRegex: '^on[A-Z].*' },\n\t\tcontrols: {\n\t\t\tmatchers: {\n\t\t\t\tcolor: /(background|color)$/i,\n\t\t\t\tdate: /Date$/\n\t\t\t}\n\t\t}\n\t}\n}"
                }
            ],
            "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts": [
                {
                    "name": "template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n<svg:marker\n\t[ngClass]=\"namespace\"\n\t[attr.markerHeight]=\"height\"\n\t[attr.markerWidth]=\"width\"\n\t[attr.orient]=\"orient\"\n\t[attr.id]=\"id\"\n\t[attr.refX]=\"refX\"\n\t[attr.refY]=\"refY\"\n\tmarkerUnits=\"userSpaceOnUse\">\n\t<svg:path [attr.d]=\"d\" [ngStyle]=\"{'fill': color}\" ></svg:path>\n</svg:marker>\n`"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 28,
        "status": "medium",
        "files": [
            {
                "filePath": "projects/charts-angular/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/lib/alluvial-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlluvialChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/area-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedAreaChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/area-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AreaChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/bar-chart-grouped.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupedBarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/bar-chart-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleBarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/bar-chart-stacked.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedBarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/base-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseChart",
                "coveragePercent": 66,
                "coverageCount": "8/12",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/boxplot-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoxplotChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/bubble-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BubbleChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/bullet-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BulletChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/circle-pack-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CirclePackChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/combo-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComboChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/donut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonutChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/gauge-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GaugeChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/heatmap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeatmapChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/histogram-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HistogramChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/lollipop-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LollipopChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/meter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MeterChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/pie-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PieChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/radar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadarChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/scatter-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScatterChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/tree-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/treemap-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreemapChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/lib/wordcloud-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WordCloudChartComponent",
                "coveragePercent": 72,
                "coverageCount": "8/11",
                "status": "good"
            },
            {
                "filePath": "projects/charts-angular/src/stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/all.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "introSection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "circleSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "edgeMapped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeHeight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nodeWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgrammaticStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleStatic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/0_diagram.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/card-node.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/card-node/card-node-column.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeColumnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/card-node/card-node-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/card-node/card-node-subtitle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeSubtitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/card-node/card-node-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/card-node/card-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardNodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/configs.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "carbonPrefix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/edge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/edge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/edge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTargetCurve",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/edge/edge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EdgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/edge/edge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Coordinates",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkSource",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkTarget",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowLeftComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerArrowRightComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerDiamondComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerShapeNodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerSquareComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkerTeeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/marker/marker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/shape-node/shape-node.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShapeNodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/stories/diagrams/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/charts-angular/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}